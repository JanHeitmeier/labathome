{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/chart.js/dist/chart.js","src/ADCExperimentController.ts","src/AirspeedExperimentController.ts","src/App.ts","src/DevelopCFCController.ts","src/DialogController.ts","src/FFTExperimentController.ts","src/HeaterExperimentController.ts","src/ScreenController.ts","src/flowchart/Flowchart.ts","src/flowchart/FlowchartCompiler.ts","src/flowchart/FlowchartConnector.ts","src/flowchart/FlowchartLink.ts","src/flowchart/FlowchartOperator.ts","src/flowchart/FlowchartOperatorImpl.ts","src/flowchart/SerializeContext.ts","src/flowchart/SimulationManager.ts","src/flowchart/Songs.ts","src/flowchart/TopologicalSorfDFS.ts","src/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","global","factory","this","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","animator","[object Object]","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","initial","currentStep","Math","min","_update","_refresh","Date","now","remaining","running","items","item","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","map$1","0","2","3","4","5","6","7","8","9","A","B","C","D","E","F","b","d","hex","h1","h2","eq","hexString","v","g","isShort","round","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","s","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","map$1$1","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","ret","len","_rgb","_valid","valid","obj","hslString","color","weight","me","c1","c2","w2","w1","val","deg","rotate","index_esm","isPatternOrGradient","value","CanvasGradient","CanvasPattern","getHoverColor","saturate","darken","noop","uid","id","isNullOrUndef","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","overrides","descriptors","getScope$1","node","split","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","almostEquals","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","isNumber","isNaN","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","defineProperty","configurable","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","Set","add","from","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getRelativePosition$1","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","getRelativePosition","binarySearch","metaset","axis","controller","_sorted","iScale","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","optimizedEvaluateItems","position","handler","metasets","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","chartArea","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getAxisItems","rangeMethod","intersectsItem","evaluateAllVisibleItems","Interaction","modes","meta","getDatasetMeta","nearest","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","numberOrZero$1","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","STATIC_POSITIONS","filterByPosition","filter","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","includes","_stack","count","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","update","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","freeze","updatePos","handleMaxPadding","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Proxy","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","setContext","receiver","isScriptable","join","_resolveScriptable","isIndexable","arr","resolver","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","constructor","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRightToLeftAdapter","rectX","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","startIsBefore","shouldStop","endIsBefore","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","last","stop","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","__proto__","easingEffects","_deprecated","fontString","pixelSize","fontStyle","fontFamily","BasePlatform","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","to","c0","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","rej","resolved","animationOptions","colors","properties","numbers","active","show","animations","visible","hide","Animations","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","parsed","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","scaleID","adata","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","parsedValue","NaN","otherScale","_getOtherScale","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","Element","getProps","final","defaultRoutes","formatters","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","offset","tickLength","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grid","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","getPixelForValue","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","_dataset","newControllers","_removeUnreferencedMetasets","order","isDatasetVisible","updateIndex","ControllerClass","getController","getElement","_updateMetasets","reset","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","invalidatePlugins","abstract","version","unregister","DateAdapter","timestamp","amount","unit","weekday","members","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllParsedValues","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","updateElement","grouped","_getStacks","pixels","barThickness","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","_value_","BubbleController","getPixelForDecimal","tooltip","DoughnutController","innerRadius","outerRadius","getter","circumference","_getRotation","_getCircumference","arcs","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","findSegmentEnd","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","interpolate","pointValue","linePoints","firstValue","lastValue","getLineByIndex","sourcePoints","below","getLinesBelow","createBoundaryLine","buildStackLine","boundary","pointsFromSegments","resolveTarget","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","lineLoop","targetLoop","drawfill","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","setWidth","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","CategoryScale","_startValue","_valueRange","_addedLabels","added","lastIndexOf","findOrAddLabel","getDecimalForPixel","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","pathRadiusLine","numberOrZero","param","logarithmic","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","define","amd","globalThis","self","ADCExperimentController","CHART_EACH_INTERVAL","DE_de","utils_1","chart_js_1","ScreenController_1","SerializeContext_1","ScreenController","appManagement","div","counter","seconds","recording","butRecord","butStop","butDelete","tbody","tfirstRow","onclick","resetData","timer","setInterval","sendAndReceive","clearInterval","innerText","xhr","XMLHttpRequest","onerror","log","open","responseType","onload","_a","_b","_c","_d","_e","_f","_g","_h","_j","Values","arrayBuffer","response","byteLength","SerializeContext","readF32","tr","$","HtmlAsFirstChild","Html","children","textContent","toLocaleTimeString","send","./ScreenController","./flowchart/SerializeContext","./utils","chart.js","AirspeedExperimentController","inputSetpointFan","inputServoOL","inputSetpointAirspeed","inputServoCL","inputKP","inputKI","inputKD","onModeChange","querySelectorAll","inp","setBubble","bubble","valueAsNumber","newVal","innerHTML","querySelector","oninput","newMode","buffer","ArrayBuffer","writeU32","writeF32","SetpointAirspeed","Fan","Servo","ActualAirspeed","random","getResult","HeaterExperimentController_1","DevelopCFCController_1","DialogController_1","ADCExperimentController_1","AirspeedExperimentController_1","FFTExperimentController_1","DashboardController","ReportsController","AppController","stateDiv","screenControllers","activeControllerIndex","dialogController","DialogController","state","newIndex","showDIV","State","ControllerState","CREATED","onFirstStart","STARTED","onRestart","hideDIV","onStop","STOPPED","DevelopCFCController","HeaterExperimentController","FFTExperimentController","sc","onCreate","setActiveScreen","id2index","ElementId","app","startup","./ADCExperimentController","./AirspeedExperimentController","./DevelopCFCController","./DialogController","./FFTExperimentController","./HeaterExperimentController","Flowchart_1","FlowchartOptions","operators","caption","globalTypeIndex","posX","posY","configurationData","links","fromOperatorIndex","fromOutput","toOperatorIndex","toInput","fc","Flowchart","triggerDebug","./flowchart/Flowchart","dialog","dialogHeading","dialogBody","dialogFooter","priority","messageText","prepareDialog","fileInput","files","openhandler","deletehandler","thead","tr_head","filename","substring","operationTd","openButton","SvgIcon","deleteButton","FREQUENCIES","INTERVAL","ZEROS","COLORS","butSave","inputFan","newDataset","inputSetpointHeater","inputFanOL","inputSetpointTemperature","inputFanCL","inputTN","inputTV","SetpointTemperature","Heater","ActualTemperature","10","__createBinding","k2","__setModuleDefault","__importStar","mod","__esModule","FlowchartConnector_1","FlowchartCompiler_1","FlowchartLink_1","operatorimpl","SimulationManager_1","canUserEditLinks","canUserMoveOperators","distanceFromArrow","defaultOperatorClass","defaultLinkColor","defaultSelectedLinkColor","linkWidth","multipleLinksOnOutput","multipleLinksOnInput","linkVerticalDecal","currentDebugInfo","lastOutputConnectorClicked","selectedOperator","selectedLink","positionRatio","temporaryLinkSnapped","operatorRegistry","OperatorRegistry","Build","subcontainer","classList","getElementsByClassName","elem","buildMenu","workspace","propertyGridHtmlDiv","flowchartContainerSvgSvg","Svg","linksLayer","operatorsLayer","tempLayer","visibility","defs","markerArrow","markerCircle","temporaryLink","operatorLibActivator","operatorLibDiv","onmouseenter","onmouseleave","unselectOperator","unselectLink","onkeyup","deleteSelectedThing","populateOperatorLib","ti","OperatorName","createOperatorInternal","GlobalTypeIndex","coords","Utils","EventCoordinatesInSVG","MoveTo","RegisterDragging","GlobalOperatorIndex","SelectedLink","Options","PositionRatio","LinkLayer","OperatorsLayer","ToolsLayer","readU32","hash","binaryCount","adressOffset","connectorType","ConnectorType","BOOLEAN","linksToChange","typeIndex2adressOffset2ListOfLinks","SetColor","SetCaption","integerCount","readS32","INTEGER","floatsCount","FLOAT","colorsCount","COLOR","ColorNumColor2ColorDomString","unsetTemporaryLink","GetLinkpoint","setTemporaryLink","onmouseup","onmousemove","_notifyGlobalMouseupWithLink","_notifyGlobalMousemoveWithLink","LinksLength","Type","createLink","SelectOperator","link","selectLink","onLinkUnselect","UnsetColor","onLinkSelect","DeleteOperator","DeleteLink","GlobalLinkIndex","op","TypeInfo","Caption","Xpos","Ypos","Config_Copy","From","Parent","LocalConnectorIndex","To","fbd2json","createElement","encodeURIComponent","appendChild","click","removeChild","binFile","FlowchartCompiler","Compile","blob","Blob","Uint8Array","buf","url","URL","createObjectURL","href","download","reader","FileReader","onloadend","setData","readAsText","status","showOKDialog","showEnterFilenameDialog","xhr_json","xhr_bin","responseText","showFilelist","onchange","openFromLocalFile","toolbar","menuFile","menuFileDropBtn","menuFileDropContent","toggle","preventDefault","openJSONFromLabathome","openDefaultJSONFromLabathome","saveJSONToLocalFile","saveJSONToLabathomeFile","saveBinToLocalFile","menuDebug","menuDebugDropBtn","menuDebugDropContent","guidAndBufAndMap","put2fbd","saveJSONandBINToLabathomeDefaultFile","menuSimulation","menuSimulationDropBtn","menuSimulationDropContent","compilerInstance","simulationManager","SimulationManager","CompileForSimulation","Start","Stop","IsIndexKnown","onOperatorCreate","CreateByIndex","RemoveFromDOM","indexInData2operator","fromOp","toOp","fromConn","GetOutputConnectorByIndex","toConn","GetInputConnectorByIndex","globalLinkIndex","RemoveLink","globalOperatorIndex","outputKV","OutputsKVIt","linkKV","LinksKVIt","inputKV","InputsKVIt","onLinkCreate","FlowchartLink","AddLink","DATATYPE2COLOR","onOperatorUnselect","ShowAsSelected","operator","onOperatorSelect","PopulateProperyGrid","SavePropertyGrid","../utils","./FlowchartCompiler","./FlowchartConnector","./FlowchartLink","./FlowchartOperatorImpl","./SerializeContext","./SimulationManager","11","FlowchartOperator_1","TopologicalSorfDFS_1","index2operator","index2wrappedOperator","NodeWrapper","wrappedOutputOperators","dependents","inputkv","Payload","linkkv","dependentOperator","dependentWrappedNode","DependendNodes","Position","PositionType","Output","TopologicalSortDFS","sortedOperators","sortOperators","SetDebugInfoText","maps","createLookupMaps","typeIndex2globalConnectorIndex2adressOffset","typeIndex2maxOffset","hashAndBuf","serialize","dv","DataView","getUint8","GlobalConnectorIndex","GetLinksCopy","serctx","SerializeToBinary","funhash","overwriteU32","./FlowchartOperator","./TopologicalSorfDFS","12","FlowchartOutputConnector","FlowchartInputConnector","FlowchartConnector","TRANSLATEY","localIndex","HasLink","globalConnectorIndex","INDEX","spec","getIOSpecifics","translateY","childElementCount","inputOrOutput","connectorGroup","connector","snapper","onmouseover","_shadeColor","onmouseout","RefreshPosition","flowchart","posrat","flowchartRect","connectorRect","_notifyInputConnectorMouseup","_notifyInputConnectorMouseenter","_notifyInputConnectorMouseleave","InputSvgG","onmousedown","_notifyOutputConnectorMousedown","OutputSvgG","./Flowchart","13","MAX_INDEX","captionElement","captionPath","setAttributeNS","XLINKNS","_notifyLinkClicked","fromPosition","toPosition","fromX","fromY","toX","toY","bezierFromX","bezierToX","bezierIntensity","14","FlowchartOperator","SingletonType","GroupName","Singleton","Builder","typeInfo","Inputs","Outputs","elementSvgG","dragGroup","debugInfoSvgText","inputSvgG","outputSvgG","_notifyOperatorClicked","ElementSvgG","outputs","RefreshLinkPositions","variableAdress","out","output","SerializeInputsAndOutputs","SerializeFurtherProperties","mapper","15","Int2BoolConvert","Bool2IntConvert","Bool2ColorConvert","Arithmetic_ConstINTOperator","Sound_Melody","Basic_ConstFALSEOperator","Basic_ConstTRUEOperator","Output_Led7Operator","Output_Led6Operator","Output_Led5Operator","Output_Led4Operator","Output_Led3Operator","Output_CommonRGBLedOperator","Output_GreenLedOperator","Output_YellowLedOperator","Output_RedLedOperator","Output_PowerLedOperator","Output_Fan2Operator","Output_Fan1Operator","Output_RelayOperator","Input_EncoderTicksOperator","Input_RedButtonOperator","Input_EncoderButtonOperator","Input_GreenButtonOperator","Basic_NotOperator","Basic_TimekeeperOperator","Basic_CNTOperator","Basic_SROperator","Basic_RSOperator","Arithmetic_MINOperator","Arithmetic_MAXOperator","Arithmetic_DIVIDEOperator","Arithmetic_MULTIPLYOperator","Arithmetic_SUBOperator","Arithmetic_ADDOperator","Basic_XOROperator","Basic_OROperator","Basic_ANDOperator","Sensor_MovementOperator","Sensor_ExternalPressure","Sensor_AmbientNoise","Sensor_AmbientBrightnessOperator","Sensor_AirQualityOperator","Sensor_AirCO2Operator","Sensor_AirPressureOperator","Sensor_AirHumidityOperator","Sensor_AirTemperatureBMEOperator","Sensor_AirTemperatureDS18Operator","Sensor_HeaterTemperatureOperator","Control_PID","Custom_XYZBlock","Arithmetic_LessThanOperator","Arithmetic_GreaterThanOperator","Arithmetic_LIMITMONITOROperator","Arithmetic_LIMITOperator","Basic_TOFOperator","Basic_TONOperator","Float2IntConvert","Int2ColorConvert","Int2FloatConvert","Song","Basic","Arithmetic","Input","Sensor","Converter","Sound","Control","Custom","CONSTANT","SONG_INDEX","index2Info","groupName2operatorName2Info","groupName","operatorName","singleton","builder","operatorName2Info","onmousedownHandler","kv","ul","Register","Default","ca","co","Sensor_CommonSensorOperator","nameOfOutput","minOutput","maxOutput","sensorValue","AppendConnectors","SetInteger","StorageId","GetBoolean","SetBoolean","GetInteger","_CurrentValue","lastInputValue","CountUp","Reset","PresetValue","OUT","CurrentValue","currentInputValue","PV","_CurrentValueMs","lastMillis","GetMillis","IN","Input_CommonButtonOperator","GetFloat","Output_CommonLedOperator","colorOnTRUE","colorOnFALSE","removeProperty","LED","GetColor","songIndexHTMLSelect","cfg_setDefault","InputSelect","default","cfg_setValue","writeS32","cfg_getValue","constantHTMLInput","InputNumber","COLOR_TRUE","COLOR_FALSE","colorTRUEHTMLInput","colorFALSEHTMLInput","InputColor","colorString","colorNum","ColorDomString2ColorNum","NUMBER_TRUE","NUMBER_FALSE","numberTRUEHTMLInput","numberFALSEHTMLInput","MIN_VALUE","MAX_VALUE","SetFloat","inputPositiveEdge","inputTRIGGER","inputPresetTime_msecs","outputElapsedTime_msecs","presetTime_msecs","inputNegativeEdge","Minimum","Maximum","Hysterese","LLE","ULE","value1HTMLInput","value2HTMLInput","value3HTMLInput","color1HTMLInput","B1","C1","inputActualValue","inputSetpoint","./Songs","16","bufferOffset","bufferDV","guid","setUint8","imul","theNumber","setUint32","setInt32","setFloat32","getFloat32","getUint32","getInt32","17","sortedOperatorsAndMaps","resetDatastructures","booleans","integers","floats","millisSince1970","outConn","inConn","GetGlobalConnectorIndexOfSignalSource","warmstart","OnSimulationStart","Step","OnSimulationStep","OnSimulationStop","types","18","StringNumberTuple","19","MarkerState","payload","Mark","NONE","headNode","visit","PERMANENT","TEMPORARY","20","attributes","classes","Elem","SVGNS","iconname","svg","HTMLNS","firstChild","insertBefore","ns","createElementNS","clazz","inputContainer","displayValueAndKeyvalues","select"],"mappings":"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","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*!\n * Chart.js v3.6.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n}(this, (function () { 'use strict';\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map$1[str[1]] * 17,\n\t\t\t\tg: 255 & map$1[str[2]] * 17,\n\t\t\t\tb: 255 & map$1[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map$1[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map$1[str[1]] << 4 | map$1[str[2]],\n\t\t\t\tg: map$1[str[3]] << 4 | map$1[str[4]],\n\t\t\t\tb: map$1[str[5]] << 4 | map$1[str[6]],\n\t\t\t\ta: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone$1(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone$1(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone(source) {\n  if (isArray(source)) {\n    return source.map(clone);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition$1(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero$1 = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero$1(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\nresolveObjectKey: resolveObjectKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_isDomSupported: _isDomSupported,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition$1,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\ncreateContext: createContext,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\n_detectPlatform: _detectPlatform,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.6.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    if (this._lastEvent) {\n      this._eventHandler(this._lastEvent, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay) {\n    const {_active: lastActive = [], options} = this;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\n    }\n    this._lastEvent = null;\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n      callback(options.onHover, [e, active, this], this);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar _adapters = {\n  _date: DateAdapter\n};\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this._chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this._chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this._chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this._chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const options = this.options;\n    const lastActive = this._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = this._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    this.width = this.maxWidth;\n    this.height = this.maxHeight;\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\n    this.xCenter = Math.floor(this.width / 2);\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const maxRight = this.width - rightMovement - this.drawingArea;\n    const maxLeft = leftMovement + this.drawingArea;\n    const maxTop = topMovement + this.drawingArea;\n    const maxBottom = (this.height - this.paddingTop) - bottomMovement - this.drawingArea;\n    this.xCenter = Math.floor(((maxLeft + maxRight) / 2) + this.left);\n    this.yCenter = Math.floor(((maxTop + maxBottom) / 2) + this.top + this.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const angle = this.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nreturn Chart;\n\n})));\n","import { $ } from \"./utils\";\r\nimport { Chart} from 'chart.js';\r\nimport { ScreenController } from \"./ScreenController\";\r\nimport { AppManagement } from \"./AppManagement\";\r\nimport { SerializeContext } from \"./flowchart/SerializeContext\";\r\n\r\nexport let DE_de = new Intl.NumberFormat('de-DE');\r\nexport const CHART_EACH_INTERVAL = 2;\r\n\r\nexport class ADCExperimentController extends ScreenController {\r\n    private butRecord: HTMLButtonElement;\r\n    private butStop: HTMLButtonElement;\r\n    private butDelete: HTMLButtonElement;\r\n    private tbody: HTMLTableSectionElement;\r\n    private tfirstRow: HTMLTableRowElement;\r\n    private timer: number | undefined;\r\n    private chart: Chart;\r\n    private counter = 10 ^ 6;\r\n    private seconds = 0;\r\n\r\n    private recording = false;\r\n\r\n    public onFirstStart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onRestart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onStop(): void {\r\n        window.clearInterval(this.timer);\r\n        this.butStop.hidden = true;\r\n        this.butRecord.hidden = false;\r\n        this.counter = 10 ^ 6;\r\n    }\r\n    public onCreate() {\r\n        this.resetData();\r\n    }\r\n\r\n    private resetData() {\r\n        this.chart.data!.labels = [];\r\n        this.chart.data!.datasets!.forEach((dataset) => {\r\n            dataset!.data = [];\r\n        });\r\n        this.chart.update();\r\n        this.tbody.innerText = \"\";\r\n        this.seconds = 0;\r\n    }\r\n\r\n    private sendAndReceive() {\r\n\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.onerror = (e) => { console.log(\"Fehler beim XMLHttpRequest!\"); };\r\n        xhr.open(\"GET\", \"/adcexperiment\", true);\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.onload = (e) => {\r\n            let Values: number[]=[0,0,0,0];\r\n            let arrayBuffer = xhr.response; // Note: not oReq.responseText\r\n            if (arrayBuffer || arrayBuffer.byteLength == 4 + 4 + 4 + 4) {\r\n                let ctx = new SerializeContext(arrayBuffer);\r\n                Values[0] = ctx.readF32();\r\n                Values[1] = ctx.readF32();\r\n                Values[2] = ctx.readF32();\r\n                Values[3] = ctx.readF32();\r\n            }\r\n            let now = new Date(Date.now());\r\n\r\n            if (this.recording) {\r\n                let tr = $.HtmlAsFirstChild(this.tbody, \"tr\", []);\r\n                for (let i = 0; i < 6; i++) {\r\n                    $.Html(tr, \"td\", [], [], this.tfirstRow.children[i].textContent!);\r\n                }\r\n                if (this.counter >= CHART_EACH_INTERVAL) {\r\n                    if (this.chart.data!.labels!.length > 100) {\r\n                        this.chart.data!.labels?.shift();\r\n                        this.chart.data!.datasets!.forEach((dataset) => {\r\n                            dataset!.data!.shift();\r\n                        });\r\n                    }\r\n                    this.chart.data!.labels!.push(now.toLocaleTimeString(\"de-DE\"));\r\n                    this.chart.data?.datasets![0].data?.push(Values[0]);\r\n                    this.chart.data?.datasets![1].data?.push(Values[1]);\r\n                    this.chart.data?.datasets![2].data?.push(Values[2]);\r\n                    this.chart.data?.datasets![3].data?.push(Values[3]);\r\n                    this.chart.update();\r\n                    this.counter = 0;\r\n                }\r\n                this.counter++;\r\n                this.seconds++;\r\n            }\r\n            this.tfirstRow.children[0].textContent = now.toLocaleTimeString(\"de-DE\");\r\n            this.tfirstRow.children[1].textContent = DE_de.format(this.seconds);\r\n            this.tfirstRow.children[2].textContent = DE_de.format(Values[0]);\r\n            this.tfirstRow.children[3].textContent = DE_de.format(Values[1]);\r\n            this.tfirstRow.children[4].textContent = DE_de.format(Values[2]);\r\n            this.tfirstRow.children[5].textContent = DE_de.format(Values[3]);\r\n        };\r\n        xhr.send();\r\n    }\r\n\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n        this.butRecord = <HTMLButtonElement>document.getElementById(\"adcexperiment_butRecord\")!;\r\n        this.butStop = <HTMLButtonElement>document.getElementById(\"adcexperiment_butStop\")!;\r\n        this.butStop.hidden = true;\r\n        this.butDelete = <HTMLButtonElement>document.getElementById(\"adcexperiment_butDelete\")!;\r\n        this.tbody = <HTMLTableSectionElement>document.getElementById(\"adcexperiment_tabBody\")!;\r\n        this.tfirstRow = <HTMLTableRowElement>document.getElementById(\"adcexperiment_tabFirstRow\")!;\r\n\r\n        let ctx = <HTMLCanvasElement>document.getElementById('adcexperiment_chart')!;\r\n        this.chart = new Chart(ctx,{\r\n            type: 'line',\r\n            data: {\r\n                labels: [],\r\n                datasets: [\r\n                    {\r\n                        label: \"Input 0 [V]\",\r\n                        data: [],\r\n                        backgroundColor: \"red\",\r\n                        borderColor: \"red\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Input 1 [V]\",\r\n                        data: [],\r\n                        backgroundColor: \"green\",\r\n                        borderColor: \"green\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Input 2 [V]\",\r\n                        data: [],\r\n                        backgroundColor: \"blue\",\r\n                        borderColor: \"blue\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Input 3 [V]\",\r\n                        data: [],\r\n                        backgroundColor: \"grey\",\r\n                        borderColor: \"grey\",\r\n                        fill: false,\r\n                    },\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    } \r\n                }\r\n            }\r\n        });\r\n\r\n        this.butStop.onclick = (e) => {\r\n            this.butStop.hidden = true;\r\n            this.butRecord.hidden = false;\r\n            this.recording = false;\r\n        };\r\n\r\n        this.butRecord.onclick = (e) => {\r\n            this.butRecord.hidden = true;\r\n            this.butStop.hidden = false;\r\n            this.recording = true;\r\n        };\r\n\r\n        this.butDelete.onclick = (e) => {\r\n            this.resetData();\r\n        };\r\n    }\r\n}\r\n","import { $ } from \"./utils\";\r\nimport { Chart} from 'chart.js';\r\nimport { ScreenController } from \"./ScreenController\";\r\nimport { AppManagement } from \"./AppManagement\";\r\nimport { SerializeContext } from \"./flowchart/SerializeContext\";\r\n\r\nconst DE_de = new Intl.NumberFormat('de-DE');\r\nconst CHART_EACH_INTERVAL = 2;\r\n\r\nexport class AirspeedExperimentController extends ScreenController {\r\n    private butRecord: HTMLButtonElement;\r\n    private butStop: HTMLButtonElement;\r\n    private butDelete: HTMLButtonElement;\r\n    private tbody: HTMLTableSectionElement;\r\n    private tfirstRow: HTMLTableRowElement;\r\n    private inputSetpointFan: HTMLInputElement;\r\n    private inputSetpointAirspeed: HTMLInputElement;\r\n    private inputServoCL: HTMLInputElement;\r\n    private inputServoOL: HTMLInputElement;\r\n    private inputKP: HTMLInputElement;\r\n    private inputKI: HTMLInputElement;\r\n    private inputKD: HTMLInputElement;\r\n    private timer: number | undefined;\r\n    private chart: Chart;\r\n    private counter = 10 ^ 6;\r\n    private mode: number = 0;\r\n    private seconds = 0;\r\n\r\n    private recording = false;\r\n\r\n    public onFirstStart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onRestart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onStop(): void {\r\n        window.clearInterval(this.timer);\r\n        this.butStop.hidden = true;\r\n        this.butRecord.hidden = false;\r\n        this.counter = 10 ^ 6;\r\n    }\r\n    public onCreate() {\r\n        this.resetData();\r\n\r\n    }\r\n\r\n    private resetData() {\r\n        this.chart.data!.labels = [];\r\n        this.chart.data!.datasets!.forEach((dataset) => {\r\n            dataset!.data = [];\r\n        });\r\n        this.chart.update();\r\n        this.tbody.innerText = \"\";\r\n        this.seconds = 0;\r\n    }\r\n\r\n\r\n    private onModeChange(newMode: number) {\r\n        switch (newMode) {\r\n            case 0:\r\n                document.querySelectorAll('.airspeedexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                document.querySelectorAll('.airspeedexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                break;\r\n            case 1:\r\n                document.querySelectorAll('.airspeedexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                document.querySelectorAll('.airspeedexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"inline-block\";\r\n                });\r\n                break;\r\n            case 2:\r\n                document.querySelectorAll('.airspeedexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"inline-block\";\r\n                });\r\n                document.querySelectorAll('.airspeedexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                break;\r\n        }\r\n        this.mode = newMode;\r\n    }\r\n\r\n    private sendAndReceive() {\r\n        let buffer = new ArrayBuffer(256);\r\n        let ctx = new SerializeContext(buffer);\r\n        ctx.writeU32(this.mode);\r\n        if (this.mode == 0) {\r\n            ctx.writeF32(0);\r\n            ctx.writeF32(0);\r\n        } else if (this.mode == 1) {\r\n            ctx.writeF32(this.inputSetpointFan.valueAsNumber);\r\n            ctx.writeF32(this.inputServoOL.valueAsNumber);\r\n        }\r\n        else {\r\n            ctx.writeF32(this.inputSetpointAirspeed.valueAsNumber);\r\n            ctx.writeF32(this.inputServoCL.valueAsNumber);\r\n        }\r\n        ctx.writeF32(this.inputKP.valueAsNumber);\r\n        ctx.writeF32(this.inputKI.valueAsNumber);\r\n        ctx.writeF32(this.inputKD.valueAsNumber);\r\n\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.onerror = (e) => { console.log(\"Fehler beim XMLHttpRequest!\"); };\r\n        xhr.open(\"PUT\", \"/airspeedexperiment\", true);\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.onload = (e) => {\r\n            let SetpointAirspeed: number, Fan: number, Servo: number, ActualAirspeed: number;\r\n            let arrayBuffer = xhr.response; // Note: not oReq.responseText\r\n            if (!arrayBuffer || arrayBuffer.byteLength != 4 + 4 + 4 + 4) {\r\n                console.error(\"! arrayBuffer || arrayBuffer.byteLength!=4+4+4+4\");\r\n                SetpointAirspeed = 0;\r\n                Fan = 0;\r\n                Servo = 0;\r\n                ActualAirspeed = 20 + (-5 + 10 * Math.random());\r\n            }\r\n            else {\r\n                let ctx = new SerializeContext(arrayBuffer);\r\n                SetpointAirspeed = ctx.readF32();\r\n                Fan = ctx.readF32();\r\n                Servo = ctx.readF32();\r\n                ActualAirspeed = ctx.readF32();\r\n            }\r\n            let now = new Date(Date.now());\r\n\r\n            if (this.recording) {\r\n                let tr = $.HtmlAsFirstChild(this.tbody, \"tr\", []);\r\n                for (let i = 0; i < 6; i++) {\r\n                    $.Html(tr, \"td\", [], [], this.tfirstRow.children[i].textContent!);\r\n                }\r\n                if (this.counter >= CHART_EACH_INTERVAL) {\r\n                    if (this.chart.data!.labels!.length > 100) {\r\n                        this.chart.data!.labels?.shift();\r\n                        this.chart.data!.datasets!.forEach((dataset) => {\r\n                            dataset!.data!.shift();\r\n                        });\r\n                    }\r\n                    this.chart.data!.labels!.push(now.toLocaleTimeString(\"de-DE\"));\r\n                    this.chart.data?.datasets![0].data?.push(SetpointAirspeed);\r\n                    this.chart.data?.datasets![1].data?.push(ActualAirspeed);\r\n                    this.chart.data?.datasets![2].data?.push(Fan);\r\n                    this.chart.data?.datasets![3].data?.push(Servo);\r\n                    this.chart.update();\r\n                    this.counter = 0;\r\n                }\r\n                this.counter++;\r\n                this.seconds++;\r\n            }\r\n            this.tfirstRow.children[0].textContent = now.toLocaleTimeString(\"de-DE\");\r\n            this.tfirstRow.children[1].textContent = DE_de.format(this.seconds);\r\n            this.tfirstRow.children[2].textContent = DE_de.format(SetpointAirspeed);\r\n            this.tfirstRow.children[3].textContent = DE_de.format(ActualAirspeed);\r\n            this.tfirstRow.children[4].textContent = DE_de.format(Fan);\r\n            this.tfirstRow.children[5].textContent = DE_de.format(Servo);\r\n        };\r\n        xhr.send(ctx.getResult());\r\n    }\r\n\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n        this.butRecord = <HTMLButtonElement>document.getElementById(\"airspeedexperiment_butRecord\")!;\r\n        this.butStop = <HTMLButtonElement>document.getElementById(\"airspeedexperiment_butStop\")!;\r\n        this.butStop.hidden = true;\r\n        this.butDelete = <HTMLButtonElement>document.getElementById(\"airspeedexperiment_butDelete\")!;\r\n        this.tbody = <HTMLTableSectionElement>document.getElementById(\"airspeedexperiment_tabBody\")!;\r\n        this.tfirstRow = <HTMLTableRowElement>document.getElementById(\"airspeedexperiment_tabFirstRow\")!;\r\n        this.inputSetpointFan = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpSetpointFan\");\r\n        this.inputServoOL = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpFanOL\")!;\r\n        this.inputSetpointAirspeed = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpSetpointAirspeed\");\r\n        this.inputServoCL = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpFanCL\")!;\r\n\r\n        this.inputKP = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpKP\")!;\r\n        this.inputKI = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpKI\")!;\r\n        this.inputKD = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpKD\")!;\r\n\r\n        this.onModeChange(0);\r\n\r\n        let ctx = <HTMLCanvasElement>document.getElementById('airspeedexperiment_chart')!;\r\n        this.chart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: [],\r\n                datasets: [\r\n                    {\r\n                        label: \"Setpoint Airspeed [m/s]\",\r\n                        data: [],\r\n                        backgroundColor: \"red\",\r\n                        borderColor: \"red\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Actual Airspeed [m/s]\",\r\n                        data: [],\r\n                        backgroundColor: \"green\",\r\n                        borderColor: \"green\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Fan Power [%]\",\r\n                        data: [],\r\n                        backgroundColor: \"blue\",\r\n                        borderColor: \"blue\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Servo Position [deg]\",\r\n                        data: [],\r\n                        backgroundColor: \"grey\",\r\n                        borderColor: \"grey\",\r\n                        fill: false,\r\n                    },\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    } \r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        document.querySelectorAll('input[name=\"airspeedexperiment_mode\"]').forEach((v, k) => {\r\n            let inp = <HTMLInputElement>v;\r\n            inp.onclick = (e) => {\r\n                let num = parseInt(inp.value);\r\n                if (this.mode != num)\r\n                    this.onModeChange(num);\r\n            };\r\n        });\r\n\r\n        let setBubble = (range: HTMLInputElement, bubble: HTMLOutputElement) => {\r\n            let val = range.valueAsNumber;\r\n            let min = range.min ? parseInt(range.min) : 0;\r\n            let max = range.max ? parseInt(range.max) : 100;\r\n            let newVal = ((val - min) * 100) / (max - min);\r\n            bubble.innerHTML = \"\" + val;\r\n\r\n            // Sorta magic numbers based on size of the native UI thumb\r\n            bubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n        };\r\n\r\n        document.querySelectorAll(\".range-wrap.airspeedexperiment\").forEach(wrap => {\r\n            let range = <HTMLInputElement>wrap.querySelector(\"input[type='range']\")!;\r\n            let bubble = <HTMLOutputElement>wrap.querySelector(\"output.bubble\")!;\r\n            range.oninput = (e) => setBubble(range, bubble);\r\n            setBubble(range, bubble);\r\n        });\r\n\r\n\r\n        this.butStop.onclick = (e) => {\r\n            this.butStop.hidden = true;\r\n            this.butRecord.hidden = false;\r\n            this.recording = false;\r\n        };\r\n\r\n        this.butRecord.onclick = (e) => {\r\n            this.butRecord.hidden = true;\r\n            this.butStop.hidden = false;\r\n            this.recording = true;\r\n        };\r\n\r\n        this.butDelete.onclick = (e) => {\r\n            this.resetData();\r\n        };\r\n    }\r\n}\r\n","import { HeaterExperimentController } from \"./HeaterExperimentController\";\r\nimport { ScreenController, ControllerState } from \"./ScreenController\";\r\nimport { DevelopCFCController } from \"./DevelopCFCController\";\r\nimport { DialogController } from \"./DialogController\";\r\nimport { AppManagement } from \"./AppManagement\";\r\nimport { ADCExperimentController } from \"./ADCExperimentController\";\r\nimport { AirspeedExperimentController } from \"./AirspeedExperimentController\";\r\nimport {FFTExperimentController} from \"./FFTExperimentController\";\r\n\r\nclass DashboardController extends ScreenController {\r\n    public onFirstStart(): void { }\r\n    public onRestart(): void { }\r\n    public onStop(): void { }\r\n    public onCreate() { }\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n    }\r\n\r\n}\r\n\r\nclass ReportsController extends ScreenController {\r\n    public onFirstStart(): void { }\r\n    public onRestart(): void { }\r\n    public onStop(): void { }\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n    }\r\n    public onCreate() {\r\n        return;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nclass AppController implements AppManagement {\r\n\r\n    private stateDiv: HTMLDivElement;\r\n    private activeControllerIndex: number;\r\n    private screenControllers: ScreenController[];\r\n    private dialogController:DialogController;\r\n\r\n    public DialogController() { return this.dialogController; };\r\n\r\n\r\n\r\n    constructor() {\r\n        this.stateDiv = <HTMLDivElement>document.getElementById(\"spnConnectionState\")!;\r\n        this.screenControllers = [];\r\n        this.activeControllerIndex = 0;\r\n        this.dialogController=new DialogController(this);\r\n    }\r\n\r\n    private SetApplicationState(state: string) {\r\n        this.stateDiv.innerHTML = state;\r\n\r\n    }\r\n\r\n    private setActiveScreen(newIndex: number) {\r\n        this.screenControllers.forEach((controller, i) => {\r\n            if (i == newIndex) {\r\n                controller.showDIV();\r\n                if (controller.State == ControllerState.CREATED) {\r\n                    controller.onFirstStart();\r\n                    controller.State = ControllerState.STARTED;\r\n                }\r\n                else {\r\n                    controller.onRestart();\r\n                    controller.State = ControllerState.STARTED;\r\n                }\r\n            } else {\r\n                controller.hideDIV();\r\n                if (controller.State == ControllerState.STARTED) {\r\n                    controller.onStop();\r\n                    controller.State = ControllerState.STOPPED;\r\n                }\r\n            }\r\n        });\r\n        this.activeControllerIndex = newIndex;\r\n    }\r\n\r\n    public startup() {\r\n        this.dialogController.init();\r\n        this.screenControllers.push(new DashboardController(this, <HTMLDivElement>document.getElementById(\"screen_dashboard\")));\r\n        this.screenControllers.push(new DevelopCFCController(this, <HTMLDivElement>document.getElementById(\"screen_develop\")));\r\n        this.screenControllers.push(new ReportsController(this, <HTMLDivElement>document.getElementById(\"screen_reports\")));\r\n        this.screenControllers.push(new HeaterExperimentController(this, <HTMLDivElement>document.getElementById(\"screen_heaterexperiment\")));\r\n        this.screenControllers.push(new AirspeedExperimentController(this, <HTMLDivElement>document.getElementById(\"screen_airspeedexperiment\")));\r\n        this.screenControllers.push(new ADCExperimentController(this, <HTMLDivElement>document.getElementById(\"screen_adcexperiment\")));\r\n        this.screenControllers.push(new FFTExperimentController(this, <HTMLDivElement>document.getElementById(\"screen_fftexperiment\")));\r\n        this.screenControllers.forEach((sc) => sc.onCreate());\r\n\r\n        this.setActiveScreen(1);\r\n        let id2index = new Map<string, number>();\r\n        this.screenControllers.forEach((value, index) => { id2index.set(\"show_\" + value.ElementId, index) })\r\n        document.querySelectorAll<HTMLAnchorElement>(\"nav a\").forEach((a: HTMLAnchorElement) => {\r\n            let id = a.id;\r\n            let index = id2index.get(a.id) || 0;\r\n            a.onclick = (e) => this.setActiveScreen(index);\r\n        });\r\n\r\n\r\n\r\n        /*\r\n        this.SetApplicationState(\"WebSocket is not connected\");\r\n        let websocket = new WebSocket('ws://' + location.hostname + '/w');\r\n        websocket.onopen = e => {\r\n            this.SetApplicationState('WebSocket connection opened');\r\n            document.getElementById(\"test\")!.innerHTML = \"WebSocket is connected!\";\r\n        }\r\n        websocket.onmessage = (evt) => {\r\n            var msg = evt.data;\r\n            let value: string;\r\n            switch (msg.charAt(0)) {\r\n                case 'L':\r\n                    console.log(msg);\r\n                    value = msg.replace(/[^0-9\\.]/g, '');\r\n                    switch (value) {\r\n                        case \"0\": document.getElementById(\"led1\")!.style.backgroundColor = \"black\"; break;\r\n                        case \"1\": document.getElementById(\"led1\")!.style.backgroundColor = \"green\"; break;\r\n                        case \"2\": document.getElementById(\"led2\")!.style.backgroundColor = \"black\"; break;\r\n                        case \"3\": document.getElementById(\"led2\")!.style.backgroundColor = \"green\"; break;\r\n                    }\r\n                    console.log(\"Led = \" + value);\r\n                    break;\r\n                default:\r\n                    let p = JSON.parse(evt.data);\r\n                    document.getElementById(\"td_myName\")!.innerText = p.d.myName;\r\n                    document.getElementById(\"td_temperature\")!.innerText = p.d.temperature;\r\n                    document.getElementById(\"td_humidity\")!.innerText = p.d.humidity;\r\n                    document.getElementById(\"td_heap\")!.innerText = p.info.heap;\r\n                    document.getElementById(\"td_time\")!.innerText = p.info.time;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        websocket.onclose = (e) => {\r\n            console.log('Websocket connection closed due to '+e.reason);\r\n            this.SetApplicationState('Websocket connection closed due to '+e.reason);\r\n        }\r\n\r\n        websocket.onerror = (evt) => {\r\n            console.log('Websocket error: ' + evt.returnValue);\r\n            this.SetApplicationState(\"WebSocket error!\" + evt.returnValue);\r\n        }\r\n\r\n        document.querySelectorAll<HTMLButtonElement>(\"#pButtons button\").forEach((b: HTMLButtonElement) => {\r\n            b.onclick = (e: MouseEvent) => {\r\n                websocket.send(\"L\" + b.dataset.rel);\r\n            };\r\n        });\r\n*/\r\n    }\r\n}\r\n\r\nlet app: AppController;\r\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\r\n    app = new AppController();\r\n    app.startup();\r\n});\r\n\r\n\r\n","import { AppManagement } from \"./AppManagement\";\r\nimport { Flowchart, FlowchartData, FlowchartOptions } from \"./flowchart/Flowchart\";\r\nimport { ScreenController } from \"./ScreenController\";\r\n\r\n\r\nexport class DevelopCFCController extends ScreenController {\r\n    private fc: Flowchart;\r\n    private timer: number | undefined;\r\n    onFirstStart(): void {\r\n        this.timer = window.setInterval(() => { this.fc.triggerDebug(); }, 1000);\r\n        this.fc.onFirstStart();\r\n    }\r\n    public onRestart(): void {\r\n        this.timer = window.setInterval(() => { this.fc.triggerDebug(); }, 1000);\r\n    }\r\n    public onStop(): void {\r\n        window.clearInterval(this.timer);\r\n    }\r\n    public onCreate() { }\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n        let data: FlowchartData = {\r\n            operators: [\r\n                {\r\n                    index: 0,\r\n                    caption: \"RedButton\",\r\n                    globalTypeIndex: 30,\r\n                    posX: 10,\r\n                    posY: 10,\r\n                    configurationData: null,\r\n                },\r\n                {\r\n                    index: 1,\r\n                    caption: \"GreenButton\",\r\n                    globalTypeIndex: 33,\r\n                    posX: 10,\r\n                    posY: 150,\r\n                    configurationData: null,\r\n                },\r\n                {\r\n                    index: 2,\r\n                    caption: \"AND\",\r\n                    globalTypeIndex: 1,\r\n                    posX: 250,\r\n                    posY: 10,\r\n                    configurationData: null,\r\n                },\r\n                {\r\n                    index: 3,\r\n                    caption: \"RedLed\",\r\n                    globalTypeIndex: 46,\r\n                    posX: 500,\r\n                    posY: 10,\r\n                    configurationData: null,\r\n                },\r\n            ],\r\n            links: [\r\n                {\r\n                    color: \"black\",\r\n                    fromOperatorIndex: 0,\r\n                    fromOutput: 0,\r\n                    toOperatorIndex: 2,\r\n                    toInput: 0\r\n                },\r\n                {\r\n                    color: \"black\",\r\n                    fromOperatorIndex: 1,\r\n                    fromOutput: 0,\r\n                    toOperatorIndex: 2,\r\n                    toInput: 1\r\n                },\r\n                {\r\n                    color: \"black\",\r\n                    fromOperatorIndex: 2,\r\n                    fromOutput: 0,\r\n                    toOperatorIndex: 3,\r\n                    toInput: 0\r\n                },\r\n            ]\r\n        };\r\n        let options = new FlowchartOptions();\r\n        options.data = data;\r\n        this.fc = new Flowchart(this.appManagement, this.div, options);\r\n    }\r\n\r\n\r\n}\r\n","import { AppManagement } from \"./AppManagement\";\r\nimport {$} from \"./utils\"\r\nexport class DialogController {\r\n    \r\n\r\n    private dialog = <HTMLDialogElement>document.getElementById('dialog')!;\r\n    private dialogHeading = <HTMLHeadingElement>document.getElementById('dialog-heading')!;\r\n    private dialogBody = <HTMLDivElement>document.getElementById('dialog-body')!;\r\n    private dialogFooter = <HTMLElement>document.getElementById('dialog-footer')!;\r\n\r\n    constructor(private appManagement:AppManagement) {\r\n        \r\n    }\r\n    \r\n    public init() {\r\n\r\n        document.getElementById('dialog-close')!.onclick = (e) => {\r\n            //this.dialog.close(\"cancelled\");\r\n        }\r\n        //this.dialog.oncancel = (e) => {\r\n            //this.dialog.close(\"cancelled\");\r\n        //}\r\n\r\n        // close when clicking on backdrop\r\n        this.dialog.onclick = (event) => {\r\n            if (event.target === this.dialog) {\r\n                //this.dialog.close('cancelled');\r\n            }\r\n        }\r\n    }\r\n\r\n    public showEnterFilenameDialog(priority: number, messageText: string, handler: (filename: string) => void) {\r\n        this.prepareDialog();\r\n        this.dialogHeading.innerText=\"Enter Filename\";\r\n        $.Html(this.dialogBody, \"p\", [], [], messageText);\r\n        let fileInput= <HTMLInputElement>$.Html(this.dialogBody, \"input\", [\"pattern\", \"^[A-Za-z0-9]{1,10}$\"], []);\r\n        this.dialogFooter.innerText=\"\";\r\n        $.Html(this.dialogFooter, \"button\", [], [], \"OK\").onclick=(e)=>{\r\n            //this.dialog.close('OK');\r\n            if(handler!=null) handler(fileInput.value);\r\n        };\r\n       // this.dialog.showModal();\r\n    }\r\n\r\n    public showOKDialog(priority: number, messageText:string, handler: ((a:string)=>any)|null) {\r\n        this.prepareDialog();\r\n        this.dialogHeading.innerText=\"Message\";\r\n        this.dialogBody.innerText=messageText;\r\n        this.dialogFooter.innerText=\"\";\r\n        $.Html(this.dialogFooter, \"button\", [\"type\", \"button\"], [], \"OK\").onclick=(e)=>{\r\n            //this.dialog.close('cancelled');\r\n            if(handler!=null) handler(\"OK\");\r\n        };\r\n        //this.dialog.showModal();\r\n    }\r\n\r\n    private prepareDialog()\r\n    {\r\n        this.dialogHeading.innerText=\"\";\r\n        this.dialogBody.innerText=\"\";\r\n        this.dialogFooter.innerText=\"\";\r\n    }\r\n\r\n    public showFilelist(priority: number, files:string[], openhandler: (filename:string)=>any, deletehandler: (filename:string)=>any) {\r\n\r\n        this.prepareDialog();\r\n        this.dialogHeading.innerText=\"Please select a file to load\"\r\n        $.Html(this.dialogFooter, \"button\", [\"type\", \"button\"], [], \"Cancel\").onclick=(e)=>{\r\n            //this.dialog.close(\"cancelled\");\r\n        };\r\n        let table = <HTMLTableElement>$.Html(this.dialogBody, \"table\", [], []);\r\n        let thead = <HTMLTableSectionElement>$.Html(table, \"thead\", [],[]);\r\n        let tr_head = $.Html(thead, \"tr\", [], []);\r\n        $.Html(tr_head, \"th\", [], [], \"File Name\");\r\n        $.Html(tr_head, \"th\", [], [], \"File Operation\");\r\n        let tbody= <HTMLTableSectionElement>$.Html(table, \"tbody\", [],[]);\r\n        for(let filename of files){\r\n            if(!filename.endsWith(\".json\")) continue;\r\n            filename=filename.substring(0, filename.length-5);\r\n            let tr = $.Html(tbody, \"tr\", [], []);\r\n            $.Html(tr, \"td\", [], [], filename);\r\n            let operationTd= $.Html(tr, \"td\", [], []);\r\n            let openButton = $.Html(operationTd, \"button\", [\"type\", \"button\"], []);\r\n            $.SvgIcon(openButton, \"folder-open\");\r\n            openButton.onclick=(e)=>{\r\n                //this.dialog.close(\"opened\");\r\n                openhandler(filename);\r\n                \r\n            };\r\n            let deleteButton=$.Html(operationTd, \"button\", [\"type\", \"button\"], [], );\r\n            $.SvgIcon(deleteButton, \"bin2\");\r\n            deleteButton.onclick=(e)=>{\r\n                //this.dialog.close(\"deleted\");\r\n                deletehandler(filename);\r\n            }\r\n        };\r\n        //this.dialog.showModal();\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}","import { $ } from \"./utils\";\r\nimport { Chart, ChartDataset} from 'chart.js';\r\nimport { ScreenController } from \"./ScreenController\";\r\nimport { AppManagement } from \"./AppManagement\";\r\nimport { SerializeContext } from \"./flowchart/SerializeContext\";\r\n//!!!Applied some adoptions on lower numbers to avoid strange rounding effects\r\nconst  FREQUENCIES:number[]=[11,21,31,42,53,64,75,97,118,139,161,183,205,227,258,291,323,355,388,431,474,517,560,614,668,721,786,851,915,991,1066,1152,1238,1335,1443,1550,1669,1798,1938,2089,2239,2401,2584,2778,2982,3198,3435,3682,3951,4231,4533,4856,5200,5566,5965,6385,6837,7321,7838,8398,8990,9625,10304,11025];\r\nconst INTERVAL=2000;\r\nconst ZEROS = Array.from(Array(64).keys());\r\n\r\nexport class FFTExperimentController extends ScreenController {\r\n    private butRecord: HTMLButtonElement;\r\n    private butStop: HTMLButtonElement;\r\n    private butSave: HTMLButtonElement;\r\n    private butDelete: HTMLButtonElement;\r\n    private inputFan: HTMLInputElement;\r\n    private tbody: HTMLTableSectionElement;\r\n    private timer: number | undefined;\r\n    private chart: Chart;\r\n    private COLORS = [\r\n        '#4dc9f6',\r\n        '#f67019',\r\n        '#f53794',\r\n        '#537bc4',\r\n        '#acc236',\r\n        '#166a8f',\r\n        '#00a950',\r\n        '#58595b',\r\n        '#8549ba'\r\n      ];\r\n\r\n    private recording = false;\r\n   \r\n\r\n    public onFirstStart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, INTERVAL);\r\n    }\r\n    public onRestart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, INTERVAL);\r\n    }\r\n    public onStop(): void {\r\n        window.clearInterval(this.timer);\r\n        this.butStop.hidden = true;\r\n        this.butRecord.hidden = false;\r\n    }\r\n    public onCreate() {\r\n        //this.resetData();\r\n    }\r\n\r\n    private resetData() {\r\n        this.chart.data!.labels = [];\r\n        this.chart.data!.datasets!.forEach((dataset) => {\r\n            dataset!.data = [];\r\n        });\r\n        this.chart.update();\r\n        this.tbody.innerText = \"\";\r\n    }\r\n\r\n    private color(index:number) {\r\n        return this.COLORS[index % this.COLORS.length];\r\n    }\r\n      \r\n\r\n    private sendAndReceive() {\r\n        let buffer = new ArrayBuffer(256);\r\n        let ctx = new SerializeContext(buffer);\r\n        ctx.writeF32(this.inputFan.valueAsNumber);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.onerror = (e) => { console.log(\"Fehler beim XMLHttpRequest!\"); };\r\n        xhr.open(\"PUT\", \"/fftexperiment\", true);\r\n        xhr.responseType = \"arraybuffer\";\r\n        \r\n        xhr.onload = (e) => {\r\n            let data:number[] = [];\r\n            let arrayBuffer = xhr.response; // Note: not oReq.responseText\r\n            if (!arrayBuffer || arrayBuffer.byteLength != 256) {\r\n                console.error(\"!arrayBuffer || arrayBuffer.byteLength != 256 -->providing fake data\");\r\n                for(let i =0;i<64;i++){\r\n                    data.push(5 + 5 * Math.random());\r\n                }\r\n\r\n            }\r\n            else {\r\n                let ctx = new SerializeContext(arrayBuffer);\r\n                for(let i =0;i<64;i++){\r\n                    data.push(Math.log10(ctx.readF32()));\r\n                }\r\n            }\r\n            if (this.recording) {\r\n                this.chart.data.datasets[0].data=data;\r\n                this.chart.update();\r\n            }\r\n        };\r\n        xhr.send(ctx.getResult());\r\n    }\r\n\r\n\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n        this.butRecord = <HTMLButtonElement>document.getElementById(\"fftexperiment_butRecord\")!;\r\n        this.butStop = <HTMLButtonElement>document.getElementById(\"fftexperiment_butStop\")!;\r\n        this.butSave = <HTMLButtonElement>document.getElementById(\"fftexperiment_butSave\")!;\r\n        this.butDelete = <HTMLButtonElement>document.getElementById(\"fftexperiment_butDelete\")!;\r\n        this.inputFan = <HTMLInputElement>document.getElementById(\"fftexperiment_inpFan\")!;\r\n        this.butStop.hidden = true;\r\n        this.tbody = <HTMLTableSectionElement>document.getElementById(\"adcexperiment_tabBody\")!;\r\n       \r\n\r\n        let ctx = <HTMLCanvasElement>document.getElementById('fftexperiment_chart')!;\r\n        this.chart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: FREQUENCIES,\r\n                datasets: []\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true,\r\n                        max:10\r\n                    } \r\n                }\r\n            }\r\n        });\r\n        this.chart.update();\r\n        let setBubble = (range: HTMLInputElement, bubble: HTMLOutputElement) => {\r\n            let val = range.valueAsNumber;\r\n            let min = range.min ? parseInt(range.min) : 0;\r\n            let max = range.max ? parseInt(range.max) : 100;\r\n            let newVal = ((val - min) * 100) / (max - min);\r\n            bubble.innerHTML = \"\" + val;\r\n\r\n            // Sorta magic numbers based on size of the native UI thumb\r\n            bubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n        };\r\n\r\n        document.querySelectorAll(\".range-wrap.fftexperiment\").forEach(wrap => {\r\n            let range = <HTMLInputElement>wrap.querySelector(\"input[type='range']\")!;\r\n            let bubble = <HTMLOutputElement>wrap.querySelector(\"output.bubble\")!;\r\n            range.oninput = (e) => setBubble(range, bubble);\r\n            setBubble(range, bubble);\r\n        });\r\n\r\n        this.butStop.onclick = () => {\r\n            this.butStop.hidden = true;\r\n            this.butRecord.hidden = false;\r\n            this.recording = false;\r\n            this.chart.data.datasets.shift();\r\n            this.chart.update();\r\n        };\r\n\r\n        this.butRecord.onclick = () => {\r\n            this.butRecord.hidden = true;\r\n            this.butStop.hidden = false;\r\n            this.chart.data.datasets.unshift({\r\n                label: \"Magnitudes\",\r\n                data: ZEROS,\r\n                borderColor: this.color(0),\r\n                backgroundColor: this.color(0),\r\n            });\r\n            this.recording = true;\r\n            this.chart.update();\r\n        };\r\n        this.butSave.onclick = ()=>{\r\n            let now = new Date(Date.now());\r\n            let newDataset:ChartDataset={\r\n                label: \"Magnitudes saved \"+now.toLocaleTimeString(\"de-DE\"),\r\n                data: this.chart.data.datasets[0].data,\r\n                borderColor: this.color(this.chart.data.datasets.length),\r\n                backgroundColor: this.color(this.chart.data.datasets.length),\r\n            };\r\n            this.chart.data.datasets.splice(1,0,newDataset);\r\n            this.chart.update();\r\n        }\r\n        this.butDelete.onclick=()=>{\r\n            if(this.chart.data.datasets.length<2) return;\r\n            this.chart.data.datasets.pop();\r\n            this.chart.update();\r\n        }\r\n    }\r\n}\r\n","import { $ } from \"./utils\";\r\nimport { Chart} from 'chart.js';\r\nimport { ScreenController } from \"./ScreenController\";\r\nimport { AppManagement } from \"./AppManagement\";\r\nimport { SerializeContext } from \"./flowchart/SerializeContext\";\r\n\r\nexport let DE_de = new Intl.NumberFormat('de-DE');\r\nexport const CHART_EACH_INTERVAL = 2;\r\n\r\nexport class HeaterExperimentController extends ScreenController {\r\n    private butRecord: HTMLButtonElement;\r\n    private butStop: HTMLButtonElement;\r\n    private butDelete: HTMLButtonElement;\r\n    private tbody: HTMLTableSectionElement;\r\n    private tfirstRow: HTMLTableRowElement;\r\n    private inputSetpointHeater: HTMLInputElement;\r\n    private inputSetpointTemperature: HTMLInputElement;\r\n    private inputFanCL: HTMLInputElement;\r\n    private inputFanOL: HTMLInputElement;\r\n    private inputKP: HTMLInputElement;\r\n    private inputTN: HTMLInputElement;\r\n    private inputTV: HTMLInputElement;\r\n    private timer: number | undefined;\r\n    private chart: Chart;\r\n\r\n    private counter = 10 ^ 6;\r\n    private mode: number = 0;\r\n    private seconds = 0;\r\n\r\n    private recording = false;\r\n\r\n    public onFirstStart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onRestart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onStop(): void {\r\n        window.clearInterval(this.timer);\r\n        this.butStop.hidden = true;\r\n        this.butRecord.hidden = false;\r\n        this.counter = 10 ^ 6;\r\n    }\r\n    public onCreate() {\r\n        this.resetData();\r\n\r\n    }\r\n\r\n    private resetData() {\r\n        this.chart.data!.labels = [];\r\n        this.chart.data!.datasets!.forEach((dataset) => {\r\n            dataset!.data = [];\r\n        });\r\n        this.chart.update();\r\n        this.tbody.innerText = \"\";\r\n        this.seconds = 0;\r\n    }\r\n\r\n\r\n    private onModeChange(newMode: number) {\r\n        switch (newMode) {\r\n            case 0:\r\n                document.querySelectorAll('.heaterexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                document.querySelectorAll('.heaterexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                break;\r\n            case 1:\r\n                document.querySelectorAll('.heaterexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                document.querySelectorAll('.heaterexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"inline-block\";\r\n                });\r\n                break;\r\n            case 2:\r\n                document.querySelectorAll('.heaterexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"inline-block\";\r\n                });\r\n                document.querySelectorAll('.heaterexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                break;\r\n        }\r\n        this.mode = newMode;\r\n    }\r\n\r\n    private sendAndReceive() {\r\n        let buffer = new ArrayBuffer(256);\r\n        let ctx = new SerializeContext(buffer);\r\n        ctx.writeU32(this.mode);\r\n        if (this.mode == 0) {\r\n            ctx.writeF32(0);\r\n            ctx.writeF32(0);\r\n        } else if (this.mode == 1) {\r\n            ctx.writeF32(this.inputSetpointHeater.valueAsNumber);\r\n            ctx.writeF32(this.inputFanOL.valueAsNumber);\r\n        }\r\n        else {\r\n            ctx.writeF32(this.inputSetpointTemperature.valueAsNumber);\r\n            ctx.writeF32(this.inputFanCL.valueAsNumber);\r\n        }\r\n        ctx.writeF32(this.inputKP.valueAsNumber);\r\n        ctx.writeF32(this.inputTN.valueAsNumber);\r\n        ctx.writeF32(this.inputTV.valueAsNumber);\r\n\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.onerror = (e) => { console.log(\"Fehler beim XMLHttpRequest!\"); };\r\n        xhr.open(\"PUT\", \"/heaterexperiment\", true);\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.onload = (e) => {\r\n            let SetpointTemperature: number, Heater: number, Fan: number, ActualTemperature: number;\r\n            let arrayBuffer = xhr.response; // Note: not oReq.responseText\r\n            if (!arrayBuffer || arrayBuffer.byteLength != 4 + 4 + 4 + 4) {\r\n                console.error(\"! arrayBuffer || arrayBuffer.byteLength!=4+4+4+4\");\r\n                SetpointTemperature = 0;\r\n                Heater = 0;\r\n                Fan = 0;\r\n                ActualTemperature = 20 + (-5 + 10 * Math.random());\r\n            }\r\n            else {\r\n                let ctx = new SerializeContext(arrayBuffer);\r\n                SetpointTemperature = ctx.readF32();\r\n                Heater = ctx.readF32();\r\n                Fan = ctx.readF32();\r\n                ActualTemperature = ctx.readF32();\r\n            }\r\n            let now = new Date(Date.now());\r\n\r\n            if (this.recording) {\r\n                let tr = $.HtmlAsFirstChild(this.tbody, \"tr\", []);\r\n                for (let i = 0; i < 6; i++) {\r\n                    $.Html(tr, \"td\", [], [], this.tfirstRow.children[i].textContent!);\r\n                }\r\n                if (this.counter >= CHART_EACH_INTERVAL) {\r\n                    if (this.chart.data!.labels!.length > 100) {\r\n                        this.chart.data!.labels?.shift();\r\n                        this.chart.data!.datasets!.forEach((dataset) => {\r\n                            dataset!.data!.shift();\r\n                        });\r\n                    }\r\n                    this.chart.data!.labels!.push(now.toLocaleTimeString(\"de-DE\"));\r\n                    this.chart.data?.datasets![0].data?.push(SetpointTemperature);\r\n                    this.chart.data?.datasets![1].data?.push(ActualTemperature);\r\n                    this.chart.data?.datasets![2].data?.push(Heater);\r\n                    this.chart.data?.datasets![3].data?.push(Fan);\r\n                    //this.setpointTemperatureValues.push(SetpointTemperature)\r\n                    //this.heaterValues.push(Heater);\r\n                    //this.fanValues.push(Fan);\r\n                    //this.actualTemperatureValues.push(ActualTemperature);\r\n                    this.chart.update();\r\n                    //FIXME this.chartData = {labels:this.dateValues, series: [this.setpointTemperatureValues, this.actualTemperatureValues, this.heaterValues, this.fanValues,],};\r\n                    //FIXME this.chart.update(this.chartData);\r\n                    this.counter = 0;\r\n                }\r\n                this.counter++;\r\n                this.seconds++;\r\n            }\r\n\r\n\r\n            this.tfirstRow.children[0].textContent = now.toLocaleTimeString(\"de-DE\");\r\n            this.tfirstRow.children[1].textContent = DE_de.format(this.seconds);\r\n            this.tfirstRow.children[2].textContent = DE_de.format(SetpointTemperature);\r\n            this.tfirstRow.children[3].textContent = DE_de.format(ActualTemperature);\r\n            this.tfirstRow.children[4].textContent = DE_de.format(Heater);\r\n            this.tfirstRow.children[5].textContent = DE_de.format(Fan);\r\n\r\n\r\n\r\n        };\r\n        xhr.send(ctx.getResult());\r\n    }\r\n\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n        this.butRecord = <HTMLButtonElement>document.getElementById(\"heaterexperiment_butRecord\")!;\r\n        this.butStop = <HTMLButtonElement>document.getElementById(\"heaterexperiment_butStop\")!;\r\n        this.butStop.hidden = true;\r\n        this.butDelete = <HTMLButtonElement>document.getElementById(\"heaterexperiment_butDelete\")!;\r\n        this.tbody = <HTMLTableSectionElement>document.getElementById(\"heaterexperiment_tabBody\")!;\r\n        this.tfirstRow = <HTMLTableRowElement>document.getElementById(\"heaterexperiment_tabFirstRow\")!;\r\n        this.inputSetpointHeater = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpSetpointHeater\");\r\n        this.inputFanOL = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpFanOL\")!;\r\n        this.inputSetpointTemperature = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpSetpointTemperature\");\r\n        this.inputFanCL = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpFanCL\")!;\r\n\r\n        this.inputKP = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpKP\")!;\r\n        this.inputTN = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpTN\")!;\r\n        this.inputTV = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpTV\")!;\r\n\r\n        this.onModeChange(0);\r\n\r\n        let ctx = <HTMLCanvasElement>document.getElementById('heaterexperiment_chart')!;\r\n        this.chart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: [],\r\n                datasets: [\r\n                    {\r\n                        label: \"Setpoint Temperature [°C]\",\r\n                        data: [],\r\n                        backgroundColor: \"red\",\r\n                        borderColor: \"red\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Actual Temperature [°C]\",\r\n                        data: [],\r\n                        backgroundColor: \"green\",\r\n                        borderColor: \"green\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Heater Power [%]\",\r\n                        data: [],\r\n                        backgroundColor: \"blue\",\r\n                        borderColor: \"blue\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Fan Power [%]\",\r\n                        data: [],\r\n                        backgroundColor: \"grey\",\r\n                        borderColor: \"grey\",\r\n                        fill: false,\r\n                    },\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    } \r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        document.querySelectorAll('input[name=\"heaterexperiment_mode\"]').forEach((v, k) => {\r\n            let inp = <HTMLInputElement>v;\r\n            inp.onclick = (e) => {\r\n                let num = parseInt(inp.value);\r\n                if (this.mode != num)\r\n                    this.onModeChange(num);\r\n            };\r\n        });\r\n\r\n        let setBubble = (range: HTMLInputElement, bubble: HTMLOutputElement) => {\r\n            let val = range.valueAsNumber;\r\n            let min = range.min ? parseInt(range.min) : 0;\r\n            let max = range.max ? parseInt(range.max) : 100;\r\n            let newVal = ((val - min) * 100) / (max - min);\r\n            bubble.innerHTML = \"\" + val;\r\n\r\n            // Sorta magic numbers based on size of the native UI thumb\r\n            bubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n        };\r\n\r\n        document.querySelectorAll(\".range-wrap.heaterexperiment\").forEach(wrap => {\r\n            let range = <HTMLInputElement>wrap.querySelector(\"input[type='range']\")!;\r\n            let bubble = <HTMLOutputElement>wrap.querySelector(\"output.bubble\")!;\r\n            range.oninput = (e) => setBubble(range, bubble);\r\n            setBubble(range, bubble);\r\n        });\r\n\r\n\r\n        this.butStop.onclick = (e) => {\r\n            this.butStop.hidden = true;\r\n            this.butRecord.hidden = false;\r\n            this.recording = false;\r\n        };\r\n\r\n        this.butRecord.onclick = (e) => {\r\n            this.butRecord.hidden = true;\r\n            this.butStop.hidden = false;\r\n            this.recording = true;\r\n        };\r\n\r\n        this.butDelete.onclick = (e) => {\r\n            this.resetData();\r\n        };\r\n    }\r\n}\r\n","import { AppManagement } from \"./AppManagement\";\r\n\r\nexport enum ControllerState {\r\n    CREATED,\r\n    STARTED,\r\n    STOPPED,\r\n}\r\n\r\nexport abstract class ScreenController {\r\n    private state: ControllerState;\r\n    constructor(protected appManagement:AppManagement, protected div: HTMLDivElement) {\r\n        this.hideDIV();\r\n        this.state = ControllerState.CREATED;\r\n    }\r\n    get ElementId() { return this.div.id; }\r\n    get State() { return this.state; }\r\n    set State(value: ControllerState) { this.state = value; }\r\n    abstract onCreate(): void;\r\n    abstract onFirstStart(): void;\r\n    abstract onRestart(): void;\r\n    abstract onStop(): void;\r\n    public showDIV() {\r\n        this.div.style.display = \"block\";\r\n    }\r\n    public hideDIV() {\r\n        this.div.style.display = \"none\";\r\n    }\r\n}\r\n","import { ConnectorType, FlowchartInputConnector, FlowchartOutputConnector } from \"./FlowchartConnector\";\r\nimport { FlowchartCompiler, HashAndBufAndMaps, SortedOperatorsAndMaps } from \"./FlowchartCompiler\";\r\nimport { FlowchartLink } from \"./FlowchartLink\";\r\nimport { FlowchartOperator, PositionType, TypeInfo } from \"./FlowchartOperator\";\r\nimport * as operatorimpl from \"./FlowchartOperatorImpl\";\r\nimport { NodeWrapper, TopologicalSortDFS } from \"./TopologicalSorfDFS\";\r\nimport { Utils, $, KeyValueTuple } from \"../utils\";\r\nimport { AppManagement } from \"../AppManagement\";\r\nimport { SerializeContext } from \"./SerializeContext\";\r\nimport { SimulationManager } from \"./SimulationManager\";\r\n\r\nexport class FlowchartOptions {\r\n    canUserEditLinks: boolean = true;\r\n    canUserMoveOperators: boolean = true;\r\n    data?: FlowchartData = undefined;\r\n    distanceFromArrow: number = 3;\r\n    defaultOperatorClass: string = 'flowchart-default-operator';\r\n    defaultLinkColor: string = '#3366ff';\r\n    defaultSelectedLinkColor: string = 'black';\r\n    linkWidth: number = 10;\r\n    grid: number = 10;\r\n    multipleLinksOnOutput: boolean = true;\r\n    multipleLinksOnInput: boolean = false;\r\n    linkVerticalDecal: number = 0;\r\n    onOperatorSelect?: (operatorId: string) => boolean;\r\n    onOperatorUnselect?: () => boolean;\r\n    onOperatorMouseOver?: (operatorId: string) => boolean;\r\n    onOperatorMouseOut?: (operatorId: string) => boolean;\r\n    onLinkSelect?: (link: FlowchartLink) => boolean;\r\n    onLinkUnselect?: (link: FlowchartLink) => boolean;\r\n    onOperatorCreate?: (operatorId: string, operatorData: any, fullElement: boolean) => boolean;\r\n    onLinkCreate?: (linkId: string, linkData: any) => boolean;\r\n    onOperatorDelete?: (operatorId: string) => boolean;\r\n    onLinkDelete?: (linkId: string, forced: boolean) => boolean;\r\n    onOperatorMoved?: (operatorId: string, position: number) => void;\r\n    onAfterChange?: (changeType: any) => void;\r\n}\r\n\r\nexport interface FlowchartData {\r\n    operators: OperatorData[];\r\n    links: LinkData[];\r\n}\r\n\r\nexport interface OperatorData {\r\n    globalTypeIndex: number;\r\n    caption: string;\r\n    index: number;\r\n    posX: number;\r\n    posY: number;\r\n    configurationData: KeyValueTuple[] | null;\r\n}\r\n\r\n\r\n\r\nexport interface LinkData {\r\n    color: string;\r\n    fromOperatorIndex: number;\r\n    fromOutput: number;\r\n    toOperatorIndex: number;\r\n    toInput: number;\r\n}\r\n\r\nexport class Flowchart {\r\n    \r\n    private operatorRegistry:operatorimpl.OperatorRegistry;\r\n    private simulationManager?:SimulationManager|null;\r\n    private operators = new Map<number, FlowchartOperator>();\r\n    private links = new Map<number, FlowchartLink>();\r\n    public static readonly DATATYPE2COLOR = new Map([[ConnectorType.BOOLEAN, \"RED\"], [ConnectorType.COLOR, \"GREEN\"], [ConnectorType.FLOAT, \"BLUE\"], [ConnectorType.INTEGER, \"YELLOW\"], [ConnectorType.COLOR, \"PURPLE\"]]);\r\n    //Muss beim Löschen+Erzeugen von Operatoren+Links und bei Speichern von Properties zurückgesetzt werden\r\n    private currentDebugInfo:HashAndBufAndMaps|null=null;\r\n    private lastOutputConnectorClicked: FlowchartOutputConnector | null = null;\r\n    private selectedOperator: FlowchartOperator | null = null;\r\n    private selectedLink: FlowchartLink | null = null;\r\n    get SelectedLink() { return this.selectedLink };\r\n    get Options() { return this.options; }\r\n    \r\n    private positionRatio: number = 1;\r\n    get PositionRatio() { return this.positionRatio; }\r\n\r\n    private flowchartContainerSvgSvg: SVGSVGElement;\r\n    get Element() { return this.flowchartContainerSvgSvg; }\r\n    private linksLayer: SVGGElement;\r\n    get LinkLayer() { return this.linksLayer; }\r\n    private operatorsLayer: SVGGElement;\r\n    get OperatorsLayer() { return this.operatorsLayer; }\r\n    private operatorLibDiv: HTMLDivElement;\r\n    get ToolsLayer() { return this.operatorLibDiv; }\r\n    private tempLayer: SVGGElement;\r\n    private temporaryLink: SVGLineElement;\r\n    private temporaryLinkSnapped = false;\r\n    private propertyGridHtmlDiv: HTMLDivElement;\r\n\r\n    private markerArrow: SVGPathElement;\r\n    private markerCircle: SVGCircleElement;\r\n\r\n    public triggerDebug() {\r\n        if(this.currentDebugInfo==null) return;\r\n\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.onerror = (e) => { console.log(\"Fehler beim XMLHttpRequest!\"); };\r\n        xhr.open(\"GET\", \"/fbd\", true);\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.onload = (e) => {\r\n            if(this.currentDebugInfo==null) return;\r\n            \r\n            let arrayBuffer = xhr.response; // Note: not oReq.responseText\r\n            if (!arrayBuffer || arrayBuffer.byteLength <=16) {\r\n                console.info(\"! arrayBuffer || arrayBuffer.byteLength<16\");\r\n                this.currentDebugInfo=null;\r\n                return;\r\n            }\r\n            let ctx = new SerializeContext(arrayBuffer);\r\n            let hash = ctx.readU32();\r\n            if(hash!=this.currentDebugInfo.hash){\r\n                console.info(\"hash!=this.currentDebugInfo.hash\");\r\n                this.currentDebugInfo=null;\r\n                return;\r\n            }\r\n            let binaryCount = ctx.readU32();\r\n            for(let adressOffset=0;adressOffset<binaryCount;adressOffset++)\r\n            {\r\n                let value = ctx.readU32();\r\n                if(adressOffset<2) continue;\r\n                let connectorType=ConnectorType.BOOLEAN\r\n                let map = this.currentDebugInfo.typeIndex2adressOffset2ListOfLinks.get(connectorType)!;\r\n                let linksToChange = map.get(adressOffset);\r\n                if(linksToChange===undefined){\r\n                    console.error(`linksToColorize===undefined for connectorType ${connectorType} addressOffset ${adressOffset} and value ${value}`);\r\n                    continue;\r\n                }\r\n                linksToChange.forEach((e)=>{\r\n                    e.SetColor(value==1?\"red\":\"grey\");\r\n                    e.SetCaption(\"\"+value);\r\n                });\r\n            }\r\n\r\n            let integerCount = ctx.readU32();\r\n            for(let adressOffset=0;adressOffset<integerCount;adressOffset++)\r\n            {\r\n                let value = ctx.readS32();\r\n                if(adressOffset<2) continue;\r\n                let connectorType=ConnectorType.INTEGER\r\n                let map = this.currentDebugInfo.typeIndex2adressOffset2ListOfLinks.get(connectorType)!;\r\n                let linksToChange = map.get(adressOffset);\r\n                if(linksToChange===undefined){\r\n                    console.error(`linksToColorize===undefined for connectorType ${connectorType} addressOffset ${adressOffset} and value ${value}`);\r\n                    continue;\r\n                }\r\n                linksToChange.forEach((e)=>{\r\n                    e.SetCaption(\"\"+value);\r\n                });\r\n            }\r\n\r\n            let floatsCount = ctx.readU32();\r\n            for(let adressOffset=0;adressOffset<floatsCount;adressOffset++)\r\n            {\r\n                let value = ctx.readF32();\r\n                if(adressOffset<2) continue;\r\n                let connectorType=ConnectorType.FLOAT\r\n                let map = this.currentDebugInfo.typeIndex2adressOffset2ListOfLinks.get(connectorType)!;\r\n                let linksToChange = map.get(adressOffset);\r\n                if(linksToChange===undefined){\r\n                    console.error(`linksToColorize===undefined for connectorType ${connectorType} addressOffset ${adressOffset} and value ${value}`);\r\n                    continue;\r\n                }\r\n                linksToChange.forEach((e)=>{\r\n                    e.SetCaption(\"\"+value);\r\n                });\r\n            }\r\n\r\n            let colorsCount = ctx.readU32();\r\n            for(let adressOffset=0;adressOffset<colorsCount;adressOffset++)\r\n            {\r\n                let value = ctx.readU32();\r\n                if(adressOffset<2) continue;\r\n                let connectorType=ConnectorType.COLOR\r\n                let map = this.currentDebugInfo.typeIndex2adressOffset2ListOfLinks.get(connectorType)!;\r\n                let linksToChange = map.get(adressOffset);\r\n                if(linksToChange===undefined){\r\n                    console.error(`linksToColorize===undefined for connectorType ${connectorType} addressOffset ${adressOffset} and value ${value}`);\r\n                    continue;\r\n                }\r\n                linksToChange.forEach((e)=>{\r\n                    e.SetCaption(\"\"+value);\r\n                    e.SetColor($.ColorNumColor2ColorDomString(value));\r\n                });\r\n            }\r\n        }\r\n        xhr.send();\r\n    }\r\n\r\n    public _notifyGlobalMousemoveWithLink(e: MouseEvent) {\r\n        if (this.lastOutputConnectorClicked != null && !this.temporaryLinkSnapped) {\r\n            let end = Utils.EventCoordinatesInSVG(e, this.flowchartContainerSvgSvg, this.positionRatio);\r\n            this.temporaryLink.setAttribute('x2', \"\" + end.x);\r\n            this.temporaryLink.setAttribute('y2', \"\" + end.y);\r\n        }\r\n    }\r\n\r\n    public _notifyGlobalMouseupWithLink(e: MouseEvent) {\r\n        this.unsetTemporaryLink();\r\n    }\r\n\r\n    public _notifyOutputConnectorMousedown(c: FlowchartOutputConnector, e: MouseEvent) {\r\n        this.temporaryLinkSnapped = false;\r\n        let start = c.GetLinkpoint();\r\n        let end = Utils.EventCoordinatesInSVG(e, this.flowchartContainerSvgSvg, this.positionRatio);\r\n        this.temporaryLink.setAttribute('x1', \"\" + start.x);\r\n        this.temporaryLink.setAttribute('y1', \"\" + start.y);\r\n        this.temporaryLink.setAttribute('x2', \"\" + end.x);\r\n        this.temporaryLink.setAttribute('y2', \"\" + end.y);\r\n        this.setTemporaryLink(c);\r\n        document.onmouseup = (e) => {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n            this._notifyGlobalMouseupWithLink(e);\r\n        };\r\n        document.onmousemove = (e) => {\r\n            this._notifyGlobalMousemoveWithLink(e);\r\n        };\r\n    }\r\n\r\n    public _notifyInputConnectorMouseup(c: FlowchartInputConnector, e: MouseEvent) {\r\n        if (this.lastOutputConnectorClicked == null) return;\r\n        if (!this.options.multipleLinksOnInput && c.LinksLength > 0) return;\r\n        if (this.lastOutputConnectorClicked.Type == c.Type) {\r\n            this.createLink(null, this.lastOutputConnectorClicked, c);\r\n        }\r\n        this.unsetTemporaryLink();\r\n\r\n    }\r\n\r\n    public _notifyOperatorClicked(o: FlowchartOperator, e: MouseEvent) {\r\n        this.SelectOperator(o);\r\n    }\r\n\r\n    public _notifyLinkClicked(link: FlowchartLink, e: MouseEvent) {\r\n        this.selectLink(link);\r\n    }\r\n\r\n    public _notifyInputConnectorMouseenter(c: FlowchartInputConnector, e: MouseEvent) {\r\n        if (this.lastOutputConnectorClicked == null || this.lastOutputConnectorClicked.Type != c.Type) return;\r\n        if (!this.options.multipleLinksOnInput && c.LinksLength > 0) return;\r\n\r\n        this.temporaryLinkSnapped = true;\r\n        let end = c.GetLinkpoint();\r\n        this.temporaryLink.setAttribute(\"marker-end\", \"url(#marker-circle)\");\r\n        this.temporaryLink.setAttribute('x2', \"\" + end.x);\r\n        this.temporaryLink.setAttribute('y2', \"\" + end.y);\r\n    }\r\n\r\n    public _notifyInputConnectorMouseleave(c: FlowchartInputConnector, e: MouseEvent) {\r\n        this.temporaryLinkSnapped = false;\r\n        this.temporaryLink.setAttribute(\"marker-end\", \"url(#marker-arrow)\");\r\n    }\r\n\r\n    public unselectLink() {\r\n        if (this.selectedLink != null) {\r\n            if (this.options.onLinkUnselect && !this.options.onLinkUnselect(this.selectedLink)) {\r\n                return;\r\n            }\r\n            this.selectedLink.UnsetColor();\r\n            this.selectedLink = null;\r\n        }\r\n    }\r\n\r\n    public selectLink(link: FlowchartLink) {\r\n        this.unselectLink();\r\n        if (this.options.onLinkSelect && !this.options.onLinkSelect(link)) {\r\n            return;\r\n        }\r\n        this.unselectOperator();\r\n        this.selectedLink = link;\r\n        link.SetColor(this.options.defaultSelectedLinkColor);\r\n    }\r\n \r\n\r\n    private deleteSelectedThing(): void {\r\n        if (this.selectedOperator) {\r\n            this.DeleteOperator(this.selectedOperator.GlobalOperatorIndex);\r\n        }\r\n        else if (this.selectedLink) {\r\n            this.DeleteLink(this.selectedLink.GlobalLinkIndex);\r\n        }\r\n    }\r\n\r\n    private fbd2json():string{\r\n        let operators: OperatorData[] = [];\r\n        let links: LinkData[] = [];\r\n        for (const op of this.operators.values()) {\r\n            operators.push({ globalTypeIndex: op.TypeInfo.GlobalTypeIndex, caption: op.Caption, index: op.GlobalOperatorIndex, posX: op.Xpos, posY: op.Ypos, configurationData: op.Config_Copy });\r\n        }\r\n        for (const link of this.links.values()) {\r\n            links.push({\r\n                color: \"blue\",\r\n                fromOperatorIndex: link.From.Parent.GlobalOperatorIndex,\r\n                fromOutput: link.From.LocalConnectorIndex,\r\n                toOperatorIndex: link.To.Parent.GlobalOperatorIndex,\r\n                toInput: link.To.LocalConnectorIndex,\r\n            });\r\n        }\r\n        let data: FlowchartData = { operators: operators, links: links };\r\n        return JSON.stringify(data);\r\n    }\r\n\r\n    \r\n\r\n    private saveJSONToLocalFile() {\r\n        \r\n        let text = this.fbd2json();\r\n        let filename = \"functionBlockDiagram.json\";\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    private saveBinToLocalFile() {\r\n        \r\n        let text = this.fbd2json();\r\n        let compilerInstance = new FlowchartCompiler(this.operators);\r\n        let binFile =compilerInstance.Compile();  \r\n        let blob = new Blob([new Uint8Array(binFile.buf, 0, binFile.buf.byteLength)], {type: \"octet/stream\"});\r\n        let url = window.URL.createObjectURL(blob);\r\n        let filename = \"functionBlockDiagram.bin\";\r\n        var element = document.createElement('a');\r\n        element.style.display = 'none';\r\n        element.href=url;\r\n        element.download=filename;\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    private openFromLocalFile(files: FileList | null) {\r\n        if (files == null || files.length != 1) return;\r\n        const reader = new FileReader();\r\n        reader.onloadend = (e) => {\r\n            let s: string = <string>e.target!.result;\r\n            let data = <FlowchartData>JSON.parse(s);\r\n            this.setData(data);\r\n        }\r\n        reader.readAsText(files[0]);\r\n    }\r\n\r\n    private put2fbd(buf:ArrayBuffer)\r\n    {\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.open(\"PUT\", \"/fbd\", true);\r\n        xhr.onloadend = (e) => {\r\n            if(xhr.status!=200){\r\n                this.appManagement.DialogController().showOKDialog(16, `HTTP Error ${xhr.status}`, null);\r\n                return;\r\n            }\r\n            this.appManagement.DialogController().showOKDialog(16, `Successfully saved`, null);\r\n        }\r\n        xhr.onerror = (e) => { \r\n            this.appManagement.DialogController().showOKDialog(16, `Generic Error`, null);\r\n        }\r\n        xhr.send(buf);\r\n    }\r\n\r\n    private saveJSONToLabathomeFile(){\r\n        \r\n        this.appManagement.DialogController().showEnterFilenameDialog(10, \"Enter filename (without Extension\", (filename:string)=>{\r\n            let xhr_json = new XMLHttpRequest;\r\n            xhr_json.open(\"POST\", \"/fbdstorejson/\"+filename, true);\r\n            xhr_json.onloadend = (e) => {\r\n                if(xhr_json.status!=200){\r\n                    this.appManagement.DialogController().showOKDialog(16, `HTTP Error ${xhr_json.status}`, null);\r\n                    return;\r\n                }\r\n                this.appManagement.DialogController().showOKDialog(16, `Successfully saved`, null);\r\n            }\r\n            xhr_json.onerror = (e) => { this.appManagement.DialogController().showOKDialog(16, `Generic Error`, null);}\r\n            xhr_json.send(this.fbd2json());\r\n        });\r\n\r\n    }\r\n\r\n    private saveJSONandBINToLabathomeDefaultFile(buf:ArrayBuffer)\r\n    {\r\n        let xhr_bin = new XMLHttpRequest();\r\n        xhr_bin.open(\"POST\", \"/fbddefaultbin\", true);\r\n        xhr_bin.onloadend = (e) => {\r\n            if(xhr_bin.status!=200){\r\n                this.appManagement.DialogController().showOKDialog(16, `HTTP Error ${xhr_bin.status}`, null);\r\n                return;\r\n            }\r\n            let xhr_json  = new XMLHttpRequest();\r\n            xhr_json.open(\"POST\", \"/fbddefaultjson\", true);\r\n            xhr_json.onloadend =(e)=>{\r\n                if(xhr_json.status!=200){\r\n                    this.appManagement.DialogController().showOKDialog(16, `HTTP Error ${xhr_json.status}`, null);\r\n                    return;\r\n                }\r\n                this.appManagement.DialogController().showOKDialog(16, `Successfully set a new default FBD`, null);\r\n            }\r\n            xhr_json.onerror = (e) => { this.appManagement.DialogController().showOKDialog(16, `Generic Error`, null);}\r\n            xhr_json.send(this.fbd2json())\r\n        }\r\n        xhr_bin.onerror = (e) => { this.appManagement.DialogController().showOKDialog(16, `Generic Error`, null);}\r\n        xhr_bin.send(buf);\r\n    }\r\n\r\n    private openJSONFromLabathome()\r\n    {\r\n        let filename:string = \"\";\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.open(\"GET\", \"/fbdstorejson/\", true);//GET without filename, but with \"/\" at the end!!!\r\n        xhr.onload = (e) => {\r\n            let s = xhr.responseText;\r\n            let data = <string[]>JSON.parse(s);\r\n            this.appManagement.DialogController().showFilelist(1000, data, \r\n                (filename:string)=>{\r\n                    let xhr = new XMLHttpRequest;\r\n                    xhr.open(\"GET\", \"/fbdstorejson/\"+filename, true); //GET with the filename selected in the dialog\r\n                    xhr.onload = (e) => {\r\n                        let s = xhr.responseText;\r\n                        let data = <FlowchartData>JSON.parse(s);\r\n                        this.setData(data);\r\n                    }\r\n                    xhr.send();\r\n                },\r\n                (filename:string)=>{\r\n                    let xhr = new XMLHttpRequest;\r\n                    xhr.open(\"DELETE\", \"/fbdstorejson/\"+filename, true); //GET with the filename selected in the dialog\r\n                    xhr.onloadend = (e) => {\r\n                        this.appManagement.DialogController().showOKDialog(1, `File ${filename} deleted successfully`, null);\r\n                    }\r\n                    xhr.send();\r\n                }\r\n            );\r\n        }\r\n        xhr.send();\r\n    }\r\n\r\n\r\n    private openDefaultJSONFromLabathome()\r\n    {\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.open(\"GET\", \"/fbddefaultjson\", true);\r\n        xhr.onload = (e) => {\r\n            let s = xhr.responseText;\r\n            let data = <FlowchartData>JSON.parse(s);\r\n            this.setData(data);\r\n        }\r\n        xhr.send();\r\n    }\r\n\r\n    \r\n\r\n    private buildMenu(subcontainer: HTMLDivElement) {\r\n        let fileInput = <HTMLInputElement>$.Html(subcontainer, \"input\", [\"type\", \"file\", \"id\", \"fileInput\", \"accept\", \".json\"]);\r\n        fileInput.style.display = \"none\";\r\n        fileInput.onchange = (e) => {\r\n            this.openFromLocalFile(fileInput.files);\r\n        }\r\n\r\n        let toolbar = $.Html(subcontainer, \"div\", [], [\"develop-toolbar\"]);\r\n        let menuFile = $.Html(toolbar, \"div\", [], [\"dropdown\"]);\r\n        let menuFileDropBtn = <HTMLButtonElement>$.Html(menuFile, \"button\", [], [\"dropbtn\"], \"File ▼\");\r\n        let menuFileDropContent = $.Html(menuFile, \"div\", [], [\"dropdown-content\"]);\r\n        menuFileDropBtn.onclick = (e) => { menuFileDropContent.classList.toggle(\"show\"); };\r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"📂 Open (Local)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            fileInput.click();\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"📂 Open (labathome)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.openJSONFromLabathome()\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"📂 Open Default (labathome)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.openDefaultJSONFromLabathome()\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"💾 Save (Local)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.saveJSONToLocalFile();\r\n            e.preventDefault();\r\n        }\r\n        \r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"💾 Save (labathome)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.saveJSONToLabathomeFile();\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"💾 Save Bin (Local)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.saveBinToLocalFile();\r\n            e.preventDefault();\r\n        }\r\n        //let runbutton = $.Html(toolbar, \"a\", [\"href\", \"#\"], [\"develop-toolbar\"], \"Run\");\r\n\r\n        let menuDebug = $.Html(toolbar, \"div\", [], [\"dropdown\"]);\r\n        let menuDebugDropBtn = <HTMLButtonElement>$.Html(menuDebug, \"button\", [], [\"dropbtn\"], \"Debug ▼\");\r\n\r\n        let menuDebugDropContent = $.Html(menuDebug, \"div\", [], [\"dropdown-content\"]);\r\n        menuDebugDropBtn.onclick = (e) => {\r\n            menuDebugDropContent.classList.toggle(\"show\");\r\n        };\r\n        $.Html(menuDebugDropContent, \"a\", [\"href\", \"#\"], [], \"☭ Run Now\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            let compilerInstance = new FlowchartCompiler(this.operators);\r\n            let guidAndBufAndMap: HashAndBufAndMaps=compilerInstance.Compile();  \r\n            this.currentDebugInfo=guidAndBufAndMap;\r\n            this.put2fbd(guidAndBufAndMap.buf);\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuDebugDropContent, \"a\", [\"href\", \"#\"], [], \"👣 Set as Startup-App\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            let compilerInstance = new FlowchartCompiler(this.operators);\r\n            let guidAndBufAndMap: HashAndBufAndMaps=compilerInstance.Compile();  \r\n            this.saveJSONandBINToLabathomeDefaultFile(guidAndBufAndMap.buf);\r\n            e.preventDefault();\r\n        }\r\n        let menuSimulation = $.Html(toolbar, \"div\", [], [\"dropdown\"]);\r\n        let menuSimulationDropBtn = <HTMLButtonElement>$.Html(menuSimulation, \"button\", [], [\"dropbtn\"], \"Simulation ▼\");\r\n\r\n        let menuSimulationDropContent = $.Html(menuSimulation, \"div\", [], [\"dropdown-content\"]);\r\n        menuSimulationDropBtn.onclick = (e) => {\r\n            menuSimulationDropContent.classList.toggle(\"show\");\r\n        };\r\n        $.Html(menuSimulationDropContent, \"a\", [\"href\", \"#\"], [], \"➤ Start Simulation\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            let compilerInstance = new FlowchartCompiler(this.operators);\r\n            this.simulationManager=new SimulationManager(compilerInstance.CompileForSimulation());\r\n            this.simulationManager.Start(false);\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuSimulationDropContent, \"a\", [\"href\", \"#\"], [], \"× Stop Simulation\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.simulationManager?.Stop();\r\n            e.preventDefault();\r\n        }\r\n        //let menuDebugLink2 = $.Html(menuDebugDropContent, \"a\", [\"href\", \"#\"], [], \"◉ Stop\");\r\n        //let menuDebugLink3 = $.Html(menuDebugDropContent, \"a\", [\"href\", \"#\"], [], \"◯ Erase\");\r\n    }\r\n\r\n    constructor(private appManagement:AppManagement, private container: HTMLDivElement, private options: FlowchartOptions) {\r\n        if (!this.container) throw new Error(\"container is null\");\r\n        this.operatorRegistry=operatorimpl.OperatorRegistry.Build();\r\n        let subcontainer = <HTMLDivElement>$.Html(this.container, \"div\", [], [\"develop-ui\"]);\r\n        subcontainer.onclick = (e) => {\r\n            if ((<HTMLElement>e.target).classList.contains(\"dropbtn\")) return;\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n        }\r\n\r\n        this.buildMenu(subcontainer);\r\n\r\n\r\n        let workspace = <HTMLDivElement>$.Html(subcontainer, \"div\", [\"tabindex\", \"0\"], [\"develop-workspace\"]);//tabindex, damit keypress-Events abgefangen werden können\r\n        this.propertyGridHtmlDiv = <HTMLDivElement>$.Html(subcontainer, \"div\", [], [\"develop-properties\"]);\r\n\r\n\r\n\r\n        this.flowchartContainerSvgSvg = <SVGSVGElement>$.Svg(workspace, \"svg\", [\"width\", \"100%\", \"height\", \"100%\"], [\"flowchart-container\"]);\r\n\r\n\r\n        this.linksLayer = <SVGGElement>$.Svg(this.flowchartContainerSvgSvg, \"g\", [], [\"flowchart-links-layer\"]);\r\n        this.operatorsLayer = <SVGGElement>$.Svg(this.flowchartContainerSvgSvg, \"g\", [], [\"flowchart-operators-layer\", \"unselectable\"]);\r\n        this.tempLayer = <SVGSVGElement>$.Svg(this.flowchartContainerSvgSvg, \"g\", [], [\"flowchart-temporary-link-layer\"]);\r\n        this.tempLayer.style.visibility = \"hidden\";//visible\r\n        let defs = $.Svg(this.tempLayer, \"defs\", []);\r\n        let markerArrow = $.Svg(defs, \"marker\", [\"id\", \"marker-arrow\", \"markerWidth\", \"4\", \"markerHeight\", \"4\", \"refX\", \"1\", \"refY\", \"2\", \"orient\", \"0\"]);\r\n        this.markerArrow = <SVGPathElement>$.Svg(markerArrow, \"path\", [\"d\", \"M0,0 L0,4 L2,2 z\", \"fill\", \"red\", \"stroke\", \"black\", \"stroke-width\", \"0.5\"]);\r\n        let markerCircle = $.Svg(defs, \"marker\", [\"id\", \"marker-circle\", \"markerWidth\", \"4\", \"markerHeight\", \"4\", \"refX\", \"2\", \"refY\", \"2\", \"orient\", \"0\"]);\r\n        this.markerCircle = <SVGCircleElement>$.Svg(markerCircle, \"circle\", [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\", \"fill\", \"red\", \"stroke-width\", \"1px\", \"stroke\", \"black\"]);\r\n        this.temporaryLink = <SVGLineElement>$.Svg(this.tempLayer, \"line\", [\"x1\", \"0\", \"y1\", \"0\", \"x2\", \"0\", \"y2\", \"0\", \"stroke-dasharray\", \"6,6\", \"stroke-width\", \"4\", \"stroke\", \"black\", \"fill\", \"none\", \"marker-end\", \"url(#marker-arrow)\"]);\r\n\r\n        let operatorLibActivator = <SVGRectElement>$.Svg(this.flowchartContainerSvgSvg, \"rect\", [\"width\", \"40\", \"height\", \"100%\", \"fill\", \"white\", \"fill-opacity\", \"0\"]);\r\n\r\n        this.operatorLibDiv = <HTMLDivElement>$.Html(workspace, \"div\", [], [\"flowchart-operatorlibdiv\", \"unselectable\"]);\r\n        this.operatorLibDiv.style.display = \"none\";\r\n\r\n\r\n        //let toolsRect= <SVGRectElement>$.Svg(this.operatorLibDiv, \"rect\", [\"width\",\"140\", \"height\", \"100%\", \"rx\", \"10\", \"ry\", \"10\"], [\"tools-container\"]);\r\n\r\n        //The onmousemove event occurs every time the mouse pointer is moved over the div element.\r\n        //The mouseenter event only occurs when the mouse pointer enters the div element.\r\n        //The onmouseover event occurs when the mouse pointer enters the div element, and its child elements (p and span).\r\n\r\n        //The mouseout event triggers when the mouse pointer leaves any child elements as well the selected element.\r\n        //The mouseleave event is only triggered when the mouse pointer leaves the selected element.\r\n        operatorLibActivator.onmouseenter = (e) => {\r\n            this.operatorLibDiv.style.display = \"inline\";\r\n        }\r\n        this.operatorLibDiv.onmouseleave = (e) => {\r\n            this.operatorLibDiv.style.display = \"none\";\r\n        }\r\n\r\n        this.flowchartContainerSvgSvg.onclick = (e) => {\r\n            if (e.target == this.Element)//if the click is in a \"free\" area, then the target is the uppermost layer; the linkLayer!\r\n            {\r\n                this.unselectOperator();\r\n                this.unselectLink();\r\n            }\r\n        }\r\n\r\n        workspace.onkeyup = (e) => {\r\n            if (e.key == \"Delete\") {\r\n                console.log(\"Flowchart workspace.onkeyup with e.target=\" + e.target + \" und Delete-Key\");\r\n                this.deleteSelectedThing();\r\n            }\r\n            else {\r\n                console.log(\"Flowchart workspace.onkeyup with e.target=\" + e.target + \" und key \" + e.key);\r\n            }\r\n        }\r\n\r\n        this.operatorRegistry.populateOperatorLib(this.operatorLibDiv,(e:MouseEvent, ti:TypeInfo)=>{\r\n            let caption = ti.OperatorName;\r\n            let o = this.createOperatorInternal(ti.GlobalTypeIndex, caption, null);\r\n            let coords = Utils.EventCoordinatesInSVG(e, this.Element);\r\n            o.MoveTo(coords.x - 10, coords.y - 10);\r\n            o.RegisterDragging(e);\r\n            this.operators.set(o.GlobalOperatorIndex, o);\r\n        } );\r\n    }\r\n\r\n\r\n    public onFirstStart() {\r\n        if (typeof this.options.data !== undefined && this.options.data != null) {\r\n            this.setData(this.options.data);\r\n        }\r\n    }\r\n\r\n\r\n    private createOperatorInternal(globalTypeIndex: number, caption: string, configurationData: KeyValueTuple[] | null): FlowchartOperator {\r\n        \r\n        if(!this.operatorRegistry.IsIndexKnown(globalTypeIndex))\r\n        {\r\n            throw new Error(`Unknown globalTypeIndex ${globalTypeIndex}`);\r\n        }\r\n        if (this.options.onOperatorCreate && !this.options.onOperatorCreate(caption, null, false)) {\r\n            throw new Error(`Creation of operator of globalTypeIndex ${globalTypeIndex} prevented by onOperatorCreate plugin`);\r\n        }\r\n        let op = this.operatorRegistry.CreateByIndex(globalTypeIndex, this, caption, configurationData)!;\r\n       \r\n        this.currentDebugInfo=null;\r\n        return op;\r\n    }\r\n\r\n    public setData(data: FlowchartData) {\r\n\r\n        this.links.forEach((e) => e.RemoveFromDOM());\r\n        this.links.clear();\r\n        this.operators.forEach((e) => e.RemoveFromDOM());\r\n        this.operators.clear();\r\n        let indexInData2operator = new Map<number, FlowchartOperator>();\r\n\r\n        for (const d of data.operators) {\r\n            let o = this.createOperatorInternal(d.globalTypeIndex, d.caption, d.configurationData);\r\n            o.MoveTo(d.posX, d.posY);\r\n            this.operators.set(o.GlobalOperatorIndex, o);\r\n            indexInData2operator.set(d.index, o);\r\n        }\r\n        for (const d of data.links) {\r\n            let fromOp = indexInData2operator.get(d.fromOperatorIndex);\r\n            let toOp = indexInData2operator.get(d.toOperatorIndex);\r\n            if (fromOp === undefined || toOp === undefined) continue;\r\n            let fromConn = fromOp.GetOutputConnectorByIndex(d.fromOutput);\r\n            let toConn = toOp.GetInputConnectorByIndex(d.toInput);\r\n            if (fromConn == null || toConn == null) continue;\r\n            this.createLink(d, fromConn, toConn);\r\n        }\r\n    }\r\n\r\n    public DeleteLink(globalLinkIndex: number) {\r\n        this.currentDebugInfo=null;\r\n        let l = this.links.get(globalLinkIndex);\r\n        if (l === undefined) {\r\n            throw Error(\"Link to delete is undefined\")\r\n        }\r\n        if (this.selectedLink == l) {\r\n            this.unselectLink();\r\n        }\r\n        l.RemoveFromDOM();\r\n        this.links.delete(globalLinkIndex);\r\n        l.To.RemoveLink(l);\r\n        l.From.RemoveLink(l);\r\n    }\r\n\r\n    public DeleteOperator(globalOperatorIndex: number) {\r\n        this.currentDebugInfo=null;\r\n        let o = this.operators.get(globalOperatorIndex);\r\n        if (o === undefined) {\r\n            throw Error(\"Operator to delete is undefined\")\r\n        }\r\n        if (this.selectedOperator == o) {\r\n            this.unselectOperator();\r\n        }\r\n        o.RemoveFromDOM();\r\n        this.operators.delete(o.GlobalOperatorIndex);\r\n        for (const outputKV of o.OutputsKVIt) {\r\n            for (const linkKV of outputKV[1].LinksKVIt) {\r\n                this.DeleteLink(linkKV[1].GlobalLinkIndex);\r\n            }\r\n        }\r\n        for (const inputKV of o.InputsKVIt) {\r\n            for (const linkKV of inputKV[1].LinksKVIt) {\r\n                this.DeleteLink(linkKV[1].GlobalLinkIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    public createLink(data: LinkData | null, from: FlowchartOutputConnector, to: FlowchartInputConnector): FlowchartLink | null {\r\n        if (this.options.onLinkCreate && !this.options.onLinkCreate(from.Caption, data)) return null;\r\n        if (!this.options.multipleLinksOnOutput && from.LinksLength > 0) return null;\r\n        if (!this.options.multipleLinksOnInput && to.LinksLength > 0) return null;\r\n        this.currentDebugInfo=null;\r\n        let l: FlowchartLink = new FlowchartLink(this, \"\", this.Options.defaultLinkColor, from, to);\r\n        from.AddLink(l);\r\n        to.AddLink(l);\r\n        this.links.set(l.GlobalLinkIndex, l);\r\n        return l;\r\n    }\r\n\r\n    private unsetTemporaryLink() {\r\n        this.lastOutputConnectorClicked = null;\r\n        this.tempLayer.style.visibility = \"hidden\";\r\n    }\r\n\r\n    private setTemporaryLink(c: FlowchartOutputConnector) {\r\n        this.lastOutputConnectorClicked = c;\r\n        let color = Flowchart.DATATYPE2COLOR.get(c.Type)\r\n        if (!color) color = \"BLACK\";\r\n        this.markerArrow.style.fill = color;\r\n        this.markerCircle.style.fill = color;\r\n        this.tempLayer.style.visibility = \"visible\";\r\n    }\r\n\r\n    private unselectOperator() {\r\n        if (this.options.onOperatorUnselect && !this.options.onOperatorUnselect()) return;\r\n        this.propertyGridHtmlDiv.innerText = \"\"; //clear\r\n        if (this.selectedOperator == null) return;\r\n        this.selectedOperator.ShowAsSelected(false);\r\n        this.selectedOperator = null;\r\n    }\r\n\r\n    public SelectOperator(operator: FlowchartOperator): void {\r\n        if (this.options.onOperatorSelect && !this.options.onOperatorSelect(operator.Caption)) return;\r\n        this.unselectLink();\r\n        if (this.selectedOperator != null) this.selectedOperator.ShowAsSelected(false);\r\n        operator.ShowAsSelected(true);\r\n        this.selectedOperator = operator;\r\n        this.propertyGridHtmlDiv.innerText = \"\"; //clear\r\n        $.Html(this.propertyGridHtmlDiv, \"p\", [], [\"develop-propertygrid-head\"], `Properties for ${this.selectedOperator.Caption}`);\r\n        let table = <HTMLTableElement>$.Html(this.propertyGridHtmlDiv, \"table\", [], [\"develop-propertygrid-table\"]);\r\n        let thead = <HTMLTableSectionElement>$.Html(table, \"thead\", [],[]);\r\n        let tr_head = $.Html(thead, \"tr\", [], [\"develop-propertygrid-tr\"]);\r\n        $.Html(tr_head, \"th\", [], [\"develop-propertygrid-th\"], \"Key\");\r\n        $.Html(tr_head, \"th\", [], [\"develop-propertygrid-th\"], \"Value\");\r\n        let tbody= <HTMLTableSectionElement>$.Html(table, \"tbody\", [],[]);\r\n        if (this.selectedOperator!.PopulateProperyGrid(tbody)) {\r\n            $.Html(this.propertyGridHtmlDiv, \"button\", [], [\"develop-propertygrid-button\"], `Save`).onclick=(e)=>{\r\n                this.currentDebugInfo=null;\r\n                operator.SavePropertyGrid(tbody);\r\n            };\r\n        }\r\n        else {\r\n            this.propertyGridHtmlDiv.innerText = \"\"; //clear\r\n            $.Html(this.propertyGridHtmlDiv, \"p\", [], [\"develop-propertygrid-head\"], `No Properties for ${this.selectedOperator.Caption}`);\r\n        }\r\n    }\r\n\r\n    // Found here : http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\r\n    public static _shadeColor(color: string, percent: number) {\r\n        var f = parseInt(color.slice(1), 16), t = percent < 0 ? 0 : 255, p = percent < 0 ? percent * -1 : percent, R = f >> 16, G = f >> 8 & 0x00FF, B = f & 0x0000FF;\r\n        return \"#\" + (0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B)).toString(16).slice(1);\r\n    }\r\n}\r\n","import {FlowchartOperator, PositionType } from \"./FlowchartOperator\";\r\nimport {ConnectorType } from \"./FlowchartConnector\";\r\nimport { NodeWrapper, TopologicalSortDFS } from \"./TopologicalSorfDFS\";\r\nimport { SerializeContext } from \"./SerializeContext\";\r\nimport { FlowchartLink } from \"./FlowchartLink\";\r\n\r\nexport interface SerializeContextAndAdressMap {\r\n    typeIndex2globalConnectorIndex2adressOffset: Map<number, Map<number, number>>;\r\n    ctx: SerializeContext;\r\n}\r\n\r\nexport interface HashAndBufAndMaps{\r\n    hash:number;\r\n    buf: ArrayBuffer;\r\n    typeIndex2globalConnectorIndex2adressOffset:Map<number, Map<number, number>>,\r\n    typeIndex2adressOffset2ListOfLinks:Map<number, Map<number, Array<FlowchartLink>>>,\r\n    typeIndex2maxOffset:Map<number, number>,\r\n}\r\n\r\nexport interface HashAndBuf{\r\n    hash:number;\r\n    buf: ArrayBuffer;\r\n}\r\n\r\nexport interface SortedOperatorsAndMaps{\r\n    sortedOperators:FlowchartOperator[];\r\n    typeIndex2globalConnectorIndex2adressOffset:Map<number, Map<number, number>>,\r\n    typeIndex2adressOffset2ListOfLinks:Map<number, Map<number, Array<FlowchartLink>>>,\r\n    typeIndex2maxOffset:Map<number, number>,\r\n}\r\n\r\nexport interface Maps{\r\n    typeIndex2globalConnectorIndex2adressOffset:Map<number, Map<number, number>>,\r\n    typeIndex2adressOffset2ListOfLinks:Map<number, Map<number, Array<FlowchartLink>>>,\r\n    typeIndex2maxOffset:Map<number, number>,\r\n}\r\n\r\nexport class FlowchartCompiler {\r\n    \r\n    public constructor(private index2operator:Map<number,FlowchartOperator>)\r\n    {\r\n       \r\n    }\r\n\r\n    private sortOperators():FlowchartOperator[]{\r\n        let index2wrappedOperator = new Map<number, NodeWrapper<FlowchartOperator>>();\r\n        this.index2operator.forEach((v, k, m) => {\r\n            index2wrappedOperator.set(v.GlobalOperatorIndex, new NodeWrapper<FlowchartOperator>(v));\r\n        });\r\n        let wrappedOutputOperators: NodeWrapper<FlowchartOperator>[] = [];\r\n        for (let i of index2wrappedOperator.values()) {\r\n            //Stelle für jede \"gewrapte Node\" fest, welche Operatoren von Ihr abhängig sind\r\n            let dependents = new Set<NodeWrapper<FlowchartOperator>>();\r\n            for (const inputkv of i.Payload.InputsKVIt) {\r\n                for (const linkkv of inputkv[1].LinksKVIt) {\r\n                    let dependentOperator = linkkv[1].From.Parent;\r\n                    let dependentWrappedNode = index2wrappedOperator.get(dependentOperator.GlobalOperatorIndex);\r\n                    if (!dependentWrappedNode)\r\n                        throw new Error(\"Implementation Error: dependentWrappedNode is undefined\");\r\n                    dependents.add(dependentWrappedNode);\r\n                }\r\n            }\r\n            dependents.forEach(e => i.DependendNodes.push(e));\r\n            //füge alle mit Typ \"Output\" einer Liste hinzu\r\n            if (i.Payload.TypeInfo.Position == PositionType.Output) wrappedOutputOperators.push(i);\r\n        }\r\n\r\n        let algorithm = new TopologicalSortDFS<FlowchartOperator>();\r\n        let sortedList = algorithm.sort(wrappedOutputOperators);\r\n        return sortedList.map((e) => e.Payload)\r\n    }\r\n\r\n    public CompileForSimulation():SortedOperatorsAndMaps{\r\n        let sortedOperators = this.sortOperators();\r\n        for (const key in sortedOperators) {\r\n            let value = sortedOperators[key];\r\n            value.SetDebugInfoText(\"Sequence \" + key);\r\n        }\r\n        let maps=this.createLookupMaps(sortedOperators);\r\n        return {\r\n            sortedOperators:sortedOperators,\r\n            typeIndex2globalConnectorIndex2adressOffset:maps.typeIndex2globalConnectorIndex2adressOffset,\r\n            typeIndex2adressOffset2ListOfLinks:maps.typeIndex2adressOffset2ListOfLinks,\r\n            typeIndex2maxOffset:maps.typeIndex2maxOffset,\r\n        };\r\n    }\r\n\r\n    public Compile(): HashAndBufAndMaps {\r\n        let sortedOperators = this.sortOperators();\r\n        for (const key in sortedOperators) {\r\n            let value = sortedOperators[key];\r\n            value.SetDebugInfoText(\"Sequence \" + key);\r\n        }\r\n        let maps=this.createLookupMaps(sortedOperators);\r\n        let hashAndBuf= this.serialize(sortedOperators, maps);\r\n\r\n        let dv = new DataView(hashAndBuf.buf);\r\n        let code: String = \"const uint8_t code[] = {\"\r\n        for (let i = 0; i < dv.byteLength; i++) {\r\n            code += \"0x\" + dv.getUint8(i).toString(16) + \", \";\r\n        }\r\n        code += \"};\";\r\n        console.log(code);\r\n\r\n        return {\r\n            hash:hashAndBuf.hash,\r\n            buf: hashAndBuf.buf,\r\n            typeIndex2globalConnectorIndex2adressOffset:maps.typeIndex2globalConnectorIndex2adressOffset,\r\n            typeIndex2adressOffset2ListOfLinks:maps.typeIndex2adressOffset2ListOfLinks,\r\n            typeIndex2maxOffset:maps.typeIndex2maxOffset,\r\n        };\r\n    }\r\n\r\n    private createLookupMaps(operators:FlowchartOperator[]):Maps{\r\n        //Speichert separat für jeden Datentyp (Bool, int, float, color,...), welcher GlobalConnectorIndex auf welchen bei 2 beginnend fortlaufenden Adress-Offset gemapped wird\r\n        //wir beginnen bei 2, weil unbeschaltete Outputs auf 0 schreiben und unbeschaltete Inputs von 1 lesen.\r\n        let typeIndex2globalConnectorIndex2adressOffset = new Map<number, Map<number, number>>(); //globalConnectorIndex_Outputs 2 variableAdress\r\n        let typeIndex2maxOffset = new Map<number, number>();\r\n        let typeIndex2adressOffset2ListOfLinks = new Map<number, Map<number, Array<FlowchartLink>>>();\r\n        for (let type in ConnectorType) {\r\n            if (!isNaN(Number(type))) {\r\n                typeIndex2globalConnectorIndex2adressOffset.set(Number(type), new Map<number, number>());\r\n                typeIndex2maxOffset.set(Number(type), 2);\r\n                typeIndex2adressOffset2ListOfLinks.set(Number(type), new Map<number,Array<FlowchartLink>>());\r\n            }\r\n        }\r\n        for (const operator of operators) {\r\n            for (const outputKV of operator.OutputsKVIt) {\r\n                if (outputKV[1].LinksLength == 0) {\r\n                    //unconnected output -->writes to memory adress zero of the respective data type\r\n                    typeIndex2globalConnectorIndex2adressOffset.get(outputKV[1].Type)!.set(outputKV[1].GlobalConnectorIndex, 0);\r\n                }\r\n                else {\r\n                    //connected output --> create new memory address and set it\r\n                    let index = typeIndex2maxOffset.get(outputKV[1].Type)!;\r\n                    typeIndex2globalConnectorIndex2adressOffset.get(outputKV[1].Type)!.set(outputKV[1].GlobalConnectorIndex, index);\r\n                    \r\n                    //add all outgoing links to typeIndex2adressOffset2ListOfLinks\r\n                    typeIndex2adressOffset2ListOfLinks.get(outputKV[1].Type)!.set(index, outputKV[1].GetLinksCopy());\r\n                    index++;\r\n                    typeIndex2maxOffset.set(outputKV[1].Type, index);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            typeIndex2globalConnectorIndex2adressOffset:typeIndex2globalConnectorIndex2adressOffset,\r\n            typeIndex2adressOffset2ListOfLinks:typeIndex2adressOffset2ListOfLinks,\r\n            typeIndex2maxOffset:typeIndex2maxOffset,\r\n        };\r\n    }\r\n\r\n\r\n    private serialize(operators: FlowchartOperator[], maps:Maps):HashAndBuf {\r\n\r\n\r\n        /*\r\n        Lege nun die Operatoren in der durch das Array vorgegebenen Struktur in ein Array ab\r\n        */\r\n        let buffer = new ArrayBuffer(Math.pow(2, 16));\r\n        let serctx = new SerializeContext(buffer, 0);\r\n        let ctx: SerializeContextAndAdressMap = { \r\n            typeIndex2globalConnectorIndex2adressOffset: maps.typeIndex2globalConnectorIndex2adressOffset, \r\n            ctx:serctx\r\n        };\r\n        //Version of Data Structure\r\n        serctx.writeU32(0xAFFECAFE);\r\n        //Placeholder for hash\r\n        serctx.writeU32(0);\r\n\r\n\r\n        for (let type in ConnectorType) {\r\n            if (!isNaN(Number(type))) {\r\n                serctx.writeU32(maps.typeIndex2maxOffset.get(Number(type))!);\r\n            }\r\n        }\r\n    \r\n        //operatorsCount\r\n        serctx.writeU32(operators.length);\r\n        for (const operator of operators) {\r\n            operator.SerializeToBinary(ctx);\r\n        }\r\n\r\n        let hash= serctx.funhash(8, (2^32)-1);\r\n        serctx.overwriteU32(hash, 4);\r\n\r\n        return {\r\n            hash:hash, \r\n            buf:ctx.ctx.getResult(), \r\n        };\r\n    }\r\n}","import { FlowchartOperator } from \"./FlowchartOperator\";\r\nimport { Flowchart } from \"./Flowchart\";\r\nimport { FlowchartLink } from \"./FlowchartLink\";\r\nimport {$, Location2D} from \"../utils\"\r\n\r\nconst TRANSLATEY = 20;\r\n\r\nexport enum ConnectorType{\r\n    BOOLEAN=0,\r\n    INTEGER=1,\r\n    FLOAT=2,\r\n    COLOR=3,\r\n}\r\n\r\nexport abstract class FlowchartConnector {\r\n    private static INDEX: number = 0;\r\n    private globalConnectorIndex: number;\r\n    get GlobalConnectorIndex() { return this.globalConnectorIndex; }\r\n    get LocalConnectorIndex(){return this.localIndex;}\r\n\r\n    protected element: SVGGElement;\r\n    get Element() { return this.element; }\r\n\r\n    protected snapper:SVGCircleElement;\r\n    protected connector:SVGElement;\r\n    protected connectorGroup:SVGGElement;\r\n\r\n    protected  links = new Map<number, FlowchartLink>();\r\n    public HasLink = (globalLinkIndex: number) => this.links.has(globalLinkIndex);\r\n    public AddLink = (link: FlowchartLink) => this.links.set(link.GlobalLinkIndex, link);\r\n    public RemoveLink = (link: FlowchartLink) => this.links.delete(link.GlobalLinkIndex);\r\n    get LinksLength() { return this.links.size};\r\n    public GetLinksCopy(): FlowchartLink[] {\r\n        return Array.from(this.links.values());\r\n    }\r\n\r\n    get LinksKVIt(){return this.links.entries()}\r\n    protected abstract GetLinkpointXOffset(width:number): number;\r\n    protected abstract getIOSpecifics():{inputOrOutput:string, parent:SVGGElement, translateY:number, dx:number};\r\n\r\n    public RefreshLinkPositions() {\r\n        this.links.forEach(l=>{\r\n            l.RefreshPosition();\r\n        });\r\n        \r\n    }\r\n\r\n    constructor(private parent: FlowchartOperator, private caption: string, private localIndex:number, private type:ConnectorType) {\r\n\r\n        this.globalConnectorIndex = FlowchartConnector.INDEX++;\r\n        let spec = this.getIOSpecifics();\r\n        let translateY = TRANSLATEY*spec.parent.childElementCount;\r\n        this.element = <SVGGElement>$.Svg(spec.parent, \"g\", [\"transform\", `translate(0 ${translateY})`], [`operator-${spec.inputOrOutput}`]);\r\n        this.element.setAttribute(\"data-connector-datatype\", ConnectorType[type]);\r\n\r\n        let text =  <SVGTextElement>$.Svg(this.element, \"text\", [\"dx\",\"\"+spec.dx, \"dy\", \"4\"], [`operator-${spec.inputOrOutput}-caption`]);\r\n        text.textContent=caption;\r\n        this.connectorGroup = <SVGGElement>$.Svg(this.element, \"g\", []);\r\n        this.connector = <SVGCircleElement>$.Svg(this.connectorGroup, \"circle\", [\"r\",\"4\"], [`operator-${spec.inputOrOutput}-connector`, ConnectorType[type]]);\r\n        this.snapper= <SVGCircleElement>$.Svg(this.connectorGroup, \"circle\", [\"r\",\"10\"], [`operator-${spec.inputOrOutput}-snapper`]);\r\n        \r\n        this.element.onmouseover = (e) => {\r\n            for (const link of this.links.values()) {\r\n                if (link && link != this.parent.Parent.SelectedLink) {\r\n                    link.SetColor(Flowchart._shadeColor(this.parent.Parent.Options.defaultLinkColor, -0.4));\r\n                }\r\n            }\r\n        }\r\n\r\n        this.element.onmouseout = (e) => {\r\n            for (const link of this.links.values()) {\r\n                if (link && link != this.parent.Parent.SelectedLink) {\r\n                    link.UnsetColor();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    get Parent() { return this.parent; }\r\n    get Caption() { return this.caption; }\r\n    get Type() { return this.type; }\r\n\r\n\r\n    public GetLinkpoint(): Location2D {\r\n        let flowchart = this.Parent.Parent;\r\n        let posrat = flowchart.PositionRatio;\r\n        let flowchartRect = flowchart.Element.getBoundingClientRect();\r\n        let connectorRect = this.connector.getBoundingClientRect();\r\n        var x = (connectorRect.left - flowchartRect.left) / posrat + connectorRect.width/2;\r\n        var y = (connectorRect.top - flowchartRect.top) / posrat + connectorRect.height/2;\r\n        return { x: x, y: y };\r\n    }\r\n}\r\n\r\nexport class FlowchartInputConnector extends FlowchartConnector {\r\n    constructor (parent: FlowchartOperator, caption: string, localIndex:number, type:ConnectorType) {\r\n        super(parent, caption, localIndex, type);\r\n        \r\n        this.connectorGroup.onmouseup = (e) => {\r\n           parent.Parent._notifyInputConnectorMouseup(this, e);\r\n        }\r\n        this.connectorGroup.onmouseenter=(e)=>\r\n        {\r\n            parent.Parent._notifyInputConnectorMouseenter(this, e);\r\n        }\r\n        this.connectorGroup.onmouseleave=(e)=>\r\n        {\r\n            parent.Parent._notifyInputConnectorMouseleave(this, e);\r\n        }\r\n    }\r\n    protected GetLinkpointXOffset(width:number): number{return 0;}  \r\n    protected  getIOSpecifics(){return {inputOrOutput:\"input\", parent:this.Parent.InputSvgG, translateY:0, dx:8};}\r\n    public GetGlobalConnectorIndexOfSignalSource():number {\r\n        for(let link of this.links.values()){\r\n            return link.From.GlobalConnectorIndex;\r\n        }\r\n        return -1;\r\n    }\r\n}\r\nexport class FlowchartOutputConnector extends FlowchartConnector {\r\n    constructor (parent: FlowchartOperator, caption: string, localIndex:number, type:ConnectorType) {\r\n        super(parent, caption, localIndex, type)\r\n        this.element.onmousedown = (e) => {\r\n            parent.Parent._notifyOutputConnectorMousedown(this, e);\r\n        }\r\n    }\r\n    protected GetLinkpointXOffset(width:number): number{return width;}\r\n    protected  getIOSpecifics(){return {inputOrOutput:\"output\", parent:this.Parent.OutputSvgG, translateY:140, dx:-8};}\r\n}\r\n","import { FlowchartInputConnector, FlowchartOutputConnector } from \"./FlowchartConnector\";\r\nimport { Flowchart } from \"./Flowchart\";\r\nimport {$} from \"../utils\"\r\nexport class FlowchartLink {\r\n    private static MAX_INDEX: number = 0;\r\n    private index: number;\r\n    private element: SVGPathElement;\r\n    private captionElement:SVGTextElement;\r\n    private captionPath: SVGTextPathElement;\r\n    constructor(private parent: Flowchart, private caption: string, private color: string, private from: FlowchartOutputConnector, private to: FlowchartInputConnector) {\r\n        this.index = FlowchartLink.MAX_INDEX++;\r\n        this.element = <SVGPathElement>$.Svg(parent.LinkLayer, \"path\", [\"stroke-width\", \"\" + this.parent.Options.linkWidth, \"fill\", \"none\", \"id\", \"LINK\" + this.index]);\r\n        this.RefreshPosition();\r\n        this.UnsetColor();\r\n        this.parent.LinkLayer.appendChild(this.element);\r\n        this.captionElement =<SVGTextElement>$.Svg(parent.LinkLayer, \"text\",[]);\r\n        this.captionPath = <SVGTextPathElement>$.Svg(this.captionElement, \"textPath\",[\"startOffset\", \"50%\",\"text-anchor\", \"middle\"]);\r\n        this.captionPath.setAttributeNS($.XLINKNS, \"href\", '#' + \"LINK\" + this.index);\r\n        this.captionPath.innerHTML = caption;\r\n        this.element.onclick = (e) => {\r\n            this.parent._notifyLinkClicked(this, e);\r\n        }\r\n    }\r\n    get GlobalLinkIndex() { return this.index; }\r\n    get From() { return this.from; }\r\n    get To() { return this.to; }\r\n    set Color(color: string) { this.color = color; }\r\n\r\n    public RemoveFromDOM() {\r\n        this.element.remove();\r\n        this.captionElement.remove();\r\n    }\r\n\r\n\r\n    public SetColor(color: string) {\r\n        this.element.setAttribute('stroke', color);\r\n        //this.element.setAttribute('fill', color);\r\n        //TODO: colorize the small triangle in the connector\r\n        //linkData.internal.els.fromSmallConnector.css('border-left-color', color);\r\n        //linkData.internal.els.toSmallConnector.css('border-left-color', color);\r\n    }\r\n\r\n    public SetCaption(caption:string){\r\n        this.captionPath.innerHTML=caption;\r\n    }\r\n\r\n    public UnsetColor() {\r\n        this.SetColor(this.parent.Options.defaultLinkColor);\r\n    }\r\n\r\n    public RefreshPosition() {\r\n        let fromPosition = this.from.GetLinkpoint();\r\n        let toPosition = this.to.GetLinkpoint();\r\n        let fromX = fromPosition.x;\r\n        let fromY = fromPosition.y + this.parent.Options.linkVerticalDecal;\r\n        let toX = toPosition.x;\r\n        let toY = toPosition.y + this.parent.Options.linkVerticalDecal;\r\n        let distanceFromArrow = this.parent.Options.distanceFromArrow;\r\n        let bezierFromX = (fromX + distanceFromArrow);\r\n        let bezierToX = toX + 1;\r\n        let bezierIntensity = Math.min(100, Math.max(Math.abs(bezierFromX - bezierToX) / 2, Math.abs(fromY - toY)));\r\n        this.element.setAttribute(\"d\", 'M' + bezierFromX + ',' + (fromY) + ' C' + (fromX + distanceFromArrow + bezierIntensity) + ',' + fromY + ' ' + (toX - bezierIntensity) + ',' + toY + ' ' + bezierToX + ',' + toY);\r\n    }\r\n}\r\n","import {FlowchartInputConnector, FlowchartOutputConnector } from \"./FlowchartConnector\";\r\nimport {Flowchart} from \"./Flowchart\";\r\nimport { SerializeContextAndAdressMap } from \"./FlowchartCompiler\";\r\nimport {$, KeyValueTuple} from \"../utils\"\r\nimport { SimulationContext } from \"./SimulationContext\";\r\n\r\nexport enum PositionType{\r\n    Default,\r\n    Input,\r\n    Output,\r\n};\r\nexport enum SingletonType{\r\n    Default,\r\n    Singleton,\r\n};\r\nexport class TypeInfo\r\n{\r\n    constructor(\r\n        public GlobalTypeIndex:number, \r\n        public GroupName:string, \r\n        public OperatorName:string, \r\n        public Position:PositionType, \r\n        public Singleton:SingletonType, \r\n        public Builder:(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null)=>FlowchartOperator)\r\n        {}\r\n}\r\n\r\nexport abstract class FlowchartOperator {\r\n\r\n    //der Index der Inputs ist rein lokal und beginnt bei 0 fortlaufend\r\n    private Inputs: FlowchartInputConnector[]=[];\r\n    //der Index der Outputs ist rein lokal und beginnt bei 0 fortlaufend\r\n    private Outputs: FlowchartOutputConnector[]= [];\r\n\r\n\r\n    private static MAX_INDEX: number = 0;\r\n    private index: number;\r\n    get GlobalOperatorIndex(){return this.index;}\r\n\r\n    private elementSvgG: SVGGElement;\r\n    get ElementSvgG() { return this.elementSvgG; }\r\n    private inputSvgG:SVGGElement;\r\n    get InputSvgG(): SVGGElement { return this.inputSvgG; }\r\n    private outputSvgG:SVGGElement;\r\n    get OutputSvgG(): SVGGElement { return this.outputSvgG;}\r\n    private debugInfoSvgText:SVGTextElement;\r\n\r\n    get TypeInfo(){return this.typeInfo;}\r\n\r\n    get Xpos(){return this.x;}\r\n    get Ypos(){return this.y;}\r\n    get Config_Copy(){\r\n        return this.configurationData?this.configurationData.slice(0):null;\r\n    }\r\n\r\n    private x=0;\r\n    private y=0;\r\n\r\n    protected box:SVGRectElement;\r\n\r\n    public ShowAsSelected(state:boolean)\r\n    {\r\n        if(state)\r\n        {\r\n            this.box.classList.add('selected');\r\n        }\r\n        else{\r\n            this.box.classList.remove('selected');\r\n        }\r\n    }\r\n\r\n    public SetDebugInfoText(text:string):void{\r\n        this.debugInfoSvgText.textContent=text;\r\n    }\r\n\r\n    protected cfg_setDefault(key:string, value:any)\r\n    {\r\n        if(this.configurationData==null) this.configurationData=[];\r\n        for (const e of this.configurationData) {\r\n            if(e.key==key){\r\n                return;\r\n            }\r\n        } \r\n        this.configurationData.push({key:key, value:value});\r\n    }\r\n\r\n    protected cfg_getValue(key:string, defaultValue:any):any\r\n    {\r\n        if(this.configurationData==null) this.configurationData=[];\r\n        for (const e of this.configurationData) {\r\n            if(e.key==key){\r\n                return e.value;\r\n            }\r\n        };\r\n        this.configurationData.push({key:key, value:defaultValue});\r\n        return defaultValue;\r\n    }\r\n\r\n    protected cfg_setValue(key:string, value:any)\r\n    {\r\n        if(this.configurationData==null) this.configurationData=[];\r\n        for (const e of this.configurationData) {\r\n            if(e.key==key){\r\n                e.value=value;\r\n                return;\r\n            }\r\n        } \r\n        this.configurationData.push({key:key, value:value});\r\n    }\r\n\r\n    constructor(private parent: Flowchart, private caption: string, private typeInfo: TypeInfo, protected configurationData:KeyValueTuple[]|null) {\r\n        this.index = FlowchartOperator.MAX_INDEX++;\r\n        this.elementSvgG = <SVGGElement>$.Svg(parent.OperatorsLayer, \"g\", [], [\"operator\"]);\r\n        this.elementSvgG.setAttribute('data-operator-index', \"\" + this.index);\r\n        let dragGroup = <SVGGElement>$.Svg(this.elementSvgG, \"g\", [], []);\r\n        this.box = <SVGRectElement>$.Svg(dragGroup, \"rect\", [\"width\",\"140\", \"height\", \"100\", \"rx\", \"10\", \"ry\", \"10\"], [\"operator-box\"]);\r\n        let title = <SVGTextElement>$.Svg(dragGroup,\"text\", [\"x\", \"5\", \"y\", \"21\"],[\"operator-title\"]);\r\n        title.textContent = caption;\r\n        this.debugInfoSvgText = <SVGTextElement>$.Svg(dragGroup, \"text\", [\"x\", \"0\", \"y\", \"100\"],[\"operator-debuginfo\"]);\r\n        this.debugInfoSvgText.textContent=\"No debug info\";\r\n\r\n        this.inputSvgG= <SVGGElement>$.Svg(this.elementSvgG,\"g\", [\"transform\", \"translate(0 50)\"], [\"operator-inputs\"]);\r\n        this.outputSvgG= <SVGGElement>$.Svg(this.elementSvgG,\"g\", [\"transform\", \"translate(140 50)\"], [\"operator-outputs\"]);\r\n\r\n\r\n        this.elementSvgG.onclick = (e) => {\r\n            console.log(\"FlowchartOperator this.elementSvgG.onclick\");\r\n            parent._notifyOperatorClicked(this, e);\r\n        };\r\n        \r\n        if (this.parent.Options.canUserMoveOperators) {\r\n            dragGroup.onmousedown = (e) => {\r\n                this.RegisterDragging(e);\r\n            }\r\n        }\r\n    }\r\n    public RegisterDragging(e:MouseEvent)\r\n    {\r\n        let offsetX= e.clientX-this.x;\r\n        let offsetY = e.clientY-this.y;\r\n\r\n        document.onmouseup = (e) => {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n        };\r\n        document.onmousemove = e => {\r\n            //TODO: neue Position nur setzen, wenn this.element.clientRect innerhalb von parent.clientRectangle ist\r\n            this.MoveTo(e.clientX - offsetX, e.clientY - offsetY);\r\n        };\r\n    }\r\n    get Parent() { return this.parent };\r\n    get Caption() { return this.caption; }\r\n\r\n    get InputsKVIt(){return this.Inputs.entries()}\r\n    get OutputsKVIt(){return this.Outputs.entries()}\r\n    public GetOutputConnectorByIndex=(i:number)=>this.Outputs[i];\r\n    public GetInputConnectorByIndex=(i:number)=>this.Inputs[i];\r\n\r\n    public RemoveFromDOM(): void {\r\n        this.elementSvgG.remove();\r\n    }\r\n\r\n    protected AppendConnectors(inputs: FlowchartInputConnector[], outputs: FlowchartOutputConnector[]) {\r\n        if(this.Inputs.length!=0 || this.Outputs.length !=0) throw new Error(\"AppendConnectors may only be called once!\");\r\n        for (const i of inputs) {\r\n            if (i.Parent != this) continue;\r\n            this.Inputs.push(i);\r\n        }\r\n        for (const o of outputs) {\r\n            if (o.Parent != this) continue;\r\n            this.Outputs.push(o);\r\n        }\r\n        let num = Math.max(this.Inputs.length, this.Outputs.length);\r\n        let height = 50+num*20+10;\r\n        this.box.setAttribute(\"height\", \"\"+height);\r\n        this.debugInfoSvgText.setAttribute(\"y\", \"\"+height);\r\n    }\r\n\r\n    public MoveTo(x: number, y: number) {\r\n        let g = this.parent.Options.grid;\r\n        this.x = Math.round(x / g) * g;\r\n        this.y = Math.round(y / g) * g;\r\n        this.elementSvgG.setAttribute(\"transform\", `translate(${this.x} ${this.y})`);\r\n        for (const c of this.Inputs) {\r\n            c.RefreshLinkPositions();\r\n        }\r\n        for (const c of this.Outputs) {\r\n            c.RefreshLinkPositions();\r\n        }\r\n    }\r\n\r\n    public PopulateProperyGrid(parent:HTMLTableSectionElement):boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStart(ctx:SimulationContext){\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStop(ctx:SimulationContext){\r\n        return;\r\n    }\r\n\r\n    \r\n    protected SerializeInputsAndOutputs(ctx:SerializeContextAndAdressMap)\r\n    {\r\n        for (const input of this.Inputs) {\r\n            let variableAdress = 0;\r\n            let links = input.GetLinksCopy();\r\n            if(links.length==0){\r\n                variableAdress=1; //because unconnected inputs read from adress 1 (which is \"false\", 0, 0.0, black...)\r\n            }\r\n            else{\r\n                let out = links[0].From;\r\n                variableAdress=ctx.typeIndex2globalConnectorIndex2adressOffset.get(out.Type)!.get(out.GlobalConnectorIndex)||1;\r\n            }\r\n            ctx.ctx.writeU32(variableAdress);\r\n        }\r\n        for(const output of this.Outputs)\r\n        {\r\n            let variableAdress = 0;\r\n            if(output.LinksLength==0){\r\n                variableAdress=0; //because unconnected outputs write to adress 0 (which is never read!)\r\n            }\r\n            else{\r\n                variableAdress=ctx.typeIndex2globalConnectorIndex2adressOffset.get(output.Type)!.get(output.GlobalConnectorIndex)||1;\r\n            }\r\n            ctx.ctx.writeU32(variableAdress);\r\n        }\r\n    }\r\n\r\n    public SerializeToBinary(ctx:SerializeContextAndAdressMap)\r\n    {\r\n        //serialize Type\r\n        ctx.ctx.writeU32(this.TypeInfo.GlobalTypeIndex);\r\n        //Index of instance\r\n        ctx.ctx.writeU32(this.GlobalOperatorIndex);\r\n        this.SerializeInputsAndOutputs(ctx);\r\n        this.SerializeFurtherProperties(ctx);\r\n    }\r\n    \r\n    protected SerializeFurtherProperties(mapper:SerializeContextAndAdressMap):void{\r\n        return;\r\n    }\r\n}\r\n","import {FlowchartOperator, TypeInfo, PositionType, SingletonType} from \"./FlowchartOperator\";\r\nimport {Flowchart} from \"./Flowchart\";\r\nimport {FlowchartInputConnector, FlowchartOutputConnector, ConnectorType} from \"./FlowchartConnector\";\r\nimport { SerializeContextAndAdressMap } from \"./FlowchartCompiler\";\r\nimport {$, KeyValueTuple} from \"../utils\";\r\nimport * as Song from \"./Songs\";\r\nimport { SimulationContext } from \"./SimulationContext\";\r\n\r\nconst Basic=\"Basic\";\r\nconst Arithmetic=\"Arithmetic\";\r\nconst Input=\"Input\";\r\nconst Sensor = \"Sensor\";\r\nconst Output=\"Output\";\r\nconst Converter=\"Converter\";\r\nconst Sound = \"Sound\";\r\nconst Control = \"Control\";\r\nconst Custom =\"Custom\";\r\n\r\nconst CONSTANT = \"Constant\";\r\nconst SONG_INDEX = \"Song Index\"\r\n\r\nexport class OperatorRegistry{\r\n    IsIndexKnown(globalTypeIndex: number) {\r\n        return this.index2Info.has(globalTypeIndex);\r\n    }\r\n    \r\n    private index2Info = new Map<number, TypeInfo>();\r\n    private groupName2operatorName2Info = new Map<string, Map<string, TypeInfo>>();\r\n    \r\n    private Register(globalTypeIndex:number, groupName:string, operatorName:string, position:PositionType, singleton:SingletonType, builder:(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null)=>FlowchartOperator)\r\n    {\r\n        let ti:TypeInfo=new TypeInfo(globalTypeIndex, groupName, operatorName, position, singleton, builder)\r\n        if(this.index2Info.has(globalTypeIndex)) throw new Error(`this.index2Info.has(globalTypeIndex) for ${groupName}::${operatorName}`);\r\n        this.index2Info.set(globalTypeIndex, ti);\r\n        if(!this.groupName2operatorName2Info.has(groupName)) this.groupName2operatorName2Info.set(groupName, new Map<string, TypeInfo>());\r\n        let operatorName2Info = this.groupName2operatorName2Info.get(groupName)!;\r\n        if(operatorName2Info.has(operatorName)) throw new Error(`operatorName2Info.has(operatorName) for ${groupName}::${operatorName}`);\r\n        operatorName2Info.set(operatorName, ti);\r\n    }\r\n\r\n    public CreateByIndex(index:number, parent: Flowchart, caption: string, configurationData:KeyValueTuple[]|null):FlowchartOperator|null\r\n    {\r\n        let ti=this.index2Info.get(index);\r\n        if(ti===undefined) return null;\r\n        return ti.Builder(parent, caption, ti, configurationData);\r\n    }\r\n\r\n    public GetTypeInfo(index:number):TypeInfo|null\r\n    {\r\n        let ti=this.index2Info.get(index);\r\n        if(ti===undefined) return null;\r\n        return ti;\r\n    }\r\n\r\n    public populateOperatorLib(parent: HTMLDivElement, onmousedownHandler: (e:MouseEvent, ti:TypeInfo)=>any) { \r\n        let y = 10;\r\n        let top = $.Html(parent, \"ul\", [], []);\r\n        for (const kv of this.groupName2operatorName2Info.entries()) {\r\n            let groupName = kv[0];\r\n            $.Html(top, \"li\", [], [], groupName);\r\n            let ul = $.Html(top, \"ul\", [], [\"nested\"]);\r\n            for (const info of kv[1].values()) {\r\n                let li = $.Html(ul, \"li\", [], [], info.OperatorName);\r\n                li.onmousedown = (e) => onmousedownHandler(e, info);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static Build():OperatorRegistry{\r\n        let r:OperatorRegistry = new OperatorRegistry();\r\n        r.Register(1, Basic, \"AND\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_ANDOperator(p, ca, ti, co));\r\n        r.Register(2, Basic, \"OR\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_OROperator(p, ca, ti, co));\r\n        r.Register(3, Basic, \"XOR\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_XOROperator(p, ca, ti, co));\r\n        r.Register(4, Basic, \"NOT\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_NotOperator(p, ca, ti, co));\r\n        r.Register(5, Basic, \"RS\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_RSOperator(p, ca, ti, co));\r\n        r.Register(6, Basic, \"SR\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_SROperator(p, ca, ti, co));\r\n        r.Register(7, Basic,\"ConstTRUE\", PositionType.Input, SingletonType.Default, (p, ca, ti, co)=>new Basic_ConstTRUEOperator(p, ca, ti, co));\r\n        r.Register(8, Basic,\"ConstFALSE\", PositionType.Input, SingletonType.Default, (p, ca, ti, co)=>new Basic_ConstFALSEOperator(p, ca, ti, co));\r\n        r.Register(9, Basic, \"CNT\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_CNTOperator(p, ca, ti, co));\r\n        r.Register(10, Basic, \"Timekeeper\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_TimekeeperOperator(p, ca, ti, co));\r\n        r.Register(11, Basic,\"TON\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_TONOperator(p, ca, ti, co));\r\n        r.Register(12, Basic,\"TOF\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_TOFOperator(p, ca, ti, co));\r\n        \r\n        r.Register(13, Arithmetic, \"ADD\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_ADDOperator(p, ca, ti, co));\r\n        r.Register(14, Arithmetic, \"SUB\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_SUBOperator(p, ca, ti, co));\r\n        r.Register(15, Arithmetic, \"MULTIPLY\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_MULTIPLYOperator(p, ca, ti, co));\r\n        r.Register(16, Arithmetic, \"DIVIDE\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_DIVIDEOperator(p, ca, ti, co));\r\n        r.Register(17, Arithmetic, \"MAX\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_MAXOperator(p, ca, ti, co));\r\n        r.Register(18, Arithmetic, \"MIN\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_MINOperator(p, ca, ti, co));\r\n        r.Register(19, Arithmetic,\"GreaterThan\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_GreaterThanOperator(p, ca, ti, co));\r\n        r.Register(20, Arithmetic,\"LessThan\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_LessThanOperator(p, ca, ti, co));\r\n        r.Register(21, Arithmetic, \"ConstINT\", PositionType.Input, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_ConstINTOperator(p, ca, ti, co));\r\n        r.Register(22, Arithmetic, \"LIMIT\", PositionType.Input, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_LIMITOperator(p, ca, ti, co));\r\n        r.Register(23, Arithmetic, \"LIMITMONITOR\", PositionType.Input, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_LIMITMONITOROperator(p, ca, ti, co));\r\n\r\n        r.Register(24, Converter, \"Bool2Color\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Bool2ColorConvert(p, ca, ti, co));\r\n        r.Register(25, Converter, \"Bool2Int\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Bool2IntConvert(p, ca, ti, co));\r\n        r.Register(26, Converter, \"Int2Bool\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Int2BoolConvert(p, ca, ti, co));\r\n        r.Register(27, Converter, \"Int2Float\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Int2FloatConvert(p, ca, ti, co));\r\n        r.Register(28, Converter, \"Int2Color\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Int2ColorConvert(p, ca, ti, co));\r\n        r.Register(29, Converter, \"Float2Int\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Float2IntConvert(p, ca, ti, co));\r\n        \r\n        r.Register(30, Input, \"GreenButton\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Input_GreenButtonOperator(p, ca, ti, co));\r\n        r.Register(31, Input, \"EncoderButton\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Input_EncoderButtonOperator(p, ca, ti, co));\r\n        r.Register(32, Input, \"EncoderTicks\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Input_EncoderTicksOperator(p, ca, ti, co));\r\n        r.Register(33, Input, \"RedButton\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Input_RedButtonOperator(p, ca, ti, co));\r\n        \r\n        r.Register(34, Sensor, \"Movement\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_MovementOperator(p, ca, ti, co));\r\n        r.Register(35, Sensor, \"AirTemperatureDS18\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirTemperatureDS18Operator(p, ca, ti, co));\r\n        r.Register(36, Sensor, \"AirTemperatureBME\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirTemperatureBMEOperator(p, ca, ti, co));\r\n        r.Register(37, Sensor, \"AirHumidity\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirHumidityOperator(p, ca, ti, co));\r\n        r.Register(38, Sensor, \"AirPressure\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirPressureOperator(p, ca, ti, co));\r\n        r.Register(39, Sensor, \"AirCO2\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirCO2Operator(p, ca, ti, co));\r\n        r.Register(40, Sensor, \"AirQuality\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirQualityOperator(p, ca, ti, co));\r\n        r.Register(41, Sensor, \"AmbientBrightness\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AmbientBrightnessOperator(p, ca, ti, co));\r\n        r.Register(42, Sensor, \"AmbientNoise\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AmbientNoise(p, ca, ti, co));\r\n        r.Register(43, Sensor, \"ExternalPressure\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_ExternalPressure(p, ca, ti, co));\r\n        r.Register(44, Sensor, \"HeaterTemperature\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_HeaterTemperatureOperator(p, ca, ti, co));\r\n        \r\n        r.Register(45, Output, \"Relay\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_RelayOperator(p, ca, ti, co));\r\n        r.Register(46, Output, \"RedLed\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_RedLedOperator(p, ca, ti, co));\r\n        r.Register(47, Output, \"YellowLed\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_YellowLedOperator(p, ca, ti, co));\r\n        r.Register(48, Output, \"GreenLed\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_GreenLedOperator(p, ca, ti, co));\r\n        r.Register(49, Output, \"LED3\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Led3Operator(p, ca, ti, co));\r\n        r.Register(50, Output, \"LED4\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Led4Operator(p, ca, ti, co));\r\n        r.Register(51, Output, \"LED5\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Led5Operator(p, ca, ti, co));\r\n        r.Register(52, Output, \"LED6\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Led6Operator(p, ca, ti, co));\r\n        r.Register(53, Output, \"LED7\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Led7Operator(p, ca, ti, co));\r\n        r.Register(54, Output, \"Fan1\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Fan1Operator(p, ca, ti, co));\r\n        r.Register(55, Output, \"Fan2\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Fan2Operator(p, ca, ti, co));\r\n        r.Register(56, Output, \"PowerLed\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_PowerLedOperator(p, ca, ti, co));\r\n\r\n        r.Register(57, Sound, \"Melody\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Sound_Melody(p, ca, ti, co));\r\n        \r\n        r.Register(58, Control, \"PID\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Control_PID(p, ca, ti, co));\r\n        \r\n        \r\n        r.Register(100, Custom, \"XYZXYZBlock\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Custom_XYZBlock(p, ca, ti, co))\r\n        return r;\r\n    }\r\n}\r\n\r\nclass Sensor_CommonSensorOperator extends FlowchartOperator {\r\n    private sensorValue:number=0;\r\n    private O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null, nameOfOutput:string, readonly minOutput:number, readonly maxOutput:number) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, nameOfOutput, 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([], [this.O]);\r\n        this.ElementSvgG.onclick=(e)=>{\r\n            console.log(\"Input_CommonButtonOperator this.ElementSvgG.onclick\");\r\n            parent._notifyOperatorClicked(this, e);\r\n            this.sensorValue=this.sensorValue==this.minOutput?this.maxOutput:this.minOutput;\r\n        }\r\n    }\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this.sensorValue=this.minOutput;\r\n    }\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        ctx.SetInteger(this.O, this.sensorValue);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class Sensor_HeaterTemperatureOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"DegreesCelsius\", 25, 65);\r\n    }\r\n}\r\n\r\nexport class Sensor_AirTemperatureDS18Operator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Temperature*10\", 180, 250);\r\n    }\r\n}\r\n\r\nexport class Sensor_AirTemperatureBMEOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Temperature*10\", 180, 250);\r\n    }\r\n}\r\n\r\nexport class Sensor_AirHumidityOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"RelHumid%\", 40, 60);\r\n    }\r\n}\r\nexport class Sensor_AirPressureOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Pa\", 800, 1200);\r\n    }\r\n}\r\n\r\nexport class Sensor_AirCO2Operator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"CO2ppm\", 400, 1500);\r\n    }\r\n}\r\n\r\nexport class Sensor_AirQualityOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Quality%\", 20, 80);\r\n    }\r\n}\r\n\r\n\r\nexport class Sensor_AmbientBrightnessOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Lux\", 200, 700);\r\n    }\r\n}\r\n\r\nexport class Sensor_AmbientNoise extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"NoisedBA\", 30, 80);\r\n    }\r\n}\r\n\r\nexport class Sensor_ExternalPressure extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Pa\", 1000, 2000);\r\n    }\r\n}\r\n\r\n\r\nexport class Sensor_MovementOperator extends FlowchartOperator {\r\n    public StorageId:string;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        let O = new FlowchartOutputConnector(this, \"Movement\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([], [O]);\r\n        this.StorageId=\"4711\";\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport class Basic_ANDOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.BOOLEAN);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.BOOLEAN);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetBoolean(this.A);\r\n        let B = ctx.GetBoolean(this.B);\r\n        ctx.SetBoolean(this.C, A && B);\r\n    }\r\n}\r\n\r\nexport class Basic_OROperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.BOOLEAN);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.BOOLEAN);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0,ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetBoolean(this.A);\r\n        let B = ctx.GetBoolean(this.B);\r\n        ctx.SetBoolean(this.C, A || B);\r\n    }\r\n}\r\n\r\nexport class Basic_XOROperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.BOOLEAN);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.BOOLEAN);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0,ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetBoolean(this.A);\r\n        let B = ctx.GetBoolean(this.B);\r\n        ctx.SetBoolean(this.C, A ? !B : B);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_ADDOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, A + B);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_SUBOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, A - B);\r\n    }\r\n}\r\n\r\n\r\nexport class Arithmetic_MULTIPLYOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, A * B);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_DIVIDEOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, A / B);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_MAXOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, Math.max(A,B));\r\n    }\r\n}\r\n\r\nexport class Arithmetic_MINOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, Math.min(A,B));\r\n    }\r\n}\r\n\r\nexport class Basic_RSOperator extends FlowchartOperator {\r\n    private R:FlowchartInputConnector;\r\n    private S:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    private state:boolean=false;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.R = new FlowchartInputConnector(this, \"R\", 0, ConnectorType.BOOLEAN);\r\n        this.S = new FlowchartInputConnector(this, \"S\", 1, ConnectorType.BOOLEAN);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.R, this.S], [this.C]);\r\n    }\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this.state=false;\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        if(ctx.GetBoolean(this.R)) this.state=false;\r\n        else if(ctx.GetBoolean(this.S)) this.state = true;\r\n        ctx.SetBoolean(this.C, this.state);\r\n    }\r\n}\r\n\r\nexport class Basic_SROperator extends FlowchartOperator {\r\n    private R:FlowchartInputConnector;\r\n    private S:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    private state:boolean=false;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.R = new FlowchartInputConnector(this, \"R\", 0, ConnectorType.BOOLEAN);\r\n        this.S = new FlowchartInputConnector(this, \"S\", 1, ConnectorType.BOOLEAN);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.R, this.S], [this.C]);\r\n    }\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this.state=false;\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        if(ctx.GetBoolean(this.S)) this.state = true;\r\n        else if(ctx.GetBoolean(this.R)) this.state=false;\r\n        ctx.SetBoolean(this.C, this.state);\r\n    }\r\n}\r\n\r\nexport class Basic_CNTOperator extends FlowchartOperator {\r\n    private CountUp:FlowchartInputConnector;\r\n    private Reset:FlowchartInputConnector;\r\n    private PresetValue:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    private CurrentValue:FlowchartOutputConnector;\r\n    private _CurrentValue:number=0;\r\n    private lastInputValue:boolean=false;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.CountUp = new FlowchartInputConnector(this, \"CU\", 0, ConnectorType.BOOLEAN);\r\n        this.Reset = new FlowchartInputConnector(this, \"Reset\", 1, ConnectorType.BOOLEAN);\r\n        this.PresetValue = new FlowchartInputConnector(this, \"PV\", 2, ConnectorType.INTEGER);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.CurrentValue = new FlowchartOutputConnector(this, \"CV\", 1, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.CountUp, this.Reset, this.PresetValue], [this.OUT, this.CurrentValue]);\r\n    }\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this._CurrentValue=0;\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetBoolean(this.CountUp);\r\n        let PV=ctx.GetInteger(this.PresetValue);\r\n        if(ctx.GetBoolean(this.Reset)){\r\n            this._CurrentValue=0;\r\n        }else if(this.lastInputValue==false && currentInputValue==true && this._CurrentValue<PV){\r\n            this._CurrentValue++;\r\n            console.log(\"Logic_CNTOperator this._CurrentValue++; \"+this._CurrentValue);\r\n        }\r\n        ctx.SetBoolean(this.OUT, this._CurrentValue>=PV);//kann auch durch Veränderung des PV passieren, deshalb nicht im if\r\n        ctx.SetInteger(this.CurrentValue, this._CurrentValue);\r\n        this.lastInputValue=currentInputValue\r\n    }\r\n}\r\n\r\n\r\nexport class Basic_TimekeeperOperator extends FlowchartOperator {\r\n    private CountUp:FlowchartInputConnector;\r\n    private Reset:FlowchartInputConnector;\r\n    private PresetValue:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    private CurrentValue:FlowchartOutputConnector;\r\n    private _CurrentValueMs:number=0;\r\n    private lastInputValue:boolean=false;\r\n    private lastMillis:number=0;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.CountUp = new FlowchartInputConnector(this, \"CU\", 0, ConnectorType.BOOLEAN);\r\n        this.Reset = new FlowchartInputConnector(this, \"Reset\", 1, ConnectorType.BOOLEAN);\r\n        this.PresetValue = new FlowchartInputConnector(this, \"PV_ms\", 2, ConnectorType.INTEGER);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.CurrentValue = new FlowchartOutputConnector(this, \"CV_ms\", 1, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.CountUp, this.Reset, this.PresetValue], [this.OUT, this.CurrentValue]);\r\n    }\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this._CurrentValueMs=0;\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetBoolean(this.CountUp);\r\n        let PV=ctx.GetInteger(this.PresetValue);\r\n        if(ctx.GetBoolean(this.Reset)){\r\n            this._CurrentValueMs=0;\r\n            this.lastMillis=ctx.GetMillis();\r\n        }else if(this.lastInputValue==false && currentInputValue==true && this._CurrentValueMs<PV){\r\n            let now = ctx.GetMillis();\r\n            this._CurrentValueMs+=now-this.lastMillis;\r\n            this.lastMillis=now;\r\n            console.log(\"Logic_CNTOperator this._CurrentValue++; \"+this._CurrentValueMs);\r\n        }\r\n        ctx.SetBoolean(this.OUT, this._CurrentValueMs>=PV);//kann auch durch Veränderung des PV passieren, deshalb nicht im if\r\n        ctx.SetInteger(this.CurrentValue, this._CurrentValueMs);\r\n        this.lastInputValue=currentInputValue\r\n    }\r\n}\r\n\r\nexport class Basic_NotOperator extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.BOOLEAN);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        ctx.SetBoolean(this.OUT, !ctx.GetBoolean(this.IN));\r\n    }\r\n\r\n}\r\nclass Input_CommonButtonOperator extends FlowchartOperator {\r\n    private state:boolean=false;\r\n    private O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, \"IsPressed\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([], [this.O]);\r\n        this.ElementSvgG.onclick=(e)=>{\r\n            console.log(\"Input_CommonButtonOperator this.ElementSvgG.onclick\");\r\n            parent._notifyOperatorClicked(this, e);\r\n            this.state=!this.state;\r\n        }\r\n    }\r\n\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this.state=false;\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        this.box.classList.remove(this.state?\"False\":\"True\");\r\n        this.box.classList.add(this.state?\"True\":\"False\");\r\n        ctx.SetBoolean(this.O, this.state);\r\n    }\r\n\r\n    OnSimulationStop(ctx:SimulationContext){\r\n        this.box.classList.remove(\"False\", \"True\");\r\n    }\r\n}\r\n\r\n\r\nexport class Input_GreenButtonOperator extends Input_CommonButtonOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Input_EncoderButtonOperator extends Input_CommonButtonOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Input_RedButtonOperator extends Input_CommonButtonOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Input_EncoderTicksOperator extends FlowchartOperator {\r\n    public StorageId:string;\r\n    protected O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, \"Ticks\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([], [this.O]);\r\n        this.StorageId=\"4711\";\r\n    }\r\n\r\n    public OnSimulationStart(ctx: SimulationContext): void {\r\n        ctx.SetInteger(this.O, 1000);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class Output_RelayOperator extends FlowchartOperator {\r\n    private I:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.I=new FlowchartInputConnector(this, \"Relay\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.I], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let state = ctx.GetBoolean(this.I);\r\n        this.box.classList.remove(state?\"False\":\"True\");\r\n        this.box.classList.add(state?\"True\":\"False\");\r\n    }\r\n}\r\n\r\nexport class Output_Fan1Operator extends FlowchartOperator {\r\n    private I:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.I=new FlowchartInputConnector(this, \"Power%\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.I], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let state = ctx.GetInteger(this.I);\r\n        this.box.innerHTML=state+\"%\";\r\n    }\r\n}\r\n\r\nexport class Output_Fan2Operator extends FlowchartOperator {\r\n    private I:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.I=new FlowchartInputConnector(this, \"Power%\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.I], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let state = ctx.GetInteger(this.I);\r\n        this.box.innerHTML=state+\"%\";\r\n    }\r\n}\r\n\r\nexport class Output_PowerLedOperator extends FlowchartOperator {\r\n    private I:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.I=new FlowchartInputConnector(this, \"Power%\", 0, ConnectorType.FLOAT);\r\n        this.AppendConnectors([this.I], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let state = ctx.GetFloat(this.I);\r\n        this.box.innerHTML=state+\"%\";\r\n    }\r\n}\r\n\r\n\r\nclass Output_CommonLedOperator extends FlowchartOperator {\r\n    protected  I:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null, protected colorOnTRUE:string, protected colorOnFALSE:string) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.I = new FlowchartInputConnector(this, \"LED\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.I], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let state = ctx.GetBoolean(this.I);\r\n        this.box.style.fill=state?this.colorOnTRUE:this.colorOnFALSE;\r\n    }\r\n\r\n    OnSimulationStop(ctx:SimulationContext){\r\n        this.box.style.removeProperty(\"fill\");\r\n    }\r\n}\r\n\r\n\r\nexport class Output_RedLedOperator extends Output_CommonLedOperator {\r\n\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"red\", \"grey\");\r\n    }\r\n}\r\n\r\nexport class Output_YellowLedOperator extends Output_CommonLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"yellow\", \"grey\");\r\n    }\r\n}\r\n\r\nexport class Output_GreenLedOperator extends Output_CommonLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"green\", \"grey\");\r\n    }\r\n}\r\n\r\nexport class Output_CommonRGBLedOperator extends FlowchartOperator {\r\n    protected LED:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.LED = new FlowchartInputConnector(this, \"LED\", 0, ConnectorType.COLOR);\r\n        this.AppendConnectors([this.LED], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        this.box.style.fill=ctx.GetColor(this.LED);\r\n    }\r\n\r\n    OnSimulationStop(ctx:SimulationContext){\r\n        this.box.style.removeProperty(\"fill\");\r\n    }\r\n}\r\n\r\nexport class Output_Led3Operator extends Output_CommonRGBLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Output_Led4Operator extends Output_CommonRGBLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Output_Led5Operator extends Output_CommonRGBLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Output_Led6Operator extends Output_CommonRGBLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Output_Led7Operator extends Output_CommonRGBLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Basic_ConstTRUEOperator extends FlowchartOperator {\r\n    protected O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, \"TRUE\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([], [this.O]);\r\n    }\r\n\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        ctx.SetBoolean(this.O, false);\r\n    }\r\n}\r\n\r\nexport class Basic_ConstFALSEOperator extends FlowchartOperator {\r\n\r\n    protected O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, \"TRUE\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([], [this.O]);\r\n    }\r\n\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        ctx.SetBoolean(this.O, true);\r\n    }\r\n}\r\n\r\nexport class Sound_Melody extends FlowchartOperator {\r\n  \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        let A = new FlowchartInputConnector(this, \"Trigger\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([A], []);\r\n        this.cfg_setDefault(SONG_INDEX, 0);\r\n    }\r\n\r\n    private songIndexHTMLSelect:HTMLSelectElement|null=null;\r\n    public PopulateProperyGrid(tbody:HTMLTableSectionElement):boolean\r\n    {\r\n        this.songIndexHTMLSelect=$.InputSelect(tbody, Song.default(), SONG_INDEX, this.configurationData);\r\n        return true;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        if(this.songIndexHTMLSelect==null) return;\r\n        this.cfg_setValue(SONG_INDEX, parseInt(this.songIndexHTMLSelect.value));\r\n    }\r\n\r\n    protected SerializeFurtherProperties(ctx:SerializeContextAndAdressMap):void{\r\n        ctx.ctx.writeS32(this.cfg_getValue(SONG_INDEX, 0));\r\n        return;\r\n    }\r\n}\r\n\r\nexport class Arithmetic_ConstINTOperator extends FlowchartOperator {\r\n    private O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, \"Out\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([], [this.O]);\r\n        this.cfg_setDefault(CONSTANT, 0);\r\n    }\r\n\r\n    private constantHTMLInput:HTMLInputElement|null=null;\r\n    public PopulateProperyGrid(tbody:HTMLTableSectionElement):boolean\r\n    {\r\n        this.constantHTMLInput=$.InputNumber(tbody, -32768, 32767, CONSTANT, this.configurationData);\r\n        return true;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        if(this.constantHTMLInput==null) return;\r\n        this.cfg_setValue(CONSTANT, this.constantHTMLInput.valueAsNumber);\r\n    }\r\n\r\n    protected SerializeFurtherProperties(ctx:SerializeContextAndAdressMap):void{\r\n        ctx.ctx.writeS32(this.cfg_getValue(CONSTANT, 0));\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStart(ctx:SimulationContext){\r\n        ctx.SetInteger(this.O, this.cfg_getValue(CONSTANT, 0));\r\n    }\r\n\r\n}\r\n\r\n\r\nconst COLOR_TRUE=\"Color for TRUE\";\r\nconst COLOR_FALSE=\"Color for FALSE\";\r\n\r\nexport class Bool2ColorConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.BOOLEAN);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.COLOR);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    private colorTRUEHTMLInput:HTMLInputElement|null=null;\r\n    private colorFALSEHTMLInput:HTMLInputElement|null=null;\r\n    \r\n    public PopulateProperyGrid(tbody:HTMLTableSectionElement):boolean\r\n    {\r\n        this.colorTRUEHTMLInput=$.InputColor(tbody, COLOR_TRUE, this.configurationData);\r\n        this.colorFALSEHTMLInput=$.InputColor(tbody, COLOR_FALSE, this.configurationData);\r\n        return true;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        if(this.colorTRUEHTMLInput==null || this.colorFALSEHTMLInput==null) return;\r\n        this.cfg_setValue(COLOR_TRUE, this.colorTRUEHTMLInput.value);\r\n        this.cfg_setValue(COLOR_FALSE, this.colorFALSEHTMLInput.value);\r\n    }\r\n\r\n    protected SerializeFurtherProperties(ctx:SerializeContextAndAdressMap):void{\r\n        let colorString = this.cfg_getValue(COLOR_TRUE, \"#ff0000\");\r\n        let colorNum=$.ColorDomString2ColorNum(colorString);\r\n        ctx.ctx.writeU32(colorNum);\r\n        colorString = this.cfg_getValue(COLOR_FALSE, \"#000000\");\r\n        colorNum=$.ColorDomString2ColorNum(colorString);\r\n        ctx.ctx.writeU32(colorNum);\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetBoolean(this.IN);\r\n        let color =currentInputValue?this.cfg_getValue(COLOR_TRUE, \"RED\"):this.cfg_getValue(COLOR_FALSE, \"GREY\");\r\n        ctx.SetColor(this.OUT, color);\r\n    }\r\n}\r\n\r\nconst NUMBER_TRUE=\"Number for TRUE\";\r\nconst NUMBER_FALSE=\"Number for FALSE\";\r\n\r\nexport class Bool2IntConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    private numberTRUEHTMLInput:HTMLInputElement|null=null;\r\n    private numberFALSEHTMLInput:HTMLInputElement|null=null;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.BOOLEAN);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    public PopulateProperyGrid(tbody:HTMLTableSectionElement):boolean\r\n    {\r\n        this.numberTRUEHTMLInput=$.InputNumber(tbody, Number.MIN_VALUE, Number.MAX_VALUE, NUMBER_TRUE, this.configurationData);\r\n        this.numberFALSEHTMLInput=$.InputNumber(tbody, Number.MIN_VALUE, Number.MAX_VALUE, NUMBER_FALSE, this.configurationData);\r\n        return true;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        if(this.numberFALSEHTMLInput==null || this.numberTRUEHTMLInput==null) return;\r\n        this.cfg_setValue(NUMBER_TRUE, this.numberTRUEHTMLInput.valueAsNumber);\r\n        this.cfg_setValue(NUMBER_FALSE, this.numberFALSEHTMLInput.valueAsNumber);\r\n    }\r\n\r\n    protected SerializeFurtherProperties(ctx:SerializeContextAndAdressMap):void{\r\n        ctx.ctx.writeS32(this.cfg_getValue(NUMBER_TRUE, 1));\r\n        ctx.ctx.writeS32(this.cfg_getValue(NUMBER_FALSE, 0));\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let i = ctx.GetBoolean(this.IN);\r\n        ctx.SetInteger(this.OUT, i?this.cfg_getValue(NUMBER_TRUE, 1):this.cfg_getValue(NUMBER_FALSE, 0));\r\n    }\r\n}\r\n\r\nexport class Int2BoolConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.INTEGER);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let i = ctx.GetInteger(this.IN);\r\n        ctx.SetBoolean(this.OUT, i!=0);\r\n    }\r\n}\r\n\r\nexport class Int2FloatConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.INTEGER);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.FLOAT);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let i = ctx.GetInteger(this.IN);\r\n        ctx.SetFloat(this.OUT, i);\r\n    }\r\n}\r\n\r\n\r\nexport class Int2ColorConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.INTEGER);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.COLOR);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetInteger(this.IN);\r\n        ctx.SetColor(this.OUT, currentInputValue?\"RED\": \"GREY\");//TODO: Has to be improved\r\n    }\r\n}\r\n\r\nexport class Float2IntConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.FLOAT);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let i = ctx.GetFloat(this.IN);\r\n        ctx.SetInteger(this.OUT, i);\r\n    }\r\n}\r\n\r\nexport class Basic_TONOperator extends FlowchartOperator {\r\n    private inputTRIGGER:FlowchartInputConnector;\r\n    private inputPresetTime_msecs:FlowchartInputConnector;\r\n    private output:FlowchartOutputConnector;\r\n    private outputElapsedTime_msecs:FlowchartOutputConnector;\r\n    private lastInputValue:boolean=false;\r\n    private inputPositiveEdge:number = Number.MAX_VALUE;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.inputTRIGGER = new FlowchartInputConnector(this, \"TRIGGER\", 0, ConnectorType.BOOLEAN);\r\n        this.inputPresetTime_msecs = new FlowchartInputConnector(this, \"PT_MS\", 1, ConnectorType.INTEGER);\r\n        this.output = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.outputElapsedTime_msecs = new FlowchartOutputConnector(this, \"ET_MS\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.inputTRIGGER, this.inputPresetTime_msecs], [this.output,this.outputElapsedTime_msecs]);\r\n    }\r\n\r\n    public OnSimulationStart(ctx:SimulationContext){\r\n        this.inputPositiveEdge = Number.MAX_VALUE;\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetBoolean(this.inputTRIGGER);\r\n        let presetTime_msecs = ctx.GetInteger(this.inputPresetTime_msecs);\r\n        let now = ctx.GetMillis();\r\n        if(this.lastInputValue==false && currentInputValue==true){\r\n            this.inputPositiveEdge=now;\r\n        }\r\n        else if(currentInputValue==false){\r\n            this.inputPositiveEdge=Number.MAX_VALUE;\r\n        }\r\n        this.lastInputValue=currentInputValue;\r\n        let elapsed = (now-this.inputPositiveEdge);\r\n        ctx.SetBoolean(this.output, elapsed>=presetTime_msecs);\r\n        ctx.SetInteger(this.outputElapsedTime_msecs, elapsed);\r\n    }\r\n}\r\n\r\nexport class Basic_TOFOperator extends FlowchartOperator {\r\n  \r\n    private inputTRIGGER:FlowchartInputConnector;\r\n    private inputPresetTime_msecs:FlowchartInputConnector;\r\n    private output:FlowchartOutputConnector;\r\n    private outputElapsedTime_msecs:FlowchartOutputConnector;\r\n    private lastInputValue:boolean=false;\r\n    private inputNegativeEdge:number = 0;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.inputTRIGGER = new FlowchartInputConnector(this, \"TRIGGER\", 0, ConnectorType.BOOLEAN);\r\n        this.inputPresetTime_msecs = new FlowchartInputConnector(this, \"PT_MS\", 1, ConnectorType.INTEGER);\r\n        this.output = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.outputElapsedTime_msecs = new FlowchartOutputConnector(this, \"ET_MS\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.inputTRIGGER, this.inputPresetTime_msecs], [this.output,this.outputElapsedTime_msecs]);\r\n    }\r\n\r\n    public OnSimulationStart(ctx:SimulationContext){\r\n        this.inputNegativeEdge = 0;\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetBoolean(this.inputTRIGGER);\r\n        let presetTime_msecs = ctx.GetInteger(this.inputPresetTime_msecs);\r\n        let now = ctx.GetMillis();\r\n        if(this.lastInputValue==true && currentInputValue==false){\r\n            this.inputNegativeEdge=now;\r\n        }\r\n        else if(currentInputValue==true){\r\n            this.inputNegativeEdge=0;\r\n        }\r\n        this.lastInputValue=currentInputValue;\r\n        let elapsed = (now-this.inputNegativeEdge);\r\n        elapsed=Math.min(elapsed, presetTime_msecs)\r\n        ctx.SetBoolean(this.output, currentInputValue || (elapsed<presetTime_msecs));\r\n        ctx.SetInteger(this.outputElapsedTime_msecs, elapsed);\r\n    }\r\n}\r\n\r\n\r\nexport class Arithmetic_LIMITOperator extends FlowchartOperator {\r\n    protected Minimum:FlowchartInputConnector;\r\n    protected Input:FlowchartInputConnector;\r\n    protected Maximum:FlowchartInputConnector;\r\n    protected Output:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.Minimum = new FlowchartInputConnector(this, \"Minimum\", 0, ConnectorType.INTEGER);\r\n        this.Input = new FlowchartInputConnector(this, \"Input\", 1, ConnectorType.INTEGER);\r\n        this.Maximum = new FlowchartInputConnector(this, \"Maximum\", 2, ConnectorType.INTEGER);\r\n        this.Output = new FlowchartOutputConnector(this, \"Output\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.Minimum, this.Input, this.Maximum], [this.Output]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx: SimulationContext): void {\r\n        let i = ctx.GetInteger(this.Input);\r\n        let min = ctx.GetInteger(this.Minimum);\r\n        let max = ctx.GetInteger(this.Minimum);\r\n        ctx.SetInteger(this.Output, i>max?max:i<min?min:i);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_LIMITMONITOROperator extends FlowchartOperator {\r\n    protected Minimum:FlowchartInputConnector;\r\n    protected Input:FlowchartInputConnector;\r\n    protected Maximum:FlowchartInputConnector;\r\n    protected Hysterese:FlowchartInputConnector;\r\n    protected LLE:FlowchartOutputConnector;\r\n    protected ULE:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.Minimum = new FlowchartInputConnector(this, \"Minimum\", 0, ConnectorType.INTEGER);\r\n        this.Input = new FlowchartInputConnector(this, \"Input\", 1, ConnectorType.INTEGER);\r\n        this.Maximum = new FlowchartInputConnector(this, \"Maximum\", 2, ConnectorType.INTEGER);\r\n        this.Hysterese = new FlowchartInputConnector(this, \"Hysterese\", 3, ConnectorType.INTEGER);\r\n        this.LLE = new FlowchartOutputConnector(this, \"LLE\", 0, ConnectorType.BOOLEAN);\r\n        this.ULE = new FlowchartOutputConnector(this, \"ULE\", 1, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.Minimum, this.Input, this.Maximum], [this.LLE, this.ULE]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx: SimulationContext): void {\r\n        let i = ctx.GetInteger(this.Input);\r\n        let min = ctx.GetInteger(this.Minimum);\r\n        let max = ctx.GetInteger(this.Minimum);\r\n        let h = ctx.GetInteger(this.Hysterese);\r\n        if(i>max){\r\n            ctx.SetBoolean(this.ULE, true);\r\n        }else if(i<=max-h){\r\n            ctx.SetBoolean(this.ULE, false);\r\n        }\r\n        if(i<min){\r\n            ctx.SetBoolean(this.LLE, true);\r\n        } else if(i>=min+h){\r\n            ctx.SetBoolean(this.LLE, false);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Arithmetic_GreaterThanOperator extends FlowchartOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        let A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        let B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        let C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([A, B], [C]);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_LessThanOperator extends FlowchartOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        let A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        let B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        let C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([A, B], [C]);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class Custom_XYZBlock extends FlowchartOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        let A = new FlowchartInputConnector(this, \"TempVL\", 0, ConnectorType.INTEGER);\r\n        let B = new FlowchartInputConnector(this, \"TempRL\", 1, ConnectorType.INTEGER);\r\n        let B1 = new FlowchartInputConnector(this, \"Switch\", 2, ConnectorType.BOOLEAN);\r\n        let C = new FlowchartOutputConnector(this, \"Motor\", 0,ConnectorType.BOOLEAN);\r\n        let C1 = new FlowchartOutputConnector(this, \"Valve\", 1,ConnectorType.INTEGER);\r\n        this.AppendConnectors([A, B, B1], [C, C1]);\r\n    }\r\n\r\n    private value1HTMLInput:HTMLInputElement|null=null;\r\n    private value2HTMLInput:HTMLInputElement|null=null;\r\n    private value3HTMLInput:HTMLInputElement|null=null;\r\n    private color1HTMLInput:HTMLInputElement|null=null;\r\n    public PopulateProperyGrid(tbody:HTMLTableSectionElement):boolean\r\n    {\r\n        this.value1HTMLInput=$.InputNumber(tbody, -32768, 32767, \"Value1\", this.configurationData);\r\n        this.value1HTMLInput=$.InputNumber(tbody, -32768, 32767, \"Value2\", this.configurationData);\r\n        this.value1HTMLInput=$.InputNumber(tbody, -32768, 32767, \"Value3\", this.configurationData);\r\n        this.color1HTMLInput=$.InputColor(tbody, \"Color1\", this.configurationData);\r\n        return true;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        this.cfg_setValue(\"Value1\", this.value1HTMLInput!.valueAsNumber);\r\n        this.cfg_setValue(\"Value2\", this.value2HTMLInput!.valueAsNumber);\r\n        this.cfg_setValue(\"Value3\", this.value3HTMLInput!.valueAsNumber);\r\n        this.cfg_setValue(\"Color1\", this.color1HTMLInput!.valueAsNumber);\r\n    }\r\n\r\n    protected SerializeFurtherProperties(ctx:SerializeContextAndAdressMap):void{\r\n        ctx.ctx.writeS32(this.cfg_getValue(\"Value1\", 0));\r\n        ctx.ctx.writeS32(this.cfg_getValue(\"Value2\", 0));\r\n        ctx.ctx.writeS32(this.cfg_getValue(\"Value3\", 0));\r\n        let colorString = this.cfg_getValue(\"Color1\", \"#000000\");\r\n        let colorNum=$.ColorDomString2ColorNum(colorString);\r\n        ctx.ctx.writeU32(colorNum);\r\n        return;\r\n    }\r\n}\r\n\r\nexport class Control_PID extends FlowchartOperator {\r\n    private inputActualValue:FlowchartInputConnector;\r\n    private inputSetpoint:FlowchartInputConnector;\r\n    private inputKP:FlowchartInputConnector;\r\n    private inputKI:FlowchartInputConnector;\r\n    private inputKD:FlowchartInputConnector;\r\n    private output:FlowchartOutputConnector;\r\n\r\n\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.inputActualValue = new FlowchartInputConnector(this, \"Actual\", 0, ConnectorType.FLOAT);\r\n        this.inputSetpoint = new FlowchartInputConnector(this, \"Setpoint\", 1, ConnectorType.FLOAT);\r\n        this.inputKP= new FlowchartInputConnector(this, \"KP\", 2, ConnectorType.FLOAT);\r\n        this.inputKI= new FlowchartInputConnector(this, \"KI\", 3, ConnectorType.FLOAT);\r\n        this.inputKD= new FlowchartInputConnector(this, \"KD\", 4, ConnectorType.FLOAT);\r\n        this.output = new FlowchartOutputConnector(this, \"Out\", 1,ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.inputActualValue, this.inputSetpoint, this.inputKP, this.inputKI, this.inputKD], [this.output]);\r\n    }\r\n}","\r\nexport class SerializeContext {\r\n    public writeGUID(guid: Uint8Array) {\r\n        for (let i = 0; i < 16; i++) {\r\n            this.bufferDV.setUint8(this.bufferOffset + i, guid[i]);\r\n        }\r\n        this.bufferOffset += 16;\r\n    }\r\n\r\n    public consumeGUIDandCompare(compare:Uint8Array): boolean {\r\n        let val=true;\r\n        for (let i = 0; i < 16; i++) {\r\n            if(compare[i]!=this.bufferDV.getUint8(this.bufferOffset + i)){\r\n                val=false;\r\n                break;\r\n            }\r\n        }\r\n        this.bufferOffset += 16;\r\n        return val;\r\n    }\r\n    private bufferDV: DataView;\r\n    constructor(private buffer: ArrayBuffer, private bufferOffset: number = 0) {\r\n        this.bufferDV = new DataView(buffer);\r\n    }\r\n\r\n    public funhash(start:number, end:number):number{\r\n        end=Math.min(end, this.bufferDV.byteLength);\r\n        for(var i = start, h = 0xdeadbeef; i < end; i++)\r\n            h = Math.imul(h ^ this.bufferDV.getUint8(i), 2654435761);\r\n        return (h ^ h >>> 16) >>> 0;\r\n    }\r\n\r\n    public overwriteU32(theNumber: number, offset:number): void {\r\n        if(offset>this.bufferOffset-4) throw new Error(\"offset>this.bufferOffset-4\");\r\n        this.bufferDV.setUint32(offset, theNumber, true);\r\n    }\r\n    public writeS32(theNumber: number): void {\r\n        this.bufferDV.setInt32(this.bufferOffset, theNumber, true);\r\n        this.bufferOffset += 4;\r\n    }\r\n\r\n    public writeU32(theNumber: number): void {\r\n        this.bufferDV.setUint32(this.bufferOffset, theNumber, true);\r\n        this.bufferOffset += 4;\r\n    }\r\n\r\n    public writeF32(theNumber: number): void {\r\n        this.bufferDV.setFloat32(this.bufferOffset, theNumber, true);\r\n        this.bufferOffset += 4;\r\n    }\r\n\r\n    public readF32(): number {\r\n        let val = this.bufferDV.getFloat32(this.bufferOffset, true);\r\n        this.bufferOffset += 4;\r\n        return val;\r\n    }\r\n\r\n    public readU32(): number {\r\n        let val = this.bufferDV.getUint32(this.bufferOffset, true);\r\n        this.bufferOffset += 4;\r\n        return val;\r\n    }\r\n\r\n    public readS32(): number {\r\n        let val = this.bufferDV.getInt32(this.bufferOffset, true);\r\n        this.bufferOffset += 4;\r\n        return val;\r\n    }\r\n\r\n    public getResult(): ArrayBuffer {\r\n        return this.buffer.slice(0, this.bufferOffset);\r\n    }\r\n}\r\n","import { HashAndBufAndMaps, SortedOperatorsAndMaps } from \"./FlowchartCompiler\";\r\nimport { FlowchartInputConnector, FlowchartOutputConnector } from \"./FlowchartConnector\";\r\nimport { FlowchartOperator } from \"./FlowchartOperator\";\r\nimport { SimulationContext } from \"./SimulationContext\";\r\n\r\nexport class SimulationManager implements SimulationContext{\r\n    private booleans!: boolean[];\r\n    private integers!:number[];\r\n    private floats!:number[];\r\n    private colors!:string[];\r\n    private millisSince1970!:number;\r\n    private running:boolean=false;\r\n\r\n    constructor(private sortedOperatorsAndMaps: SortedOperatorsAndMaps){\r\n        this.resetDatastructures()!;\r\n    }\r\n\r\n    private resetDatastructures(){\r\n        this.booleans =new Array(this.sortedOperatorsAndMaps.typeIndex2maxOffset.get(0));\r\n        this.integers  = new Array(this.sortedOperatorsAndMaps.typeIndex2maxOffset.get(1));\r\n        this.floats  = new Array(this.sortedOperatorsAndMaps.typeIndex2maxOffset.get(2));\r\n        this.colors  = new Array(this.sortedOperatorsAndMaps.typeIndex2maxOffset.get(3));\r\n        this.millisSince1970=Date.now();\r\n    }\r\n\r\n\r\n    SetBoolean(outConn: FlowchartOutputConnector, value: boolean): void {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(0)!.get(outConn.GlobalConnectorIndex)!;\r\n        this.booleans[i]=value;\r\n    }\r\n    SetInteger(outConn: FlowchartOutputConnector, value: number): void {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(1)!.get(outConn.GlobalConnectorIndex)!;\r\n        this.integers[i]=value;\r\n    }\r\n    SetFloat(outConn: FlowchartOutputConnector, value: number): void {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(2)!.get(outConn.GlobalConnectorIndex)!;\r\n        this.floats[i]=value;\r\n    }\r\n    SetColor(outConn: FlowchartOutputConnector, value: string): void {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(3)!.get(outConn.GlobalConnectorIndex)!;\r\n        this.colors[i]=value;\r\n    }\r\n    GetBoolean(inConn: FlowchartInputConnector): boolean {\r\n        \r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(0)!.get(inConn.GetGlobalConnectorIndexOfSignalSource())!;\r\n        return this.booleans[i];\r\n    }\r\n    GetInteger(inConn: FlowchartInputConnector): number {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(1)!.get(inConn.GetGlobalConnectorIndexOfSignalSource())!;\r\n        return this.integers[i];\r\n    }\r\n    GetFloat(inConn: FlowchartInputConnector): number {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(2)!.get(inConn.GetGlobalConnectorIndexOfSignalSource())!;\r\n        return this.floats[i];\r\n    }\r\n    GetColor(inConn: FlowchartInputConnector): string {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(3)!.get(inConn.GetGlobalConnectorIndexOfSignalSource())!;\r\n        return this.colors[i];\r\n    }\r\n\r\n    public Start(warmstart:boolean=false){\r\n        if(!warmstart) this.resetDatastructures();\r\n        this.running=true;\r\n        for(let o of this.sortedOperatorsAndMaps.sortedOperators){\r\n            o.OnSimulationStart(this);\r\n        }\r\n        window.requestAnimationFrame(()=>this.Step());\r\n\r\n    }\r\n\r\n    public Stop(){\r\n        this.running=false;\r\n    }\r\n\r\n\r\n    Step():void{\r\n        this.millisSince1970= Date.now();\r\n        for(let o of this.sortedOperatorsAndMaps.sortedOperators){\r\n            o.OnSimulationStep(this);\r\n        }\r\n        //colorize booleans links\r\n        for(let kv of this.sortedOperatorsAndMaps.typeIndex2adressOffset2ListOfLinks.get(0)!.entries())\r\n        {\r\n            let adressOffset=kv[0];\r\n            if(adressOffset<2) continue;\r\n            let value = this.booleans[adressOffset]\r\n            let linksToChange=kv[1];\r\n            linksToChange.forEach((e)=>{\r\n                e.SetColor(value?\"red\":\"grey\");\r\n                e.SetCaption(\"\"+value);\r\n            });\r\n        }\r\n\r\n        //colorize integers links\r\n        for(let kv of this.sortedOperatorsAndMaps.typeIndex2adressOffset2ListOfLinks.get(1)!.entries())\r\n        {\r\n            let adressOffset=kv[0];\r\n            if(adressOffset<2) continue;\r\n            let value = this.integers[adressOffset]\r\n            let linksToChange=kv[1];\r\n            linksToChange.forEach((e)=>{\r\n                e.SetCaption(\"\"+value);\r\n            });\r\n        }\r\n        //colorize floats links\r\n        for(let kv of this.sortedOperatorsAndMaps.typeIndex2adressOffset2ListOfLinks.get(2)!.entries())\r\n        {\r\n            let adressOffset=kv[0];\r\n            if(adressOffset<2) continue;\r\n            let value = this.floats[adressOffset]\r\n            let linksToChange=kv[1];\r\n            linksToChange.forEach((e)=>{\r\n                e.SetCaption(\"\"+value);\r\n            });\r\n        }\r\n        //colorize colors links\r\n        for(let kv of this.sortedOperatorsAndMaps.typeIndex2adressOffset2ListOfLinks.get(3)!.entries())\r\n        {\r\n            let adressOffset=kv[0];\r\n            if(adressOffset<2) continue;\r\n            let value = this.colors[adressOffset]\r\n            let linksToChange=kv[1];\r\n            linksToChange.forEach((e)=>{\r\n                e.SetCaption(value);\r\n                e.SetColor(value);\r\n            });\r\n        }\r\n        if(this.running){\r\n            window.requestAnimationFrame(()=>this.Step());\r\n        }\r\n        else{\r\n            for(let o of this.sortedOperatorsAndMaps.sortedOperators){\r\n                o.OnSimulationStop(this);\r\n            }\r\n            for(let types of this.sortedOperatorsAndMaps.typeIndex2adressOffset2ListOfLinks.values())\r\n            {\r\n                for(let kv of types.entries()){\r\n                    let adressOffset=kv[0];\r\n                    if(adressOffset<2) continue;\r\n                    let value = this.booleans[adressOffset]\r\n                    let linksToChange=kv[1];\r\n                    linksToChange.forEach((e)=>{\r\n                        e.SetColor(\"blue\");\r\n                        e.SetCaption(\"\");\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    GetMillis(): number {\r\n        return this.millisSince1970;\r\n    }\r\n\r\n}","import { StringNumberTuple } from \"../utils\";\r\nexport default function(){ return [\r\n\tnew StringNumberTuple(\"No Song\", 0),\r\n\tnew StringNumberTuple(\"positive\", 1),\r\n\tnew StringNumberTuple(\"negative\", 2),\r\n\tnew StringNumberTuple(\"Barbie_girl\", 3),\r\n\tnew StringNumberTuple(\"HauntedHouse\", 4),\r\n\tnew StringNumberTuple(\"axelf\", 5),\r\n\tnew StringNumberTuple(\"Bond_007\", 6),\r\n];\r\n};\r\n","//https://en.wikipedia.org/wiki/Topological_sorting\r\n\r\n\r\nenum MarkerState\r\n{\r\n    NONE,\r\n    TEMPORARY,\r\n    PERMANENT,\r\n}\r\n\r\nexport class  NodeWrapper<N> {\r\n    constructor(private payload:N) {\r\n        this.Mark=MarkerState.NONE;\r\n        this.DependendNodes=[];\r\n    }\r\n    public Mark:MarkerState\r\n    public DependendNodes:NodeWrapper<N>[];\r\n    get Payload() {return this.payload;}\r\n};\r\n\r\nexport class TopologicalSortDFS<N>{\r\n    private L:Array<NodeWrapper<N>>;\r\n    constructor()\r\n    {\r\n        this.L=new Array<NodeWrapper<N>>();\r\n    }\r\n\r\n    public sort(headNode:Array<NodeWrapper<N>>)\r\n    {\r\n        this.L=new Array<NodeWrapper<N>>();\r\n        headNode.forEach((n)=>this.visit(n));\r\n        return this.L;\r\n    }\r\n\r\n    private visit(n:NodeWrapper<N>){\r\n        if(n.Mark==MarkerState.PERMANENT) return;\r\n        if(n.Mark==MarkerState.TEMPORARY) throw new Error(\"not a DAG\");\r\n        n.Mark=MarkerState.TEMPORARY;\r\n        for (const d of n.DependendNodes) {\r\n            this.visit(d);\r\n        }\r\n        n.Mark=MarkerState.PERMANENT;\r\n        this.L.push(n);\r\n    }\r\n}","export class Utils\r\n{\r\n    public static EventCoordinatesInSVG(evt:MouseEvent, element:Element, positionRatio:number=1):Location2D {\r\n        let rect = element.getBoundingClientRect();\r\n        return {x: (evt.clientX - rect.left)/positionRatio, y:(evt.clientY - rect.top)/positionRatio}\r\n    }\r\n}\r\n\r\nexport interface Location2D {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport interface KeyValueTuple {\r\n    key: string;\r\n    value: any;\r\n}\r\n\r\nexport class StringNumberTuple{\r\n    public constructor(public s:string, public n:number){}\r\n}\r\n\r\n\r\nexport class $\r\n{\r\n    public static readonly SVGNS = \"http://www.w3.org/2000/svg\";\r\n    public static readonly XLINKNS = \"http://www.w3.org/1999/xlink\";\r\n    public static readonly HTMLNS = \"http://www.w3.org/1999/xhtml\";\r\n\r\n    public static Svg(parent: Element, type:string,  attributes:string[], classes?: string[]):SVGElement {\r\n        return  parent.appendChild(<SVGElement>$.Elem($.SVGNS, type, attributes, classes));\r\n    }\r\n\r\n    //<svg class=\"icon icon-wastebasket\"><use xlink:href=\"#icon-wastebasket\"></use></svg>\r\n    public static SvgIcon(parent: Element, iconname:string):SVGSVGElement\r\n    {\r\n        let svg = <SVGSVGElement>$.Svg(parent, \"svg\", [], [\"icon\", \"icon-\"+iconname]);\r\n        let use =$.Svg(svg, \"use\", [], []);\r\n        use.setAttributeNS(this.XLINKNS, \"href\", \"#icon-\"+iconname);\r\n        parent.appendChild(svg);\r\n        return svg;\r\n    }\r\n\r\n    public static ColorNumColor2ColorDomString(num:number):string {\r\n        let str = num.toString(16);\r\n        while (str.length < 6) str = \"0\" + num;\r\n        return \"#\"+str;\r\n    }\r\n\r\n    public static ColorDomString2ColorNum(colorString: string):number {\r\n        return parseInt(colorString.substring(1), 16);\r\n    }\r\n\r\n    public static Html(parent: Element, type:string,  attributes:string[], classes?: string[], textContent?:string):HTMLElement {\r\n        return parent.appendChild(<HTMLElement>$.Elem($.HTMLNS, type, attributes, classes, textContent));\r\n    }\r\n\r\n    public static HtmlAsFirstChild(parent: Element, type:string,  attributes:string[], classes?: string[], textContent?:string):HTMLElement {\r\n        if(parent.firstChild)\r\n            return parent.insertBefore(<HTMLElement>$.Elem($.HTMLNS, type, attributes, classes, textContent), parent.firstChild);\r\n        else\r\n            return parent.appendChild(<HTMLElement>$.Elem($.HTMLNS, type, attributes, classes, textContent));\r\n    }\r\n\r\n    private static Elem(ns:string, type:string, attributes:string[], classes?: string[], textContent?:string):Element\r\n    {\r\n        let element = document.createElementNS(ns, type);\r\n        if(classes)\r\n        {\r\n            for (const clazz of classes) {\r\n                element.classList.add(clazz);\r\n            }\r\n        }\r\n        let i:number;\r\n        for(i=0;i<attributes.length;i+=2)\r\n        {\r\n            element.setAttribute(attributes[i], attributes[i+1]);\r\n        }\r\n        if(textContent)\r\n        {\r\n            element.textContent=textContent;\r\n        }\r\n        return element;\r\n    }\r\n\r\n    public static InputNumber(table:HTMLTableSectionElement, min:number, max:number, key:string, cfg:KeyValueTuple[]|null):HTMLInputElement\r\n    {\r\n        let value:number=0;\r\n        if(cfg!=null)\r\n        {\r\n            for (const e of cfg) {\r\n                if(e.key==key && !isNaN(e.value)){\r\n                    value=e.value;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let tr=$.Html(table, \"tr\", [],[\"develop-propertygrid-tr\"]);\r\n        $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"], key);\r\n        let inputContainer = $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"]);\r\n        return <HTMLInputElement>$.Html(inputContainer, \"input\", [\"type\", \"number\", \"min\", \"\"+Math.round(min), \"max\", \"\"+Math.round(max), \"value\", \"\"+Math.round(value),]);\r\n    }\r\n\r\n    public static InputSelect(table:HTMLTableSectionElement, displayValueAndKeyvalues:StringNumberTuple[], key:string, cfg:KeyValueTuple[]|null):HTMLSelectElement\r\n    {\r\n        let value:number=0;\r\n        if(cfg!=null)\r\n        {\r\n            for (const e of cfg) {\r\n                if(e.key==key && !isNaN(e.value)){\r\n                    value=e.value;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let tr=$.Html(table, \"tr\", [],[\"develop-propertygrid-tr\"]);\r\n        $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"], key);\r\n        let inputContainer = $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"]);\r\n        let select = <HTMLSelectElement>$.Html(inputContainer, \"select\", [], []);\r\n        for(let i=0;i<displayValueAndKeyvalues.length;i++)\r\n        {\r\n            let option = $.Html(select, \"option\", [\"value\", \"\"+displayValueAndKeyvalues[i].n], [], displayValueAndKeyvalues[i].s);\r\n            if(i==value){\r\n                option.setAttribute(\"selected\", \"\");\r\n            }\r\n        }\r\n        return select;\r\n    }\r\n\r\n   \r\n\r\n    public static InputColor(table:HTMLTableSectionElement, key:string, cfg:KeyValueTuple[]|null):HTMLInputElement\r\n    {\r\n        let value:string=\"#ff0000\";\r\n        if(cfg!=null)\r\n        {\r\n            for (const e of cfg) {\r\n                if(e.key==key){\r\n                    value=e.value;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let tr=$.Html(table, \"tr\", [],[\"develop-propertygrid-tr\"]);\r\n        $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"], key);\r\n        let inputContainer = $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"]);\r\n        return <HTMLInputElement>$.Html(inputContainer, \"input\", [\"type\", \"color\",  \"value\", value]);\r\n    }\r\n}"],"file":"bundle-min.js"}