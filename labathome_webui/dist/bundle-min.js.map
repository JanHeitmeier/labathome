{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/chart.js/dist/chart.js","src/ADCExperimentController.ts","src/AirspeedExperimentController.ts","src/App.ts","src/DevelopCFCController.ts","src/DialogController.ts","src/FFTExperimentController.ts","src/HeaterExperimentController.ts","src/ScreenController.ts","src/flowchart/Flowchart.ts","src/flowchart/FlowchartCompiler.ts","src/flowchart/FlowchartConnector.ts","src/flowchart/FlowchartLink.ts","src/flowchart/FlowchartOperator.ts","src/flowchart/FlowchartOperatorImpl.ts","src/flowchart/SerializeContext.ts","src/flowchart/SimulationManager.ts","src/flowchart/Songs.ts","src/flowchart/TopologicalSorfDFS.ts","src/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","global","factory","this","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","animator","[object Object]","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","initial","currentStep","Math","min","_update","_refresh","Date","now","remaining","running","items","item","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","map$1","0","2","3","4","5","6","7","8","9","A","B","C","D","E","F","b","d","hex","h1","h2","eq","hexString","v","g","isShort","round","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","s","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","map$1$1","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","ret","len","_rgb","_valid","valid","obj","hslString","color","weight","me","c1","c2","w2","w1","val","deg","rotate","index_esm","isPatternOrGradient","value","CanvasGradient","CanvasPattern","getHoverColor","saturate","darken","noop","uid","id","isNullOrUndef","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","_isClickEvent","overrides","descriptors","getScope$1","node","split","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","almostEquals","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","isNumber","isNaN","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","defineProperty","configurable","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","Set","add","from","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getRelativePosition$1","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","getRelativePosition","binarySearch","metaset","axis","controller","_sorted","iScale","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","optimizedEvaluateItems","position","handler","metasets","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","chartArea","_minPadding","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","evaluateAllVisibleItems","Interaction","modes","meta","getDatasetMeta","nearest","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","STATIC_POSITIONS","filterByPosition","filter","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","includes","_stack","count","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","update","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","freeze","updatePos","handleMaxPadding","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Proxy","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","setContext","receiver","isScriptable","join","_resolveScriptable","isIndexable","arr","resolver","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","constructor","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRightToLeftAdapter","rectX","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","startIsBefore","shouldStop","endIsBefore","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","last","stop","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","__proto__","easingEffects","_deprecated","fontString","pixelSize","fontStyle","fontFamily","BasePlatform","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","to","c0","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","rej","resolved","animationOptions","colors","properties","numbers","active","show","animations","visible","hide","Animations","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","parsed","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","scaleID","adata","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","parsedValue","NaN","otherScale","_getOtherScale","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","Element","final","defaultRoutes","formatters","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","offset","tickLength","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grid","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","getPixelForValue","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","_dataset","newControllers","_removeUnreferencedMetasets","order","isDatasetVisible","updateIndex","ControllerClass","getController","getElement","_updateMetasets","reset","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","abstract","version","unregister","DateAdapter","timestamp","amount","unit","weekday","members","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllParsedValues","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","updateElement","grouped","_getStacks","pixels","barThickness","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","_value_","BubbleController","getPixelForDecimal","tooltip","DoughnutController","innerRadius","outerRadius","getter","circumference","_getRotation","_getCircumference","arcs","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","findSegmentEnd","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","interpolate","pointValue","linePoints","firstValue","lastValue","getLineByIndex","sourcePoints","below","getLinesBelow","createBoundaryLine","buildStackLine","boundary","pointsFromSegments","resolveTarget","propagate","visited","clipY","lineLoop","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","targetLoop","drawfill","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","setWidth","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","CategoryScale","_startValue","_valueRange","_addedLabels","added","lastIndexOf","findOrAddLabel","getDecimalForPixel","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","logarithmic","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","define","amd","globalThis","self","ADCExperimentController","CHART_EACH_INTERVAL","DE_de","utils_1","chart_js_1","ScreenController_1","SerializeContext_1","ScreenController","appManagement","div","counter","seconds","recording","butRecord","butStop","butDelete","tbody","tfirstRow","onclick","resetData","timer","setInterval","sendAndReceive","clearInterval","innerText","xhr","XMLHttpRequest","onerror","log","open","responseType","onload","_a","_b","_c","_d","_e","_f","_g","_h","_j","Values","arrayBuffer","response","byteLength","SerializeContext","readF32","tr","$","HtmlAsFirstChild","Html","children","textContent","toLocaleTimeString","send","./ScreenController","./flowchart/SerializeContext","./utils","chart.js","AirspeedExperimentController","inputSetpointFan","inputServoOL","inputSetpointAirspeed","inputServoCL","inputKP","inputKI","inputKD","onModeChange","querySelectorAll","inp","setBubble","bubble","valueAsNumber","newVal","innerHTML","querySelector","oninput","newMode","buffer","ArrayBuffer","writeU32","writeF32","SetpointAirspeed","Fan","Servo","ActualAirspeed","random","getResult","HeaterExperimentController_1","DevelopCFCController_1","DialogController_1","ADCExperimentController_1","AirspeedExperimentController_1","FFTExperimentController_1","DashboardController","ReportsController","AppController","stateDiv","screenControllers","activeControllerIndex","dialogController","DialogController","state","newIndex","showDIV","State","ControllerState","CREATED","onFirstStart","STARTED","onRestart","hideDIV","onStop","STOPPED","DevelopCFCController","HeaterExperimentController","FFTExperimentController","sc","onCreate","setActiveScreen","id2index","ElementId","app","startup","./ADCExperimentController","./AirspeedExperimentController","./DevelopCFCController","./DialogController","./FFTExperimentController","./HeaterExperimentController","Flowchart_1","FlowchartOptions","operators","caption","globalTypeIndex","posX","posY","configurationData","links","fromOperatorIndex","fromOutput","toOperatorIndex","toInput","fc","Flowchart","triggerDebug","./flowchart/Flowchart","dialog","dialogHeading","dialogBody","dialogFooter","priority","messageText","prepareDialog","fileInput","files","openhandler","deletehandler","thead","tr_head","filename","substring","operationTd","openButton","SvgIcon","deleteButton","FREQUENCIES","INTERVAL","ZEROS","COLORS","butSave","inputFan","newDataset","inputSetpointHeater","inputFanOL","inputSetpointTemperature","inputFanCL","inputTN","inputTV","SetpointTemperature","Heater","ActualTemperature","10","__createBinding","k2","desc","__esModule","__setModuleDefault","__importStar","mod","FlowchartConnector_1","FlowchartCompiler_1","FlowchartLink_1","operatorimpl","SimulationManager_1","canUserEditLinks","canUserMoveOperators","distanceFromArrow","defaultOperatorClass","defaultLinkColor","defaultSelectedLinkColor","linkWidth","multipleLinksOnOutput","multipleLinksOnInput","linkVerticalDecal","currentDebugInfo","lastOutputConnectorClicked","selectedOperator","selectedLink","positionRatio","temporaryLinkSnapped","operatorRegistry","OperatorRegistry","Build","subcontainer","classList","getElementsByClassName","elem","buildMenu","workspace","propertyGridHtmlDiv","flowchartContainerSvgSvg","Svg","linksLayer","operatorsLayer","tempLayer","visibility","defs","markerArrow","markerCircle","temporaryLink","operatorLibActivator","operatorLibDiv","onmouseenter","onmouseleave","unselectOperator","unselectLink","onkeyup","deleteSelectedThing","populateOperatorLib","ti","OperatorName","createOperatorInternal","GlobalTypeIndex","coords","Utils","EventCoordinatesInSVG","MoveTo","RegisterDragging","GlobalOperatorIndex","SelectedLink","Options","PositionRatio","LinkLayer","OperatorsLayer","ToolsLayer","readU32","hash","binaryCount","adressOffset","connectorType","ConnectorType","BOOLEAN","linksToChange","typeIndex2adressOffset2ListOfLinks","SetColor","SetCaption","integerCount","readS32","INTEGER","floatsCount","FLOAT","colorsCount","COLOR","ColorNumColor2ColorDomString","unsetTemporaryLink","GetLinkpoint","setTemporaryLink","onmouseup","onmousemove","_notifyGlobalMouseupWithLink","_notifyGlobalMousemoveWithLink","LinksLength","Type","createLink","SelectOperator","link","selectLink","onLinkUnselect","UnsetColor","onLinkSelect","DeleteOperator","DeleteLink","GlobalLinkIndex","op","TypeInfo","Caption","Xpos","Ypos","Config_Copy","From","Parent","LocalConnectorIndex","To","fbd2json","createElement","encodeURIComponent","appendChild","click","removeChild","binFile","FlowchartCompiler","Compile","blob","Blob","Uint8Array","buf","url","URL","createObjectURL","href","download","reader","FileReader","onloadend","setData","readAsText","status","showOKDialog","showEnterFilenameDialog","xhr_json","xhr_bin","responseText","showFilelist","onchange","openFromLocalFile","toolbar","menuFile","menuFileDropBtn","menuFileDropContent","toggle","preventDefault","openJSONFromLabathome","openDefaultJSONFromLabathome","saveJSONToLocalFile","saveJSONToLabathomeFile","saveBinToLocalFile","menuDebug","menuDebugDropBtn","menuDebugDropContent","guidAndBufAndMap","put2fbd","saveJSONandBINToLabathomeDefaultFile","menuSimulation","menuSimulationDropBtn","menuSimulationDropContent","compilerInstance","simulationManager","SimulationManager","CompileForSimulation","Start","Stop","IsIndexKnown","onOperatorCreate","CreateByIndex","RemoveFromDOM","indexInData2operator","fromOp","toOp","fromConn","GetOutputConnectorByIndex","toConn","GetInputConnectorByIndex","globalLinkIndex","RemoveLink","globalOperatorIndex","outputKV","OutputsKVIt","linkKV","LinksKVIt","inputKV","InputsKVIt","onLinkCreate","FlowchartLink","AddLink","DATATYPE2COLOR","onOperatorUnselect","ShowAsSelected","operator","onOperatorSelect","PopulateProperyGrid","SavePropertyGrid","../utils","./FlowchartCompiler","./FlowchartConnector","./FlowchartLink","./FlowchartOperatorImpl","./SerializeContext","./SimulationManager","11","FlowchartOperator_1","TopologicalSorfDFS_1","index2operator","index2wrappedOperator","NodeWrapper","wrappedOutputOperators","dependents","inputkv","Payload","linkkv","dependentOperator","dependentWrappedNode","DependendNodes","Position","PositionType","Output","TopologicalSortDFS","sortedOperators","sortOperators","SetDebugInfoText","maps","createLookupMaps","typeIndex2globalConnectorIndex2adressOffset","typeIndex2maxOffset","hashAndBuf","serialize","dv","DataView","getUint8","GlobalConnectorIndex","GetLinksCopy","serctx","SerializeToBinary","funhash","overwriteU32","./FlowchartOperator","./TopologicalSorfDFS","12","FlowchartOutputConnector","FlowchartInputConnector","FlowchartConnector","TRANSLATEY","localIndex","HasLink","globalConnectorIndex","INDEX","spec","getIOSpecifics","translateY","childElementCount","inputOrOutput","connectorGroup","connector","snapper","onmouseover","_shadeColor","onmouseout","RefreshPosition","flowchart","posrat","flowchartRect","connectorRect","_notifyInputConnectorMouseup","_notifyInputConnectorMouseenter","_notifyInputConnectorMouseleave","InputSvgG","onmousedown","_notifyOutputConnectorMousedown","OutputSvgG","./Flowchart","13","MAX_INDEX","captionElement","captionPath","setAttributeNS","XLINKNS","_notifyLinkClicked","fromPosition","toPosition","fromX","fromY","toX","toY","bezierFromX","bezierToX","bezierIntensity","14","FlowchartOperator","SingletonType","GroupName","Singleton","Builder","typeInfo","Inputs","Outputs","elementSvgG","dragGroup","debugInfoSvgText","inputSvgG","outputSvgG","_notifyOperatorClicked","ElementSvgG","outputs","RefreshLinkPositions","variableAdress","out","output","SerializeInputsAndOutputs","SerializeFurtherProperties","mapper","15","Int2BoolConvert","Bool2IntConvert","Bool2ColorConvert","Arithmetic_ConstINTOperator","Sound_Melody","Basic_ConstFALSEOperator","Basic_ConstTRUEOperator","Output_Led7Operator","Output_Led6Operator","Output_Led5Operator","Output_Led4Operator","Output_Led3Operator","Output_CommonRGBLedOperator","Output_GreenLedOperator","Output_YellowLedOperator","Output_RedLedOperator","Output_PowerLedOperator","Output_Fan2Operator","Output_Fan1Operator","Output_RelayOperator","Input_EncoderTicksOperator","Input_RedButtonOperator","Input_EncoderButtonOperator","Input_GreenButtonOperator","Basic_NotOperator","Basic_TimekeeperOperator","Basic_CNTOperator","Basic_SROperator","Basic_RSOperator","Arithmetic_MINOperator","Arithmetic_MAXOperator","Arithmetic_DIVIDEOperator","Arithmetic_MULTIPLYOperator","Arithmetic_SUBOperator","Arithmetic_ADDOperator","Basic_XOROperator","Basic_OROperator","Basic_ANDOperator","Sensor_MovementOperator","Sensor_ExternalPressure","Sensor_AmbientNoise","Sensor_AmbientBrightnessOperator","Sensor_AirQualityOperator","Sensor_AirCO2Operator","Sensor_AirPressureOperator","Sensor_AirHumidityOperator","Sensor_AirTemperatureBMEOperator","Sensor_AirTemperatureDS18Operator","Sensor_HeaterTemperatureOperator","Control_PID","Custom_XYZBlock","Arithmetic_LessThanOperator","Arithmetic_GreaterThanOperator","Arithmetic_LIMITMONITOROperator","Arithmetic_LIMITOperator","Basic_TOFOperator","Basic_TONOperator","Float2IntConvert","Int2ColorConvert","Int2FloatConvert","Song","Basic","Arithmetic","Input","Sensor","Converter","Sound","Control","Custom","CONSTANT","SONG_INDEX","index2Info","groupName2operatorName2Info","groupName","operatorName","singleton","builder","operatorName2Info","onmousedownHandler","kv","ul","Register","Default","ca","co","Sensor_CommonSensorOperator","nameOfOutput","minOutput","maxOutput","sensorValue","AppendConnectors","SetInteger","StorageId","GetBoolean","SetBoolean","GetInteger","_CurrentValue","lastInputValue","CountUp","Reset","PresetValue","OUT","CurrentValue","currentInputValue","PV","_CurrentValueMs","lastMillis","GetMillis","IN","Input_CommonButtonOperator","GetFloat","Output_CommonLedOperator","colorOnTRUE","colorOnFALSE","removeProperty","LED","GetColor","songIndexHTMLSelect","cfg_setDefault","InputSelect","default","cfg_setValue","writeS32","cfg_getValue","constantHTMLInput","InputNumber","COLOR_TRUE","COLOR_FALSE","colorTRUEHTMLInput","colorFALSEHTMLInput","InputColor","colorString","colorNum","ColorDomString2ColorNum","NUMBER_TRUE","NUMBER_FALSE","numberTRUEHTMLInput","numberFALSEHTMLInput","MIN_VALUE","MAX_VALUE","SetFloat","inputPositiveEdge","inputTRIGGER","inputPresetTime_msecs","outputElapsedTime_msecs","presetTime_msecs","inputNegativeEdge","Minimum","Maximum","Hysterese","LLE","ULE","value1HTMLInput","value2HTMLInput","value3HTMLInput","color1HTMLInput","B1","C1","inputActualValue","inputSetpoint","./Songs","16","bufferOffset","bufferDV","guid","setUint8","imul","theNumber","setUint32","setInt32","setFloat32","getFloat32","getUint32","getInt32","17","sortedOperatorsAndMaps","resetDatastructures","booleans","integers","floats","millisSince1970","outConn","inConn","GetGlobalConnectorIndexOfSignalSource","warmstart","OnSimulationStart","Step","OnSimulationStep","OnSimulationStop","types","18","StringNumberTuple","19","MarkerState","payload","Mark","NONE","headNode","visit","PERMANENT","TEMPORARY","20","attributes","classes","Elem","SVGNS","iconname","svg","HTMLNS","firstChild","insertBefore","ns","createElementNS","clazz","inputContainer","displayValueAndKeyvalues","select"],"mappings":"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","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map$1[str[1]] * 17,\n\t\t\t\tg: 255 & map$1[str[2]] * 17,\n\t\t\t\tb: 255 & map$1[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map$1[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map$1[str[1]] << 4 | map$1[str[2]],\n\t\t\t\tg: map$1[str[3]] << 4 | map$1[str[4]],\n\t\t\t\tb: map$1[str[5]] << 4 | map$1[str[6]],\n\t\t\t\ta: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone$1(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone$1(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone(source) {\n  if (isArray(source)) {\n    return source.map(clone);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition$1(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\nresolveObjectKey: resolveObjectKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\n_isClickEvent: _isClickEvent,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_isDomSupported: _isDomSupported,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition$1,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\ncreateContext: createContext,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\n_detectPlatform: _detectPlatform,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar _adapters = {\n  _date: DateAdapter\n};\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));\n","import { $ } from \"./utils\";\r\nimport { Chart} from 'chart.js';\r\nimport { ScreenController } from \"./ScreenController\";\r\nimport { AppManagement } from \"./AppManagement\";\r\nimport { SerializeContext } from \"./flowchart/SerializeContext\";\r\n\r\nexport let DE_de = new Intl.NumberFormat('de-DE');\r\nexport const CHART_EACH_INTERVAL = 2;\r\n\r\nexport class ADCExperimentController extends ScreenController {\r\n    private butRecord: HTMLButtonElement;\r\n    private butStop: HTMLButtonElement;\r\n    private butDelete: HTMLButtonElement;\r\n    private tbody: HTMLTableSectionElement;\r\n    private tfirstRow: HTMLTableRowElement;\r\n    private timer: number | undefined;\r\n    private chart: Chart;\r\n    private counter = 10 ^ 6;\r\n    private seconds = 0;\r\n\r\n    private recording = false;\r\n\r\n    public onFirstStart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onRestart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onStop(): void {\r\n        window.clearInterval(this.timer);\r\n        this.butStop.hidden = true;\r\n        this.butRecord.hidden = false;\r\n        this.counter = 10 ^ 6;\r\n    }\r\n    public onCreate() {\r\n        this.resetData();\r\n    }\r\n\r\n    private resetData() {\r\n        this.chart.data!.labels = [];\r\n        this.chart.data!.datasets!.forEach((dataset) => {\r\n            dataset!.data = [];\r\n        });\r\n        this.chart.update();\r\n        this.tbody.innerText = \"\";\r\n        this.seconds = 0;\r\n    }\r\n\r\n    private sendAndReceive() {\r\n\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.onerror = (e) => { console.log(\"Fehler beim XMLHttpRequest!\"); };\r\n        xhr.open(\"GET\", \"/adcexperiment\", true);\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.onload = (e) => {\r\n            let Values: number[]=[0,0,0,0];\r\n            let arrayBuffer = xhr.response; // Note: not oReq.responseText\r\n            if (arrayBuffer || arrayBuffer.byteLength == 4 + 4 + 4 + 4) {\r\n                let ctx = new SerializeContext(arrayBuffer);\r\n                Values[0] = ctx.readF32();\r\n                Values[1] = ctx.readF32();\r\n                Values[2] = ctx.readF32();\r\n                Values[3] = ctx.readF32();\r\n            }\r\n            let now = new Date(Date.now());\r\n\r\n            if (this.recording) {\r\n                let tr = $.HtmlAsFirstChild(this.tbody, \"tr\", []);\r\n                for (let i = 0; i < 6; i++) {\r\n                    $.Html(tr, \"td\", [], [], this.tfirstRow.children[i].textContent!);\r\n                }\r\n                if (this.counter >= CHART_EACH_INTERVAL) {\r\n                    if (this.chart.data!.labels!.length > 100) {\r\n                        this.chart.data!.labels?.shift();\r\n                        this.chart.data!.datasets!.forEach((dataset) => {\r\n                            dataset!.data!.shift();\r\n                        });\r\n                    }\r\n                    this.chart.data!.labels!.push(now.toLocaleTimeString(\"de-DE\"));\r\n                    this.chart.data?.datasets![0].data?.push(Values[0]);\r\n                    this.chart.data?.datasets![1].data?.push(Values[1]);\r\n                    this.chart.data?.datasets![2].data?.push(Values[2]);\r\n                    this.chart.data?.datasets![3].data?.push(Values[3]);\r\n                    this.chart.update();\r\n                    this.counter = 0;\r\n                }\r\n                this.counter++;\r\n                this.seconds++;\r\n            }\r\n            this.tfirstRow.children[0].textContent = now.toLocaleTimeString(\"de-DE\");\r\n            this.tfirstRow.children[1].textContent = DE_de.format(this.seconds);\r\n            this.tfirstRow.children[2].textContent = DE_de.format(Values[0]);\r\n            this.tfirstRow.children[3].textContent = DE_de.format(Values[1]);\r\n            this.tfirstRow.children[4].textContent = DE_de.format(Values[2]);\r\n            this.tfirstRow.children[5].textContent = DE_de.format(Values[3]);\r\n        };\r\n        xhr.send();\r\n    }\r\n\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n        this.butRecord = <HTMLButtonElement>document.getElementById(\"adcexperiment_butRecord\")!;\r\n        this.butStop = <HTMLButtonElement>document.getElementById(\"adcexperiment_butStop\")!;\r\n        this.butStop.hidden = true;\r\n        this.butDelete = <HTMLButtonElement>document.getElementById(\"adcexperiment_butDelete\")!;\r\n        this.tbody = <HTMLTableSectionElement>document.getElementById(\"adcexperiment_tabBody\")!;\r\n        this.tfirstRow = <HTMLTableRowElement>document.getElementById(\"adcexperiment_tabFirstRow\")!;\r\n\r\n        let ctx = <HTMLCanvasElement>document.getElementById('adcexperiment_chart')!;\r\n        this.chart = new Chart(ctx,{\r\n            type: 'line',\r\n            data: {\r\n                labels: [],\r\n                datasets: [\r\n                    {\r\n                        label: \"Input 0 [V]\",\r\n                        data: [],\r\n                        backgroundColor: \"red\",\r\n                        borderColor: \"red\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Input 1 [V]\",\r\n                        data: [],\r\n                        backgroundColor: \"green\",\r\n                        borderColor: \"green\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Input 2 [V]\",\r\n                        data: [],\r\n                        backgroundColor: \"blue\",\r\n                        borderColor: \"blue\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Input 3 [V]\",\r\n                        data: [],\r\n                        backgroundColor: \"grey\",\r\n                        borderColor: \"grey\",\r\n                        fill: false,\r\n                    },\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    } \r\n                }\r\n            }\r\n        });\r\n\r\n        this.butStop.onclick = (e) => {\r\n            this.butStop.hidden = true;\r\n            this.butRecord.hidden = false;\r\n            this.recording = false;\r\n        };\r\n\r\n        this.butRecord.onclick = (e) => {\r\n            this.butRecord.hidden = true;\r\n            this.butStop.hidden = false;\r\n            this.recording = true;\r\n        };\r\n\r\n        this.butDelete.onclick = (e) => {\r\n            this.resetData();\r\n        };\r\n    }\r\n}\r\n","import { $ } from \"./utils\";\r\nimport { Chart} from 'chart.js';\r\nimport { ScreenController } from \"./ScreenController\";\r\nimport { AppManagement } from \"./AppManagement\";\r\nimport { SerializeContext } from \"./flowchart/SerializeContext\";\r\n\r\nconst DE_de = new Intl.NumberFormat('de-DE');\r\nconst CHART_EACH_INTERVAL = 2;\r\n\r\nexport class AirspeedExperimentController extends ScreenController {\r\n    private butRecord: HTMLButtonElement;\r\n    private butStop: HTMLButtonElement;\r\n    private butDelete: HTMLButtonElement;\r\n    private tbody: HTMLTableSectionElement;\r\n    private tfirstRow: HTMLTableRowElement;\r\n    private inputSetpointFan: HTMLInputElement;\r\n    private inputSetpointAirspeed: HTMLInputElement;\r\n    private inputServoCL: HTMLInputElement;\r\n    private inputServoOL: HTMLInputElement;\r\n    private inputKP: HTMLInputElement;\r\n    private inputKI: HTMLInputElement;\r\n    private inputKD: HTMLInputElement;\r\n    private timer: number | undefined;\r\n    private chart: Chart;\r\n    private counter = 10 ^ 6;\r\n    private mode: number = 0;\r\n    private seconds = 0;\r\n\r\n    private recording = false;\r\n\r\n    public onFirstStart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onRestart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onStop(): void {\r\n        window.clearInterval(this.timer);\r\n        this.butStop.hidden = true;\r\n        this.butRecord.hidden = false;\r\n        this.counter = 10 ^ 6;\r\n    }\r\n    public onCreate() {\r\n        this.resetData();\r\n\r\n    }\r\n\r\n    private resetData() {\r\n        this.chart.data!.labels = [];\r\n        this.chart.data!.datasets!.forEach((dataset) => {\r\n            dataset!.data = [];\r\n        });\r\n        this.chart.update();\r\n        this.tbody.innerText = \"\";\r\n        this.seconds = 0;\r\n    }\r\n\r\n\r\n    private onModeChange(newMode: number) {\r\n        switch (newMode) {\r\n            case 0:\r\n                document.querySelectorAll('.airspeedexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                document.querySelectorAll('.airspeedexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                break;\r\n            case 1:\r\n                document.querySelectorAll('.airspeedexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                document.querySelectorAll('.airspeedexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"inline-block\";\r\n                });\r\n                break;\r\n            case 2:\r\n                document.querySelectorAll('.airspeedexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"inline-block\";\r\n                });\r\n                document.querySelectorAll('.airspeedexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                break;\r\n        }\r\n        this.mode = newMode;\r\n    }\r\n\r\n    private sendAndReceive() {\r\n        let buffer = new ArrayBuffer(256);\r\n        let ctx = new SerializeContext(buffer);\r\n        ctx.writeU32(this.mode);\r\n        if (this.mode == 0) {\r\n            ctx.writeF32(0);\r\n            ctx.writeF32(0);\r\n        } else if (this.mode == 1) {\r\n            ctx.writeF32(this.inputSetpointFan.valueAsNumber);\r\n            ctx.writeF32(this.inputServoOL.valueAsNumber);\r\n        }\r\n        else {\r\n            ctx.writeF32(this.inputSetpointAirspeed.valueAsNumber);\r\n            ctx.writeF32(this.inputServoCL.valueAsNumber);\r\n        }\r\n        ctx.writeF32(this.inputKP.valueAsNumber);\r\n        ctx.writeF32(this.inputKI.valueAsNumber);\r\n        ctx.writeF32(this.inputKD.valueAsNumber);\r\n\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.onerror = (e) => { console.log(\"Fehler beim XMLHttpRequest!\"); };\r\n        xhr.open(\"PUT\", \"/airspeedexperiment\", true);\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.onload = (e) => {\r\n            let SetpointAirspeed: number, Fan: number, Servo: number, ActualAirspeed: number;\r\n            let arrayBuffer = xhr.response; // Note: not oReq.responseText\r\n            if (!arrayBuffer || arrayBuffer.byteLength != 4 + 4 + 4 + 4) {\r\n                console.error(\"! arrayBuffer || arrayBuffer.byteLength!=4+4+4+4\");\r\n                SetpointAirspeed = 0;\r\n                Fan = 0;\r\n                Servo = 0;\r\n                ActualAirspeed = 20 + (-5 + 10 * Math.random());\r\n            }\r\n            else {\r\n                let ctx = new SerializeContext(arrayBuffer);\r\n                SetpointAirspeed = ctx.readF32();\r\n                Fan = ctx.readF32();\r\n                Servo = ctx.readF32();\r\n                ActualAirspeed = ctx.readF32();\r\n            }\r\n            let now = new Date(Date.now());\r\n\r\n            if (this.recording) {\r\n                let tr = $.HtmlAsFirstChild(this.tbody, \"tr\", []);\r\n                for (let i = 0; i < 6; i++) {\r\n                    $.Html(tr, \"td\", [], [], this.tfirstRow.children[i].textContent!);\r\n                }\r\n                if (this.counter >= CHART_EACH_INTERVAL) {\r\n                    if (this.chart.data!.labels!.length > 100) {\r\n                        this.chart.data!.labels?.shift();\r\n                        this.chart.data!.datasets!.forEach((dataset) => {\r\n                            dataset!.data!.shift();\r\n                        });\r\n                    }\r\n                    this.chart.data!.labels!.push(now.toLocaleTimeString(\"de-DE\"));\r\n                    this.chart.data?.datasets![0].data?.push(SetpointAirspeed);\r\n                    this.chart.data?.datasets![1].data?.push(ActualAirspeed);\r\n                    this.chart.data?.datasets![2].data?.push(Fan);\r\n                    this.chart.data?.datasets![3].data?.push(Servo);\r\n                    this.chart.update();\r\n                    this.counter = 0;\r\n                }\r\n                this.counter++;\r\n                this.seconds++;\r\n            }\r\n            this.tfirstRow.children[0].textContent = now.toLocaleTimeString(\"de-DE\");\r\n            this.tfirstRow.children[1].textContent = DE_de.format(this.seconds);\r\n            this.tfirstRow.children[2].textContent = DE_de.format(SetpointAirspeed);\r\n            this.tfirstRow.children[3].textContent = DE_de.format(ActualAirspeed);\r\n            this.tfirstRow.children[4].textContent = DE_de.format(Fan);\r\n            this.tfirstRow.children[5].textContent = DE_de.format(Servo);\r\n        };\r\n        xhr.send(ctx.getResult());\r\n    }\r\n\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n        this.butRecord = <HTMLButtonElement>document.getElementById(\"airspeedexperiment_butRecord\")!;\r\n        this.butStop = <HTMLButtonElement>document.getElementById(\"airspeedexperiment_butStop\")!;\r\n        this.butStop.hidden = true;\r\n        this.butDelete = <HTMLButtonElement>document.getElementById(\"airspeedexperiment_butDelete\")!;\r\n        this.tbody = <HTMLTableSectionElement>document.getElementById(\"airspeedexperiment_tabBody\")!;\r\n        this.tfirstRow = <HTMLTableRowElement>document.getElementById(\"airspeedexperiment_tabFirstRow\")!;\r\n        this.inputSetpointFan = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpSetpointFan\");\r\n        this.inputServoOL = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpFanOL\")!;\r\n        this.inputSetpointAirspeed = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpSetpointAirspeed\");\r\n        this.inputServoCL = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpFanCL\")!;\r\n\r\n        this.inputKP = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpKP\")!;\r\n        this.inputKI = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpKI\")!;\r\n        this.inputKD = <HTMLInputElement>document.getElementById(\"airspeedexperiment_inpKD\")!;\r\n\r\n        this.onModeChange(0);\r\n\r\n        let ctx = <HTMLCanvasElement>document.getElementById('airspeedexperiment_chart')!;\r\n        this.chart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: [],\r\n                datasets: [\r\n                    {\r\n                        label: \"Setpoint Airspeed [m/s]\",\r\n                        data: [],\r\n                        backgroundColor: \"red\",\r\n                        borderColor: \"red\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Actual Airspeed [m/s]\",\r\n                        data: [],\r\n                        backgroundColor: \"green\",\r\n                        borderColor: \"green\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Fan Power [%]\",\r\n                        data: [],\r\n                        backgroundColor: \"blue\",\r\n                        borderColor: \"blue\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Servo Position [deg]\",\r\n                        data: [],\r\n                        backgroundColor: \"grey\",\r\n                        borderColor: \"grey\",\r\n                        fill: false,\r\n                    },\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    } \r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        document.querySelectorAll('input[name=\"airspeedexperiment_mode\"]').forEach((v, k) => {\r\n            let inp = <HTMLInputElement>v;\r\n            inp.onclick = (e) => {\r\n                let num = parseInt(inp.value);\r\n                if (this.mode != num)\r\n                    this.onModeChange(num);\r\n            };\r\n        });\r\n\r\n        let setBubble = (range: HTMLInputElement, bubble: HTMLOutputElement) => {\r\n            let val = range.valueAsNumber;\r\n            let min = range.min ? parseInt(range.min) : 0;\r\n            let max = range.max ? parseInt(range.max) : 100;\r\n            let newVal = ((val - min) * 100) / (max - min);\r\n            bubble.innerHTML = \"\" + val;\r\n\r\n            // Sorta magic numbers based on size of the native UI thumb\r\n            bubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n        };\r\n\r\n        document.querySelectorAll(\".range-wrap.airspeedexperiment\").forEach(wrap => {\r\n            let range = <HTMLInputElement>wrap.querySelector(\"input[type='range']\")!;\r\n            let bubble = <HTMLOutputElement>wrap.querySelector(\"output.bubble\")!;\r\n            range.oninput = (e) => setBubble(range, bubble);\r\n            setBubble(range, bubble);\r\n        });\r\n\r\n\r\n        this.butStop.onclick = (e) => {\r\n            this.butStop.hidden = true;\r\n            this.butRecord.hidden = false;\r\n            this.recording = false;\r\n        };\r\n\r\n        this.butRecord.onclick = (e) => {\r\n            this.butRecord.hidden = true;\r\n            this.butStop.hidden = false;\r\n            this.recording = true;\r\n        };\r\n\r\n        this.butDelete.onclick = (e) => {\r\n            this.resetData();\r\n        };\r\n    }\r\n}\r\n","import { HeaterExperimentController } from \"./HeaterExperimentController\";\r\nimport { ScreenController, ControllerState } from \"./ScreenController\";\r\nimport { DevelopCFCController } from \"./DevelopCFCController\";\r\nimport { DialogController } from \"./DialogController\";\r\nimport { AppManagement } from \"./AppManagement\";\r\nimport { ADCExperimentController } from \"./ADCExperimentController\";\r\nimport { AirspeedExperimentController } from \"./AirspeedExperimentController\";\r\nimport {FFTExperimentController} from \"./FFTExperimentController\";\r\n\r\nclass DashboardController extends ScreenController {\r\n    public onFirstStart(): void { }\r\n    public onRestart(): void { }\r\n    public onStop(): void { }\r\n    public onCreate() { }\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n    }\r\n\r\n}\r\n\r\nclass ReportsController extends ScreenController {\r\n    public onFirstStart(): void { }\r\n    public onRestart(): void { }\r\n    public onStop(): void { }\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n    }\r\n    public onCreate() {\r\n        return;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nclass AppController implements AppManagement {\r\n\r\n    private stateDiv: HTMLDivElement;\r\n    private activeControllerIndex: number;\r\n    private screenControllers: ScreenController[];\r\n    private dialogController:DialogController;\r\n\r\n    public DialogController() { return this.dialogController; };\r\n\r\n\r\n\r\n    constructor() {\r\n        this.stateDiv = <HTMLDivElement>document.getElementById(\"spnConnectionState\")!;\r\n        this.screenControllers = [];\r\n        this.activeControllerIndex = 0;\r\n        this.dialogController=new DialogController(this);\r\n    }\r\n\r\n    private SetApplicationState(state: string) {\r\n        this.stateDiv.innerHTML = state;\r\n\r\n    }\r\n\r\n    private setActiveScreen(newIndex: number) {\r\n        this.screenControllers.forEach((controller, i) => {\r\n            if (i == newIndex) {\r\n                controller.showDIV();\r\n                if (controller.State == ControllerState.CREATED) {\r\n                    controller.onFirstStart();\r\n                    controller.State = ControllerState.STARTED;\r\n                }\r\n                else {\r\n                    controller.onRestart();\r\n                    controller.State = ControllerState.STARTED;\r\n                }\r\n            } else {\r\n                controller.hideDIV();\r\n                if (controller.State == ControllerState.STARTED) {\r\n                    controller.onStop();\r\n                    controller.State = ControllerState.STOPPED;\r\n                }\r\n            }\r\n        });\r\n        this.activeControllerIndex = newIndex;\r\n    }\r\n\r\n    public startup() {\r\n        this.dialogController.init();\r\n        this.screenControllers.push(new DashboardController(this, <HTMLDivElement>document.getElementById(\"screen_dashboard\")));\r\n        this.screenControllers.push(new DevelopCFCController(this, <HTMLDivElement>document.getElementById(\"screen_develop\")));\r\n        this.screenControllers.push(new ReportsController(this, <HTMLDivElement>document.getElementById(\"screen_reports\")));\r\n        this.screenControllers.push(new HeaterExperimentController(this, <HTMLDivElement>document.getElementById(\"screen_heaterexperiment\")));\r\n        this.screenControllers.push(new AirspeedExperimentController(this, <HTMLDivElement>document.getElementById(\"screen_airspeedexperiment\")));\r\n        this.screenControllers.push(new ADCExperimentController(this, <HTMLDivElement>document.getElementById(\"screen_adcexperiment\")));\r\n        this.screenControllers.push(new FFTExperimentController(this, <HTMLDivElement>document.getElementById(\"screen_fftexperiment\")));\r\n        this.screenControllers.forEach((sc) => sc.onCreate());\r\n\r\n        this.setActiveScreen(1);\r\n        let id2index = new Map<string, number>();\r\n        this.screenControllers.forEach((value, index) => { id2index.set(\"show_\" + value.ElementId, index) })\r\n        document.querySelectorAll<HTMLAnchorElement>(\"nav a\").forEach((a: HTMLAnchorElement) => {\r\n            let id = a.id;\r\n            let index = id2index.get(a.id) || 0;\r\n            a.onclick = (e) => this.setActiveScreen(index);\r\n        });\r\n\r\n        /*\r\n        this.SetApplicationState(\"WebSocket is not connected\");\r\n        let websocket = new WebSocket('ws://' + location.hostname + '/w');\r\n        websocket.onopen = e => {\r\n            this.SetApplicationState('WebSocket connection opened');\r\n            document.getElementById(\"test\")!.innerHTML = \"WebSocket is connected!\";\r\n        }\r\n        websocket.onmessage = (evt) => {\r\n            var msg = evt.data;\r\n            let value: string;\r\n            switch (msg.charAt(0)) {\r\n                case 'L':\r\n                    console.log(msg);\r\n                    value = msg.replace(/[^0-9\\.]/g, '');\r\n                    switch (value) {\r\n                        case \"0\": document.getElementById(\"led1\")!.style.backgroundColor = \"black\"; break;\r\n                        case \"1\": document.getElementById(\"led1\")!.style.backgroundColor = \"green\"; break;\r\n                        case \"2\": document.getElementById(\"led2\")!.style.backgroundColor = \"black\"; break;\r\n                        case \"3\": document.getElementById(\"led2\")!.style.backgroundColor = \"green\"; break;\r\n                    }\r\n                    console.log(\"Led = \" + value);\r\n                    break;\r\n                default:\r\n                    let p = JSON.parse(evt.data);\r\n                    document.getElementById(\"td_myName\")!.innerText = p.d.myName;\r\n                    document.getElementById(\"td_temperature\")!.innerText = p.d.temperature;\r\n                    document.getElementById(\"td_humidity\")!.innerText = p.d.humidity;\r\n                    document.getElementById(\"td_heap\")!.innerText = p.info.heap;\r\n                    document.getElementById(\"td_time\")!.innerText = p.info.time;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        websocket.onclose = (e) => {\r\n            console.log('Websocket connection closed due to '+e.reason);\r\n            this.SetApplicationState('Websocket connection closed due to '+e.reason);\r\n        }\r\n\r\n        websocket.onerror = (evt) => {\r\n            console.log('Websocket error: ' + evt.returnValue);\r\n            this.SetApplicationState(\"WebSocket error!\" + evt.returnValue);\r\n        }\r\n\r\n        document.querySelectorAll<HTMLButtonElement>(\"#pButtons button\").forEach((b: HTMLButtonElement) => {\r\n            b.onclick = (e: MouseEvent) => {\r\n                websocket.send(\"L\" + b.dataset.rel);\r\n            };\r\n        });\r\n*/\r\n    }\r\n}\r\n\r\nlet app: AppController;\r\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\r\n    app = new AppController();\r\n    app.startup();\r\n});\r\n\r\n\r\n","import { AppManagement } from \"./AppManagement\";\r\nimport { Flowchart, FlowchartData, FlowchartOptions } from \"./flowchart/Flowchart\";\r\nimport { ScreenController } from \"./ScreenController\";\r\n\r\n\r\nexport class DevelopCFCController extends ScreenController {\r\n    private fc: Flowchart;\r\n    private timer: number | undefined;\r\n    onFirstStart(): void {\r\n        this.timer = window.setInterval(() => { this.fc.triggerDebug(); }, 1000);\r\n        this.fc.onFirstStart();\r\n    }\r\n    public onRestart(): void {\r\n        this.timer = window.setInterval(() => { this.fc.triggerDebug(); }, 1000);\r\n    }\r\n    public onStop(): void {\r\n        window.clearInterval(this.timer);\r\n    }\r\n    public onCreate() { }\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n        let data: FlowchartData = {\r\n            operators: [\r\n                {\r\n                    index: 0,\r\n                    caption: \"RedButton\",\r\n                    globalTypeIndex: 30,\r\n                    posX: 10,\r\n                    posY: 10,\r\n                    configurationData: null,\r\n                },\r\n                {\r\n                    index: 1,\r\n                    caption: \"GreenButton\",\r\n                    globalTypeIndex: 33,\r\n                    posX: 10,\r\n                    posY: 150,\r\n                    configurationData: null,\r\n                },\r\n                {\r\n                    index: 2,\r\n                    caption: \"AND\",\r\n                    globalTypeIndex: 1,\r\n                    posX: 250,\r\n                    posY: 10,\r\n                    configurationData: null,\r\n                },\r\n                {\r\n                    index: 3,\r\n                    caption: \"RedLed\",\r\n                    globalTypeIndex: 46,\r\n                    posX: 500,\r\n                    posY: 10,\r\n                    configurationData: null,\r\n                },\r\n            ],\r\n            links: [\r\n                {\r\n                    color: \"black\",\r\n                    fromOperatorIndex: 0,\r\n                    fromOutput: 0,\r\n                    toOperatorIndex: 2,\r\n                    toInput: 0\r\n                },\r\n                {\r\n                    color: \"black\",\r\n                    fromOperatorIndex: 1,\r\n                    fromOutput: 0,\r\n                    toOperatorIndex: 2,\r\n                    toInput: 1\r\n                },\r\n                {\r\n                    color: \"black\",\r\n                    fromOperatorIndex: 2,\r\n                    fromOutput: 0,\r\n                    toOperatorIndex: 3,\r\n                    toInput: 0\r\n                },\r\n            ]\r\n        };\r\n        let options = new FlowchartOptions();\r\n        options.data = data;\r\n        this.fc = new Flowchart(this.appManagement, this.div, options);\r\n    }\r\n\r\n\r\n}\r\n","import { AppManagement } from \"./AppManagement\";\r\nimport {$} from \"./utils\"\r\nexport class DialogController {\r\n    \r\n\r\n    private dialog = <HTMLDialogElement>document.getElementById('dialog')!;\r\n    private dialogHeading = <HTMLHeadingElement>document.getElementById('dialog-heading')!;\r\n    private dialogBody = <HTMLDivElement>document.getElementById('dialog-body')!;\r\n    private dialogFooter = <HTMLElement>document.getElementById('dialog-footer')!;\r\n\r\n    constructor(private appManagement:AppManagement) {\r\n        \r\n    }\r\n    \r\n    public init() {\r\n\r\n        document.getElementById('dialog-close')!.onclick = (e) => {\r\n            //this.dialog.close(\"cancelled\");\r\n        }\r\n        //this.dialog.oncancel = (e) => {\r\n            //this.dialog.close(\"cancelled\");\r\n        //}\r\n\r\n        // close when clicking on backdrop\r\n        this.dialog.onclick = (event) => {\r\n            if (event.target === this.dialog) {\r\n                //this.dialog.close('cancelled');\r\n            }\r\n        }\r\n    }\r\n\r\n    public showEnterFilenameDialog(priority: number, messageText: string, handler: (filename: string) => void) {\r\n        this.prepareDialog();\r\n        this.dialogHeading.innerText=\"Enter Filename\";\r\n        $.Html(this.dialogBody, \"p\", [], [], messageText);\r\n        let fileInput= <HTMLInputElement>$.Html(this.dialogBody, \"input\", [\"pattern\", \"^[A-Za-z0-9]{1,10}$\"], []);\r\n        this.dialogFooter.innerText=\"\";\r\n        $.Html(this.dialogFooter, \"button\", [], [], \"OK\").onclick=(e)=>{\r\n            //this.dialog.close('OK');\r\n            if(handler!=null) handler(fileInput.value);\r\n        };\r\n       // this.dialog.showModal();\r\n    }\r\n\r\n    public showOKDialog(priority: number, messageText:string, handler: ((a:string)=>any)|null) {\r\n        this.prepareDialog();\r\n        this.dialogHeading.innerText=\"Message\";\r\n        this.dialogBody.innerText=messageText;\r\n        this.dialogFooter.innerText=\"\";\r\n        $.Html(this.dialogFooter, \"button\", [\"type\", \"button\"], [], \"OK\").onclick=(e)=>{\r\n            //this.dialog.close('cancelled');\r\n            if(handler!=null) handler(\"OK\");\r\n        };\r\n        //this.dialog.showModal();\r\n    }\r\n\r\n    private prepareDialog()\r\n    {\r\n        this.dialogHeading.innerText=\"\";\r\n        this.dialogBody.innerText=\"\";\r\n        this.dialogFooter.innerText=\"\";\r\n    }\r\n\r\n    public showFilelist(priority: number, files:string[], openhandler: (filename:string)=>any, deletehandler: (filename:string)=>any) {\r\n\r\n        this.prepareDialog();\r\n        this.dialogHeading.innerText=\"Please select a file to load\"\r\n        $.Html(this.dialogFooter, \"button\", [\"type\", \"button\"], [], \"Cancel\").onclick=(e)=>{\r\n            //this.dialog.close(\"cancelled\");\r\n        };\r\n        let table = <HTMLTableElement>$.Html(this.dialogBody, \"table\", [], []);\r\n        let thead = <HTMLTableSectionElement>$.Html(table, \"thead\", [],[]);\r\n        let tr_head = $.Html(thead, \"tr\", [], []);\r\n        $.Html(tr_head, \"th\", [], [], \"File Name\");\r\n        $.Html(tr_head, \"th\", [], [], \"File Operation\");\r\n        let tbody= <HTMLTableSectionElement>$.Html(table, \"tbody\", [],[]);\r\n        for(let filename of files){\r\n            if(!filename.endsWith(\".json\")) continue;\r\n            filename=filename.substring(0, filename.length-5);\r\n            let tr = $.Html(tbody, \"tr\", [], []);\r\n            $.Html(tr, \"td\", [], [], filename);\r\n            let operationTd= $.Html(tr, \"td\", [], []);\r\n            let openButton = $.Html(operationTd, \"button\", [\"type\", \"button\"], []);\r\n            $.SvgIcon(openButton, \"folder-open\");\r\n            openButton.onclick=(e)=>{\r\n                //this.dialog.close(\"opened\");\r\n                openhandler(filename);\r\n                \r\n            };\r\n            let deleteButton=$.Html(operationTd, \"button\", [\"type\", \"button\"], [], );\r\n            $.SvgIcon(deleteButton, \"bin2\");\r\n            deleteButton.onclick=(e)=>{\r\n                //this.dialog.close(\"deleted\");\r\n                deletehandler(filename);\r\n            }\r\n        };\r\n        //this.dialog.showModal();\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}","import { $ } from \"./utils\";\r\nimport { Chart, ChartDataset} from 'chart.js';\r\nimport { ScreenController } from \"./ScreenController\";\r\nimport { AppManagement } from \"./AppManagement\";\r\nimport { SerializeContext } from \"./flowchart/SerializeContext\";\r\n//!!!Applied some adoptions on lower numbers to avoid strange rounding effects\r\nconst  FREQUENCIES:number[]=[11,21,31,42,53,64,75,97,118,139,161,183,205,227,258,291,323,355,388,431,474,517,560,614,668,721,786,851,915,991,1066,1152,1238,1335,1443,1550,1669,1798,1938,2089,2239,2401,2584,2778,2982,3198,3435,3682,3951,4231,4533,4856,5200,5566,5965,6385,6837,7321,7838,8398,8990,9625,10304,11025];\r\nconst INTERVAL=2000;\r\nconst ZEROS = Array.from(Array(64).keys());\r\n\r\nexport class FFTExperimentController extends ScreenController {\r\n    private butRecord: HTMLButtonElement;\r\n    private butStop: HTMLButtonElement;\r\n    private butSave: HTMLButtonElement;\r\n    private butDelete: HTMLButtonElement;\r\n    private inputFan: HTMLInputElement;\r\n    private tbody: HTMLTableSectionElement;\r\n    private timer: number | undefined;\r\n    private chart: Chart;\r\n    private COLORS = [\r\n        '#4dc9f6',\r\n        '#f67019',\r\n        '#f53794',\r\n        '#537bc4',\r\n        '#acc236',\r\n        '#166a8f',\r\n        '#00a950',\r\n        '#58595b',\r\n        '#8549ba'\r\n      ];\r\n\r\n    private recording = false;\r\n   \r\n\r\n    public onFirstStart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, INTERVAL);\r\n    }\r\n    public onRestart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, INTERVAL);\r\n    }\r\n    public onStop(): void {\r\n        window.clearInterval(this.timer);\r\n        this.butStop.hidden = true;\r\n        this.butRecord.hidden = false;\r\n    }\r\n    public onCreate() {\r\n        //this.resetData();\r\n    }\r\n\r\n    private resetData() {\r\n        this.chart.data!.labels = [];\r\n        this.chart.data!.datasets!.forEach((dataset) => {\r\n            dataset!.data = [];\r\n        });\r\n        this.chart.update();\r\n        this.tbody.innerText = \"\";\r\n    }\r\n\r\n    private color(index:number) {\r\n        return this.COLORS[index % this.COLORS.length];\r\n    }\r\n      \r\n\r\n    private sendAndReceive() {\r\n        let buffer = new ArrayBuffer(256);\r\n        let ctx = new SerializeContext(buffer);\r\n        ctx.writeF32(this.inputFan.valueAsNumber);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n        ctx.writeF32(0);\r\n\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.onerror = (e) => { console.log(\"Fehler beim XMLHttpRequest!\"); };\r\n        xhr.open(\"PUT\", \"/fftexperiment\", true);\r\n        xhr.responseType = \"arraybuffer\";\r\n        \r\n        xhr.onload = (e) => {\r\n            let data:number[] = [];\r\n            let arrayBuffer = xhr.response; // Note: not oReq.responseText\r\n            if (!arrayBuffer || arrayBuffer.byteLength != 256) {\r\n                console.error(\"!arrayBuffer || arrayBuffer.byteLength != 256 -->providing fake data\");\r\n                for(let i =0;i<64;i++){\r\n                    data.push(5 + 5 * Math.random());\r\n                }\r\n\r\n            }\r\n            else {\r\n                let ctx = new SerializeContext(arrayBuffer);\r\n                for(let i =0;i<64;i++){\r\n                    data.push(Math.log10(ctx.readF32()));\r\n                }\r\n            }\r\n            if (this.recording) {\r\n                this.chart.data.datasets[0].data=data;\r\n                this.chart.update();\r\n            }\r\n        };\r\n        xhr.send(ctx.getResult());\r\n    }\r\n\r\n\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n        this.butRecord = <HTMLButtonElement>document.getElementById(\"fftexperiment_butRecord\")!;\r\n        this.butStop = <HTMLButtonElement>document.getElementById(\"fftexperiment_butStop\")!;\r\n        this.butSave = <HTMLButtonElement>document.getElementById(\"fftexperiment_butSave\")!;\r\n        this.butDelete = <HTMLButtonElement>document.getElementById(\"fftexperiment_butDelete\")!;\r\n        this.inputFan = <HTMLInputElement>document.getElementById(\"fftexperiment_inpFan\")!;\r\n        this.butStop.hidden = true;\r\n        this.tbody = <HTMLTableSectionElement>document.getElementById(\"adcexperiment_tabBody\")!;\r\n       \r\n\r\n        let ctx = <HTMLCanvasElement>document.getElementById('fftexperiment_chart')!;\r\n        this.chart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: FREQUENCIES,\r\n                datasets: []\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true,\r\n                        max:10\r\n                    } \r\n                }\r\n            }\r\n        });\r\n        this.chart.update();\r\n        let setBubble = (range: HTMLInputElement, bubble: HTMLOutputElement) => {\r\n            let val = range.valueAsNumber;\r\n            let min = range.min ? parseInt(range.min) : 0;\r\n            let max = range.max ? parseInt(range.max) : 100;\r\n            let newVal = ((val - min) * 100) / (max - min);\r\n            bubble.innerHTML = \"\" + val;\r\n\r\n            // Sorta magic numbers based on size of the native UI thumb\r\n            bubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n        };\r\n\r\n        document.querySelectorAll(\".range-wrap.fftexperiment\").forEach(wrap => {\r\n            let range = <HTMLInputElement>wrap.querySelector(\"input[type='range']\")!;\r\n            let bubble = <HTMLOutputElement>wrap.querySelector(\"output.bubble\")!;\r\n            range.oninput = (e) => setBubble(range, bubble);\r\n            setBubble(range, bubble);\r\n        });\r\n\r\n        this.butStop.onclick = () => {\r\n            this.butStop.hidden = true;\r\n            this.butRecord.hidden = false;\r\n            this.recording = false;\r\n            this.chart.data.datasets.shift();\r\n            this.chart.update();\r\n        };\r\n\r\n        this.butRecord.onclick = () => {\r\n            this.butRecord.hidden = true;\r\n            this.butStop.hidden = false;\r\n            this.chart.data.datasets.unshift({\r\n                label: \"Magnitudes\",\r\n                data: ZEROS,\r\n                borderColor: this.color(0),\r\n                backgroundColor: this.color(0),\r\n            });\r\n            this.recording = true;\r\n            this.chart.update();\r\n        };\r\n        this.butSave.onclick = ()=>{\r\n            let now = new Date(Date.now());\r\n            let newDataset:ChartDataset={\r\n                label: \"Magnitudes saved \"+now.toLocaleTimeString(\"de-DE\"),\r\n                data: this.chart.data.datasets[0].data,\r\n                borderColor: this.color(this.chart.data.datasets.length),\r\n                backgroundColor: this.color(this.chart.data.datasets.length),\r\n            };\r\n            this.chart.data.datasets.splice(1,0,newDataset);\r\n            this.chart.update();\r\n        }\r\n        this.butDelete.onclick=()=>{\r\n            if(this.chart.data.datasets.length<2) return;\r\n            this.chart.data.datasets.pop();\r\n            this.chart.update();\r\n        }\r\n    }\r\n}\r\n","import { $ } from \"./utils\";\r\nimport { Chart} from 'chart.js';\r\nimport { ScreenController } from \"./ScreenController\";\r\nimport { AppManagement } from \"./AppManagement\";\r\nimport { SerializeContext } from \"./flowchart/SerializeContext\";\r\n\r\nexport let DE_de = new Intl.NumberFormat('de-DE');\r\nexport const CHART_EACH_INTERVAL = 2;\r\n\r\nexport class HeaterExperimentController extends ScreenController {\r\n    private butRecord: HTMLButtonElement;\r\n    private butStop: HTMLButtonElement;\r\n    private butDelete: HTMLButtonElement;\r\n    private tbody: HTMLTableSectionElement;\r\n    private tfirstRow: HTMLTableRowElement;\r\n    private inputSetpointHeater: HTMLInputElement;\r\n    private inputSetpointTemperature: HTMLInputElement;\r\n    private inputFanCL: HTMLInputElement;\r\n    private inputFanOL: HTMLInputElement;\r\n    private inputKP: HTMLInputElement;\r\n    private inputTN: HTMLInputElement;\r\n    private inputTV: HTMLInputElement;\r\n    private timer: number | undefined;\r\n    private chart: Chart;\r\n\r\n    private counter = 10 ^ 6;\r\n    private mode: number = 0;\r\n    private seconds = 0;\r\n\r\n    private recording = false;\r\n\r\n    public onFirstStart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onRestart(): void {\r\n        this.timer = window.setInterval(() => { this.sendAndReceive(); }, 1000);\r\n    }\r\n    public onStop(): void {\r\n        window.clearInterval(this.timer);\r\n        this.butStop.hidden = true;\r\n        this.butRecord.hidden = false;\r\n        this.counter = 10 ^ 6;\r\n    }\r\n    public onCreate() {\r\n        this.resetData();\r\n\r\n    }\r\n\r\n    private resetData() {\r\n        this.chart.data!.labels = [];\r\n        this.chart.data!.datasets!.forEach((dataset) => {\r\n            dataset!.data = [];\r\n        });\r\n        this.chart.update();\r\n        this.tbody.innerText = \"\";\r\n        this.seconds = 0;\r\n    }\r\n\r\n\r\n    private onModeChange(newMode: number) {\r\n        switch (newMode) {\r\n            case 0:\r\n                document.querySelectorAll('.heaterexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                document.querySelectorAll('.heaterexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                break;\r\n            case 1:\r\n                document.querySelectorAll('.heaterexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                document.querySelectorAll('.heaterexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"inline-block\";\r\n                });\r\n                break;\r\n            case 2:\r\n                document.querySelectorAll('.heaterexperiment_closedloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"inline-block\";\r\n                });\r\n                document.querySelectorAll('.heaterexperiment_openloopctrl').forEach((v, k) => {\r\n                    (<HTMLElement>v).style.display = \"none\";\r\n                });\r\n                break;\r\n        }\r\n        this.mode = newMode;\r\n    }\r\n\r\n    private sendAndReceive() {\r\n        let buffer = new ArrayBuffer(256);\r\n        let ctx = new SerializeContext(buffer);\r\n        ctx.writeU32(this.mode);\r\n        if (this.mode == 0) {\r\n            ctx.writeF32(0);\r\n            ctx.writeF32(0);\r\n        } else if (this.mode == 1) {\r\n            ctx.writeF32(this.inputSetpointHeater.valueAsNumber);\r\n            ctx.writeF32(this.inputFanOL.valueAsNumber);\r\n        }\r\n        else {\r\n            ctx.writeF32(this.inputSetpointTemperature.valueAsNumber);\r\n            ctx.writeF32(this.inputFanCL.valueAsNumber);\r\n        }\r\n        ctx.writeF32(this.inputKP.valueAsNumber);\r\n        ctx.writeF32(this.inputTN.valueAsNumber);\r\n        ctx.writeF32(this.inputTV.valueAsNumber);\r\n\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.onerror = (e) => { console.log(\"Fehler beim XMLHttpRequest!\"); };\r\n        xhr.open(\"PUT\", \"/heaterexperiment\", true);\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.onload = (e) => {\r\n            let SetpointTemperature: number, Heater: number, Fan: number, ActualTemperature: number;\r\n            let arrayBuffer = xhr.response; // Note: not oReq.responseText\r\n            if (!arrayBuffer || arrayBuffer.byteLength != 4 + 4 + 4 + 4) {\r\n                console.error(\"! arrayBuffer || arrayBuffer.byteLength!=4+4+4+4\");\r\n                SetpointTemperature = 0;\r\n                Heater = 0;\r\n                Fan = 0;\r\n                ActualTemperature = 20 + (-5 + 10 * Math.random());\r\n            }\r\n            else {\r\n                let ctx = new SerializeContext(arrayBuffer);\r\n                SetpointTemperature = ctx.readF32();\r\n                Heater = ctx.readF32();\r\n                Fan = ctx.readF32();\r\n                ActualTemperature = ctx.readF32();\r\n            }\r\n            let now = new Date(Date.now());\r\n\r\n            if (this.recording) {\r\n                let tr = $.HtmlAsFirstChild(this.tbody, \"tr\", []);\r\n                for (let i = 0; i < 6; i++) {\r\n                    $.Html(tr, \"td\", [], [], this.tfirstRow.children[i].textContent!);\r\n                }\r\n                if (this.counter >= CHART_EACH_INTERVAL) {\r\n                    if (this.chart.data!.labels!.length > 100) {\r\n                        this.chart.data!.labels?.shift();\r\n                        this.chart.data!.datasets!.forEach((dataset) => {\r\n                            dataset!.data!.shift();\r\n                        });\r\n                    }\r\n                    this.chart.data!.labels!.push(now.toLocaleTimeString(\"de-DE\"));\r\n                    this.chart.data?.datasets![0].data?.push(SetpointTemperature);\r\n                    this.chart.data?.datasets![1].data?.push(ActualTemperature);\r\n                    this.chart.data?.datasets![2].data?.push(Heater);\r\n                    this.chart.data?.datasets![3].data?.push(Fan);\r\n                    //this.setpointTemperatureValues.push(SetpointTemperature)\r\n                    //this.heaterValues.push(Heater);\r\n                    //this.fanValues.push(Fan);\r\n                    //this.actualTemperatureValues.push(ActualTemperature);\r\n                    this.chart.update();\r\n                    //FIXME this.chartData = {labels:this.dateValues, series: [this.setpointTemperatureValues, this.actualTemperatureValues, this.heaterValues, this.fanValues,],};\r\n                    //FIXME this.chart.update(this.chartData);\r\n                    this.counter = 0;\r\n                }\r\n                this.counter++;\r\n                this.seconds++;\r\n            }\r\n\r\n\r\n            this.tfirstRow.children[0].textContent = now.toLocaleTimeString(\"de-DE\");\r\n            this.tfirstRow.children[1].textContent = DE_de.format(this.seconds);\r\n            this.tfirstRow.children[2].textContent = DE_de.format(SetpointTemperature);\r\n            this.tfirstRow.children[3].textContent = DE_de.format(ActualTemperature);\r\n            this.tfirstRow.children[4].textContent = DE_de.format(Heater);\r\n            this.tfirstRow.children[5].textContent = DE_de.format(Fan);\r\n\r\n\r\n\r\n        };\r\n        xhr.send(ctx.getResult());\r\n    }\r\n\r\n    constructor(appManagement:AppManagement, div: HTMLDivElement) {\r\n        super(appManagement, div);\r\n        this.butRecord = <HTMLButtonElement>document.getElementById(\"heaterexperiment_butRecord\")!;\r\n        this.butStop = <HTMLButtonElement>document.getElementById(\"heaterexperiment_butStop\")!;\r\n        this.butStop.hidden = true;\r\n        this.butDelete = <HTMLButtonElement>document.getElementById(\"heaterexperiment_butDelete\")!;\r\n        this.tbody = <HTMLTableSectionElement>document.getElementById(\"heaterexperiment_tabBody\")!;\r\n        this.tfirstRow = <HTMLTableRowElement>document.getElementById(\"heaterexperiment_tabFirstRow\")!;\r\n        this.inputSetpointHeater = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpSetpointHeater\");\r\n        this.inputFanOL = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpFanOL\")!;\r\n        this.inputSetpointTemperature = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpSetpointTemperature\");\r\n        this.inputFanCL = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpFanCL\")!;\r\n\r\n        this.inputKP = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpKP\")!;\r\n        this.inputTN = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpTN\")!;\r\n        this.inputTV = <HTMLInputElement>document.getElementById(\"heaterexperiment_inpTV\")!;\r\n\r\n        this.onModeChange(0);\r\n\r\n        let ctx = <HTMLCanvasElement>document.getElementById('heaterexperiment_chart')!;\r\n        this.chart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: [],\r\n                datasets: [\r\n                    {\r\n                        label: \"Setpoint Temperature [°C]\",\r\n                        data: [],\r\n                        backgroundColor: \"red\",\r\n                        borderColor: \"red\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Actual Temperature [°C]\",\r\n                        data: [],\r\n                        backgroundColor: \"green\",\r\n                        borderColor: \"green\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Heater Power [%]\",\r\n                        data: [],\r\n                        backgroundColor: \"blue\",\r\n                        borderColor: \"blue\",\r\n                        fill: false,\r\n                    },\r\n                    {\r\n                        label: \"Fan Power [%]\",\r\n                        data: [],\r\n                        backgroundColor: \"grey\",\r\n                        borderColor: \"grey\",\r\n                        fill: false,\r\n                    },\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    } \r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        document.querySelectorAll('input[name=\"heaterexperiment_mode\"]').forEach((v, k) => {\r\n            let inp = <HTMLInputElement>v;\r\n            inp.onclick = (e) => {\r\n                let num = parseInt(inp.value);\r\n                if (this.mode != num)\r\n                    this.onModeChange(num);\r\n            };\r\n        });\r\n\r\n        let setBubble = (range: HTMLInputElement, bubble: HTMLOutputElement) => {\r\n            let val = range.valueAsNumber;\r\n            let min = range.min ? parseInt(range.min) : 0;\r\n            let max = range.max ? parseInt(range.max) : 100;\r\n            let newVal = ((val - min) * 100) / (max - min);\r\n            bubble.innerHTML = \"\" + val;\r\n\r\n            // Sorta magic numbers based on size of the native UI thumb\r\n            bubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n        };\r\n\r\n        document.querySelectorAll(\".range-wrap.heaterexperiment\").forEach(wrap => {\r\n            let range = <HTMLInputElement>wrap.querySelector(\"input[type='range']\")!;\r\n            let bubble = <HTMLOutputElement>wrap.querySelector(\"output.bubble\")!;\r\n            range.oninput = (e) => setBubble(range, bubble);\r\n            setBubble(range, bubble);\r\n        });\r\n\r\n\r\n        this.butStop.onclick = (e) => {\r\n            this.butStop.hidden = true;\r\n            this.butRecord.hidden = false;\r\n            this.recording = false;\r\n        };\r\n\r\n        this.butRecord.onclick = (e) => {\r\n            this.butRecord.hidden = true;\r\n            this.butStop.hidden = false;\r\n            this.recording = true;\r\n        };\r\n\r\n        this.butDelete.onclick = (e) => {\r\n            this.resetData();\r\n        };\r\n    }\r\n}\r\n","import { AppManagement } from \"./AppManagement\";\r\n\r\nexport enum ControllerState {\r\n    CREATED,\r\n    STARTED,\r\n    STOPPED,\r\n}\r\n\r\nexport abstract class ScreenController {\r\n    private state: ControllerState;\r\n    constructor(protected appManagement:AppManagement, protected div: HTMLDivElement) {\r\n        this.hideDIV();\r\n        this.state = ControllerState.CREATED;\r\n    }\r\n    get ElementId() { return this.div.id; }\r\n    get State() { return this.state; }\r\n    set State(value: ControllerState) { this.state = value; }\r\n    abstract onCreate(): void;\r\n    abstract onFirstStart(): void;\r\n    abstract onRestart(): void;\r\n    abstract onStop(): void;\r\n    public showDIV() {\r\n        this.div.style.display = \"block\";\r\n    }\r\n    public hideDIV() {\r\n        this.div.style.display = \"none\";\r\n    }\r\n}\r\n","import { ConnectorType, FlowchartInputConnector, FlowchartOutputConnector } from \"./FlowchartConnector\";\r\nimport { FlowchartCompiler, HashAndBufAndMaps, SortedOperatorsAndMaps } from \"./FlowchartCompiler\";\r\nimport { FlowchartLink } from \"./FlowchartLink\";\r\nimport { FlowchartOperator, PositionType, TypeInfo } from \"./FlowchartOperator\";\r\nimport * as operatorimpl from \"./FlowchartOperatorImpl\";\r\nimport { NodeWrapper, TopologicalSortDFS } from \"./TopologicalSorfDFS\";\r\nimport { Utils, $, KeyValueTuple } from \"../utils\";\r\nimport { AppManagement } from \"../AppManagement\";\r\nimport { SerializeContext } from \"./SerializeContext\";\r\nimport { SimulationManager } from \"./SimulationManager\";\r\n\r\nexport class FlowchartOptions {\r\n    canUserEditLinks: boolean = true;\r\n    canUserMoveOperators: boolean = true;\r\n    data?: FlowchartData = undefined;\r\n    distanceFromArrow: number = 3;\r\n    defaultOperatorClass: string = 'flowchart-default-operator';\r\n    defaultLinkColor: string = '#3366ff';\r\n    defaultSelectedLinkColor: string = 'black';\r\n    linkWidth: number = 10;\r\n    grid: number = 10;\r\n    multipleLinksOnOutput: boolean = true;\r\n    multipleLinksOnInput: boolean = false;\r\n    linkVerticalDecal: number = 0;\r\n    onOperatorSelect?: (operatorId: string) => boolean;\r\n    onOperatorUnselect?: () => boolean;\r\n    onOperatorMouseOver?: (operatorId: string) => boolean;\r\n    onOperatorMouseOut?: (operatorId: string) => boolean;\r\n    onLinkSelect?: (link: FlowchartLink) => boolean;\r\n    onLinkUnselect?: (link: FlowchartLink) => boolean;\r\n    onOperatorCreate?: (operatorId: string, operatorData: any, fullElement: boolean) => boolean;\r\n    onLinkCreate?: (linkId: string, linkData: any) => boolean;\r\n    onOperatorDelete?: (operatorId: string) => boolean;\r\n    onLinkDelete?: (linkId: string, forced: boolean) => boolean;\r\n    onOperatorMoved?: (operatorId: string, position: number) => void;\r\n    onAfterChange?: (changeType: any) => void;\r\n}\r\n\r\nexport interface FlowchartData {\r\n    operators: OperatorData[];\r\n    links: LinkData[];\r\n}\r\n\r\nexport interface OperatorData {\r\n    globalTypeIndex: number;\r\n    caption: string;\r\n    index: number;\r\n    posX: number;\r\n    posY: number;\r\n    configurationData: KeyValueTuple[] | null;\r\n}\r\n\r\n\r\n\r\nexport interface LinkData {\r\n    color: string;\r\n    fromOperatorIndex: number;\r\n    fromOutput: number;\r\n    toOperatorIndex: number;\r\n    toInput: number;\r\n}\r\n\r\nexport class Flowchart {\r\n    \r\n    private operatorRegistry:operatorimpl.OperatorRegistry;\r\n    private simulationManager?:SimulationManager|null;\r\n    private operators = new Map<number, FlowchartOperator>();\r\n    private links = new Map<number, FlowchartLink>();\r\n    public static readonly DATATYPE2COLOR = new Map([[ConnectorType.BOOLEAN, \"RED\"], [ConnectorType.COLOR, \"GREEN\"], [ConnectorType.FLOAT, \"BLUE\"], [ConnectorType.INTEGER, \"YELLOW\"], [ConnectorType.COLOR, \"PURPLE\"]]);\r\n    //Muss beim Löschen+Erzeugen von Operatoren+Links und bei Speichern von Properties zurückgesetzt werden\r\n    private currentDebugInfo:HashAndBufAndMaps|null=null;\r\n    private lastOutputConnectorClicked: FlowchartOutputConnector | null = null;\r\n    private selectedOperator: FlowchartOperator | null = null;\r\n    private selectedLink: FlowchartLink | null = null;\r\n    get SelectedLink() { return this.selectedLink };\r\n    get Options() { return this.options; }\r\n    \r\n    private positionRatio: number = 1;\r\n    get PositionRatio() { return this.positionRatio; }\r\n\r\n    private flowchartContainerSvgSvg: SVGSVGElement;\r\n    get Element() { return this.flowchartContainerSvgSvg; }\r\n    private linksLayer: SVGGElement;\r\n    get LinkLayer() { return this.linksLayer; }\r\n    private operatorsLayer: SVGGElement;\r\n    get OperatorsLayer() { return this.operatorsLayer; }\r\n    private operatorLibDiv: HTMLDivElement;\r\n    get ToolsLayer() { return this.operatorLibDiv; }\r\n    private tempLayer: SVGGElement;\r\n    private temporaryLink: SVGLineElement;\r\n    private temporaryLinkSnapped = false;\r\n    private propertyGridHtmlDiv: HTMLDivElement;\r\n\r\n    private markerArrow: SVGPathElement;\r\n    private markerCircle: SVGCircleElement;\r\n\r\n    public triggerDebug() {\r\n        if(this.currentDebugInfo==null) return;\r\n\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.onerror = (e) => { console.log(\"Fehler beim XMLHttpRequest!\"); };\r\n        xhr.open(\"GET\", \"/fbd\", true);\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.onload = (e) => {\r\n            if(this.currentDebugInfo==null) return;\r\n            \r\n            let arrayBuffer = xhr.response; // Note: not oReq.responseText\r\n            if (!arrayBuffer || arrayBuffer.byteLength <=16) {\r\n                console.info(\"! arrayBuffer || arrayBuffer.byteLength<16\");\r\n                this.currentDebugInfo=null;\r\n                return;\r\n            }\r\n            let ctx = new SerializeContext(arrayBuffer);\r\n            let hash = ctx.readU32();\r\n            if(hash!=this.currentDebugInfo.hash){\r\n                console.info(\"hash!=this.currentDebugInfo.hash\");\r\n                this.currentDebugInfo=null;\r\n                return;\r\n            }\r\n            let binaryCount = ctx.readU32();\r\n            for(let adressOffset=0;adressOffset<binaryCount;adressOffset++)\r\n            {\r\n                let value = ctx.readU32();\r\n                if(adressOffset<2) continue;\r\n                let connectorType=ConnectorType.BOOLEAN\r\n                let map = this.currentDebugInfo.typeIndex2adressOffset2ListOfLinks.get(connectorType)!;\r\n                let linksToChange = map.get(adressOffset);\r\n                if(linksToChange===undefined){\r\n                    console.error(`linksToColorize===undefined for connectorType ${connectorType} addressOffset ${adressOffset} and value ${value}`);\r\n                    continue;\r\n                }\r\n                linksToChange.forEach((e)=>{\r\n                    e.SetColor(value==1?\"red\":\"grey\");\r\n                    e.SetCaption(\"\"+value);\r\n                });\r\n            }\r\n\r\n            let integerCount = ctx.readU32();\r\n            for(let adressOffset=0;adressOffset<integerCount;adressOffset++)\r\n            {\r\n                let value = ctx.readS32();\r\n                if(adressOffset<2) continue;\r\n                let connectorType=ConnectorType.INTEGER\r\n                let map = this.currentDebugInfo.typeIndex2adressOffset2ListOfLinks.get(connectorType)!;\r\n                let linksToChange = map.get(adressOffset);\r\n                if(linksToChange===undefined){\r\n                    console.error(`linksToColorize===undefined for connectorType ${connectorType} addressOffset ${adressOffset} and value ${value}`);\r\n                    continue;\r\n                }\r\n                linksToChange.forEach((e)=>{\r\n                    e.SetCaption(\"\"+value);\r\n                });\r\n            }\r\n\r\n            let floatsCount = ctx.readU32();\r\n            for(let adressOffset=0;adressOffset<floatsCount;adressOffset++)\r\n            {\r\n                let value = ctx.readF32();\r\n                if(adressOffset<2) continue;\r\n                let connectorType=ConnectorType.FLOAT\r\n                let map = this.currentDebugInfo.typeIndex2adressOffset2ListOfLinks.get(connectorType)!;\r\n                let linksToChange = map.get(adressOffset);\r\n                if(linksToChange===undefined){\r\n                    console.error(`linksToColorize===undefined for connectorType ${connectorType} addressOffset ${adressOffset} and value ${value}`);\r\n                    continue;\r\n                }\r\n                linksToChange.forEach((e)=>{\r\n                    e.SetCaption(\"\"+value);\r\n                });\r\n            }\r\n\r\n            let colorsCount = ctx.readU32();\r\n            for(let adressOffset=0;adressOffset<colorsCount;adressOffset++)\r\n            {\r\n                let value = ctx.readU32();\r\n                if(adressOffset<2) continue;\r\n                let connectorType=ConnectorType.COLOR\r\n                let map = this.currentDebugInfo.typeIndex2adressOffset2ListOfLinks.get(connectorType)!;\r\n                let linksToChange = map.get(adressOffset);\r\n                if(linksToChange===undefined){\r\n                    console.error(`linksToColorize===undefined for connectorType ${connectorType} addressOffset ${adressOffset} and value ${value}`);\r\n                    continue;\r\n                }\r\n                linksToChange.forEach((e)=>{\r\n                    e.SetCaption(\"\"+value);\r\n                    e.SetColor($.ColorNumColor2ColorDomString(value));\r\n                });\r\n            }\r\n        }\r\n        xhr.send();\r\n    }\r\n\r\n    public _notifyGlobalMousemoveWithLink(e: MouseEvent) {\r\n        if (this.lastOutputConnectorClicked != null && !this.temporaryLinkSnapped) {\r\n            let end = Utils.EventCoordinatesInSVG(e, this.flowchartContainerSvgSvg, this.positionRatio);\r\n            this.temporaryLink.setAttribute('x2', \"\" + end.x);\r\n            this.temporaryLink.setAttribute('y2', \"\" + end.y);\r\n        }\r\n    }\r\n\r\n    public _notifyGlobalMouseupWithLink(e: MouseEvent) {\r\n        this.unsetTemporaryLink();\r\n    }\r\n\r\n    public _notifyOutputConnectorMousedown(c: FlowchartOutputConnector, e: MouseEvent) {\r\n        this.temporaryLinkSnapped = false;\r\n        let start = c.GetLinkpoint();\r\n        let end = Utils.EventCoordinatesInSVG(e, this.flowchartContainerSvgSvg, this.positionRatio);\r\n        this.temporaryLink.setAttribute('x1', \"\" + start.x);\r\n        this.temporaryLink.setAttribute('y1', \"\" + start.y);\r\n        this.temporaryLink.setAttribute('x2', \"\" + end.x);\r\n        this.temporaryLink.setAttribute('y2', \"\" + end.y);\r\n        this.setTemporaryLink(c);\r\n        document.onmouseup = (e) => {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n            this._notifyGlobalMouseupWithLink(e);\r\n        };\r\n        document.onmousemove = (e) => {\r\n            this._notifyGlobalMousemoveWithLink(e);\r\n        };\r\n    }\r\n\r\n    public _notifyInputConnectorMouseup(c: FlowchartInputConnector, e: MouseEvent) {\r\n        if (this.lastOutputConnectorClicked == null) return;\r\n        if (!this.options.multipleLinksOnInput && c.LinksLength > 0) return;\r\n        if (this.lastOutputConnectorClicked.Type == c.Type) {\r\n            this.createLink(null, this.lastOutputConnectorClicked, c);\r\n        }\r\n        this.unsetTemporaryLink();\r\n\r\n    }\r\n\r\n    public _notifyOperatorClicked(o: FlowchartOperator, e: MouseEvent) {\r\n        this.SelectOperator(o);\r\n    }\r\n\r\n    public _notifyLinkClicked(link: FlowchartLink, e: MouseEvent) {\r\n        this.selectLink(link);\r\n    }\r\n\r\n    public _notifyInputConnectorMouseenter(c: FlowchartInputConnector, e: MouseEvent) {\r\n        if (this.lastOutputConnectorClicked == null || this.lastOutputConnectorClicked.Type != c.Type) return;\r\n        if (!this.options.multipleLinksOnInput && c.LinksLength > 0) return;\r\n\r\n        this.temporaryLinkSnapped = true;\r\n        let end = c.GetLinkpoint();\r\n        this.temporaryLink.setAttribute(\"marker-end\", \"url(#marker-circle)\");\r\n        this.temporaryLink.setAttribute('x2', \"\" + end.x);\r\n        this.temporaryLink.setAttribute('y2', \"\" + end.y);\r\n    }\r\n\r\n    public _notifyInputConnectorMouseleave(c: FlowchartInputConnector, e: MouseEvent) {\r\n        this.temporaryLinkSnapped = false;\r\n        this.temporaryLink.setAttribute(\"marker-end\", \"url(#marker-arrow)\");\r\n    }\r\n\r\n    public unselectLink() {\r\n        if (this.selectedLink != null) {\r\n            if (this.options.onLinkUnselect && !this.options.onLinkUnselect(this.selectedLink)) {\r\n                return;\r\n            }\r\n            this.selectedLink.UnsetColor();\r\n            this.selectedLink = null;\r\n        }\r\n    }\r\n\r\n    public selectLink(link: FlowchartLink) {\r\n        this.unselectLink();\r\n        if (this.options.onLinkSelect && !this.options.onLinkSelect(link)) {\r\n            return;\r\n        }\r\n        this.unselectOperator();\r\n        this.selectedLink = link;\r\n        link.SetColor(this.options.defaultSelectedLinkColor);\r\n    }\r\n \r\n\r\n    private deleteSelectedThing(): void {\r\n        if (this.selectedOperator) {\r\n            this.DeleteOperator(this.selectedOperator.GlobalOperatorIndex);\r\n        }\r\n        else if (this.selectedLink) {\r\n            this.DeleteLink(this.selectedLink.GlobalLinkIndex);\r\n        }\r\n    }\r\n\r\n    private fbd2json():string{\r\n        let operators: OperatorData[] = [];\r\n        let links: LinkData[] = [];\r\n        for (const op of this.operators.values()) {\r\n            operators.push({ globalTypeIndex: op.TypeInfo.GlobalTypeIndex, caption: op.Caption, index: op.GlobalOperatorIndex, posX: op.Xpos, posY: op.Ypos, configurationData: op.Config_Copy });\r\n        }\r\n        for (const link of this.links.values()) {\r\n            links.push({\r\n                color: \"blue\",\r\n                fromOperatorIndex: link.From.Parent.GlobalOperatorIndex,\r\n                fromOutput: link.From.LocalConnectorIndex,\r\n                toOperatorIndex: link.To.Parent.GlobalOperatorIndex,\r\n                toInput: link.To.LocalConnectorIndex,\r\n            });\r\n        }\r\n        let data: FlowchartData = { operators: operators, links: links };\r\n        return JSON.stringify(data);\r\n    }\r\n\r\n    \r\n\r\n    private saveJSONToLocalFile() {\r\n        \r\n        let text = this.fbd2json();\r\n        let filename = \"functionBlockDiagram.json\";\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    private saveBinToLocalFile() {\r\n        \r\n        let text = this.fbd2json();\r\n        let compilerInstance = new FlowchartCompiler(this.operators);\r\n        let binFile =compilerInstance.Compile();  \r\n        let blob = new Blob([new Uint8Array(binFile.buf, 0, binFile.buf.byteLength)], {type: \"octet/stream\"});\r\n        let url = window.URL.createObjectURL(blob);\r\n        let filename = \"functionBlockDiagram.bin\";\r\n        var element = document.createElement('a');\r\n        element.style.display = 'none';\r\n        element.href=url;\r\n        element.download=filename;\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    private openFromLocalFile(files: FileList | null) {\r\n        if (files == null || files.length != 1) return;\r\n        const reader = new FileReader();\r\n        reader.onloadend = (e) => {\r\n            let s: string = <string>e.target!.result;\r\n            let data = <FlowchartData>JSON.parse(s);\r\n            this.setData(data);\r\n        }\r\n        reader.readAsText(files[0]);\r\n    }\r\n\r\n    private put2fbd(buf:ArrayBuffer)\r\n    {\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.open(\"PUT\", \"/fbd\", true);\r\n        xhr.onloadend = (e) => {\r\n            if(xhr.status!=200){\r\n                this.appManagement.DialogController().showOKDialog(16, `HTTP Error ${xhr.status}`, null);\r\n                return;\r\n            }\r\n            this.appManagement.DialogController().showOKDialog(16, `Successfully saved`, null);\r\n        }\r\n        xhr.onerror = (e) => { \r\n            this.appManagement.DialogController().showOKDialog(16, `Generic Error`, null);\r\n        }\r\n        xhr.send(buf);\r\n    }\r\n\r\n    private saveJSONToLabathomeFile(){\r\n        \r\n        this.appManagement.DialogController().showEnterFilenameDialog(10, \"Enter filename (without Extension\", (filename:string)=>{\r\n            let xhr_json = new XMLHttpRequest;\r\n            xhr_json.open(\"POST\", \"/fbdstorejson/\"+filename, true);\r\n            xhr_json.onloadend = (e) => {\r\n                if(xhr_json.status!=200){\r\n                    this.appManagement.DialogController().showOKDialog(16, `HTTP Error ${xhr_json.status}`, null);\r\n                    return;\r\n                }\r\n                this.appManagement.DialogController().showOKDialog(16, `Successfully saved`, null);\r\n            }\r\n            xhr_json.onerror = (e) => { this.appManagement.DialogController().showOKDialog(16, `Generic Error`, null);}\r\n            xhr_json.send(this.fbd2json());\r\n        });\r\n\r\n    }\r\n\r\n    private saveJSONandBINToLabathomeDefaultFile(buf:ArrayBuffer)\r\n    {\r\n        let xhr_bin = new XMLHttpRequest();\r\n        xhr_bin.open(\"POST\", \"/fbddefaultbin\", true);\r\n        xhr_bin.onloadend = (e) => {\r\n            if(xhr_bin.status!=200){\r\n                this.appManagement.DialogController().showOKDialog(16, `HTTP Error ${xhr_bin.status}`, null);\r\n                return;\r\n            }\r\n            let xhr_json  = new XMLHttpRequest();\r\n            xhr_json.open(\"POST\", \"/fbddefaultjson\", true);\r\n            xhr_json.onloadend =(e)=>{\r\n                if(xhr_json.status!=200){\r\n                    this.appManagement.DialogController().showOKDialog(16, `HTTP Error ${xhr_json.status}`, null);\r\n                    return;\r\n                }\r\n                this.appManagement.DialogController().showOKDialog(16, `Successfully set a new default FBD`, null);\r\n            }\r\n            xhr_json.onerror = (e) => { this.appManagement.DialogController().showOKDialog(16, `Generic Error`, null);}\r\n            xhr_json.send(this.fbd2json())\r\n        }\r\n        xhr_bin.onerror = (e) => { this.appManagement.DialogController().showOKDialog(16, `Generic Error`, null);}\r\n        xhr_bin.send(buf);\r\n    }\r\n\r\n    private openJSONFromLabathome()\r\n    {\r\n        let filename:string = \"\";\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.open(\"GET\", \"/fbdstorejson/\", true);//GET without filename, but with \"/\" at the end!!!\r\n        xhr.onload = (e) => {\r\n            let s = xhr.responseText;\r\n            let data = <string[]>JSON.parse(s);\r\n            this.appManagement.DialogController().showFilelist(1000, data, \r\n                (filename:string)=>{\r\n                    let xhr = new XMLHttpRequest;\r\n                    xhr.open(\"GET\", \"/fbdstorejson/\"+filename, true); //GET with the filename selected in the dialog\r\n                    xhr.onload = (e) => {\r\n                        let s = xhr.responseText;\r\n                        let data = <FlowchartData>JSON.parse(s);\r\n                        this.setData(data);\r\n                    }\r\n                    xhr.send();\r\n                },\r\n                (filename:string)=>{\r\n                    let xhr = new XMLHttpRequest;\r\n                    xhr.open(\"DELETE\", \"/fbdstorejson/\"+filename, true); //GET with the filename selected in the dialog\r\n                    xhr.onloadend = (e) => {\r\n                        this.appManagement.DialogController().showOKDialog(1, `File ${filename} deleted successfully`, null);\r\n                    }\r\n                    xhr.send();\r\n                }\r\n            );\r\n        }\r\n        xhr.send();\r\n    }\r\n\r\n\r\n    private openDefaultJSONFromLabathome()\r\n    {\r\n        let xhr = new XMLHttpRequest;\r\n        xhr.open(\"GET\", \"/fbddefaultjson\", true);\r\n        xhr.onload = (e) => {\r\n            let s = xhr.responseText;\r\n            let data = <FlowchartData>JSON.parse(s);\r\n            this.setData(data);\r\n        }\r\n        xhr.send();\r\n    }\r\n\r\n    \r\n\r\n    private buildMenu(subcontainer: HTMLDivElement) {\r\n        let fileInput = <HTMLInputElement>$.Html(subcontainer, \"input\", [\"type\", \"file\", \"id\", \"fileInput\", \"accept\", \".json\"]);\r\n        fileInput.style.display = \"none\";\r\n        fileInput.onchange = (e) => {\r\n            this.openFromLocalFile(fileInput.files);\r\n        }\r\n\r\n        let toolbar = $.Html(subcontainer, \"div\", [], [\"develop-toolbar\"]);\r\n        let menuFile = $.Html(toolbar, \"div\", [], [\"dropdown\"]);\r\n        let menuFileDropBtn = <HTMLButtonElement>$.Html(menuFile, \"button\", [], [\"dropbtn\"], \"File ▼\");\r\n        let menuFileDropContent = $.Html(menuFile, \"div\", [], [\"dropdown-content\"]);\r\n        menuFileDropBtn.onclick = (e) => { menuFileDropContent.classList.toggle(\"show\"); };\r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"📂 Open (Local)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            fileInput.click();\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"📂 Open (labathome)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.openJSONFromLabathome()\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"📂 Open Default (labathome)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.openDefaultJSONFromLabathome()\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"💾 Save (Local)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.saveJSONToLocalFile();\r\n            e.preventDefault();\r\n        }\r\n        \r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"💾 Save (labathome)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.saveJSONToLabathomeFile();\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuFileDropContent, \"a\", [\"href\", \"#\"], [], \"💾 Save Bin (Local)\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.saveBinToLocalFile();\r\n            e.preventDefault();\r\n        }\r\n        //let runbutton = $.Html(toolbar, \"a\", [\"href\", \"#\"], [\"develop-toolbar\"], \"Run\");\r\n\r\n        let menuDebug = $.Html(toolbar, \"div\", [], [\"dropdown\"]);\r\n        let menuDebugDropBtn = <HTMLButtonElement>$.Html(menuDebug, \"button\", [], [\"dropbtn\"], \"Debug ▼\");\r\n\r\n        let menuDebugDropContent = $.Html(menuDebug, \"div\", [], [\"dropdown-content\"]);\r\n        menuDebugDropBtn.onclick = (e) => {\r\n            menuDebugDropContent.classList.toggle(\"show\");\r\n        };\r\n        $.Html(menuDebugDropContent, \"a\", [\"href\", \"#\"], [], \"☭ Run Now\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            let compilerInstance = new FlowchartCompiler(this.operators);\r\n            let guidAndBufAndMap: HashAndBufAndMaps=compilerInstance.Compile();  \r\n            this.currentDebugInfo=guidAndBufAndMap;\r\n            this.put2fbd(guidAndBufAndMap.buf);\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuDebugDropContent, \"a\", [\"href\", \"#\"], [], \"👣 Set as Startup-App\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            let compilerInstance = new FlowchartCompiler(this.operators);\r\n            let guidAndBufAndMap: HashAndBufAndMaps=compilerInstance.Compile();  \r\n            this.saveJSONandBINToLabathomeDefaultFile(guidAndBufAndMap.buf);\r\n            e.preventDefault();\r\n        }\r\n        let menuSimulation = $.Html(toolbar, \"div\", [], [\"dropdown\"]);\r\n        let menuSimulationDropBtn = <HTMLButtonElement>$.Html(menuSimulation, \"button\", [], [\"dropbtn\"], \"Simulation ▼\");\r\n\r\n        let menuSimulationDropContent = $.Html(menuSimulation, \"div\", [], [\"dropdown-content\"]);\r\n        menuSimulationDropBtn.onclick = (e) => {\r\n            menuSimulationDropContent.classList.toggle(\"show\");\r\n        };\r\n        $.Html(menuSimulationDropContent, \"a\", [\"href\", \"#\"], [], \"➤ Start Simulation\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            let compilerInstance = new FlowchartCompiler(this.operators);\r\n            this.simulationManager=new SimulationManager(compilerInstance.CompileForSimulation());\r\n            this.simulationManager.Start(false);\r\n            e.preventDefault();\r\n        }\r\n        $.Html(menuSimulationDropContent, \"a\", [\"href\", \"#\"], [], \"× Stop Simulation\").onclick = (e) => {\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n            this.simulationManager?.Stop();\r\n            e.preventDefault();\r\n        }\r\n        //let menuDebugLink2 = $.Html(menuDebugDropContent, \"a\", [\"href\", \"#\"], [], \"◉ Stop\");\r\n        //let menuDebugLink3 = $.Html(menuDebugDropContent, \"a\", [\"href\", \"#\"], [], \"◯ Erase\");\r\n    }\r\n\r\n    constructor(private appManagement:AppManagement, private container: HTMLDivElement, private options: FlowchartOptions) {\r\n        if (!this.container) throw new Error(\"container is null\");\r\n        this.operatorRegistry=operatorimpl.OperatorRegistry.Build();\r\n        let subcontainer = <HTMLDivElement>$.Html(this.container, \"div\", [], [\"develop-ui\"]);\r\n        subcontainer.onclick = (e) => {\r\n            if ((<HTMLElement>e.target).classList.contains(\"dropbtn\")) return;\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"dropdown-content\"), (elem: HTMLDivElement) => { elem.classList.remove(\"show\"); });\r\n        }\r\n\r\n        this.buildMenu(subcontainer);\r\n\r\n\r\n        let workspace = <HTMLDivElement>$.Html(subcontainer, \"div\", [\"tabindex\", \"0\"], [\"develop-workspace\"]);//tabindex, damit keypress-Events abgefangen werden können\r\n        this.propertyGridHtmlDiv = <HTMLDivElement>$.Html(subcontainer, \"div\", [], [\"develop-properties\"]);\r\n\r\n\r\n\r\n        this.flowchartContainerSvgSvg = <SVGSVGElement>$.Svg(workspace, \"svg\", [\"width\", \"100%\", \"height\", \"100%\"], [\"flowchart-container\"]);\r\n\r\n\r\n        this.linksLayer = <SVGGElement>$.Svg(this.flowchartContainerSvgSvg, \"g\", [], [\"flowchart-links-layer\"]);\r\n        this.operatorsLayer = <SVGGElement>$.Svg(this.flowchartContainerSvgSvg, \"g\", [], [\"flowchart-operators-layer\", \"unselectable\"]);\r\n        this.tempLayer = <SVGSVGElement>$.Svg(this.flowchartContainerSvgSvg, \"g\", [], [\"flowchart-temporary-link-layer\"]);\r\n        this.tempLayer.style.visibility = \"hidden\";//visible\r\n        let defs = $.Svg(this.tempLayer, \"defs\", []);\r\n        let markerArrow = $.Svg(defs, \"marker\", [\"id\", \"marker-arrow\", \"markerWidth\", \"4\", \"markerHeight\", \"4\", \"refX\", \"1\", \"refY\", \"2\", \"orient\", \"0\"]);\r\n        this.markerArrow = <SVGPathElement>$.Svg(markerArrow, \"path\", [\"d\", \"M0,0 L0,4 L2,2 z\", \"fill\", \"red\", \"stroke\", \"black\", \"stroke-width\", \"0.5\"]);\r\n        let markerCircle = $.Svg(defs, \"marker\", [\"id\", \"marker-circle\", \"markerWidth\", \"4\", \"markerHeight\", \"4\", \"refX\", \"2\", \"refY\", \"2\", \"orient\", \"0\"]);\r\n        this.markerCircle = <SVGCircleElement>$.Svg(markerCircle, \"circle\", [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\", \"fill\", \"red\", \"stroke-width\", \"1px\", \"stroke\", \"black\"]);\r\n        this.temporaryLink = <SVGLineElement>$.Svg(this.tempLayer, \"line\", [\"x1\", \"0\", \"y1\", \"0\", \"x2\", \"0\", \"y2\", \"0\", \"stroke-dasharray\", \"6,6\", \"stroke-width\", \"4\", \"stroke\", \"black\", \"fill\", \"none\", \"marker-end\", \"url(#marker-arrow)\"]);\r\n\r\n        let operatorLibActivator = <SVGRectElement>$.Svg(this.flowchartContainerSvgSvg, \"rect\", [\"width\", \"40\", \"height\", \"100%\", \"fill\", \"white\", \"fill-opacity\", \"0\"]);\r\n\r\n        this.operatorLibDiv = <HTMLDivElement>$.Html(workspace, \"div\", [], [\"flowchart-operatorlibdiv\", \"unselectable\"]);\r\n        this.operatorLibDiv.style.display = \"none\";\r\n\r\n\r\n        //let toolsRect= <SVGRectElement>$.Svg(this.operatorLibDiv, \"rect\", [\"width\",\"140\", \"height\", \"100%\", \"rx\", \"10\", \"ry\", \"10\"], [\"tools-container\"]);\r\n\r\n        //The onmousemove event occurs every time the mouse pointer is moved over the div element.\r\n        //The mouseenter event only occurs when the mouse pointer enters the div element.\r\n        //The onmouseover event occurs when the mouse pointer enters the div element, and its child elements (p and span).\r\n\r\n        //The mouseout event triggers when the mouse pointer leaves any child elements as well the selected element.\r\n        //The mouseleave event is only triggered when the mouse pointer leaves the selected element.\r\n        operatorLibActivator.onmouseenter = (e) => {\r\n            this.operatorLibDiv.style.display = \"inline\";\r\n        }\r\n        this.operatorLibDiv.onmouseleave = (e) => {\r\n            this.operatorLibDiv.style.display = \"none\";\r\n        }\r\n\r\n        this.flowchartContainerSvgSvg.onclick = (e) => {\r\n            if (e.target == this.Element)//if the click is in a \"free\" area, then the target is the uppermost layer; the linkLayer!\r\n            {\r\n                this.unselectOperator();\r\n                this.unselectLink();\r\n            }\r\n        }\r\n\r\n        workspace.onkeyup = (e) => {\r\n            if (e.key == \"Delete\") {\r\n                console.log(\"Flowchart workspace.onkeyup with e.target=\" + e.target + \" und Delete-Key\");\r\n                this.deleteSelectedThing();\r\n            }\r\n            else {\r\n                console.log(\"Flowchart workspace.onkeyup with e.target=\" + e.target + \" und key \" + e.key);\r\n            }\r\n        }\r\n\r\n        this.operatorRegistry.populateOperatorLib(this.operatorLibDiv,(e:MouseEvent, ti:TypeInfo)=>{\r\n            let caption = ti.OperatorName;\r\n            let o = this.createOperatorInternal(ti.GlobalTypeIndex, caption, null);\r\n            let coords = Utils.EventCoordinatesInSVG(e, this.Element);\r\n            o.MoveTo(coords.x - 10, coords.y - 10);\r\n            o.RegisterDragging(e);\r\n            this.operators.set(o.GlobalOperatorIndex, o);\r\n        } );\r\n    }\r\n\r\n\r\n    public onFirstStart() {\r\n        if (typeof this.options.data !== undefined && this.options.data != null) {\r\n            this.setData(this.options.data);\r\n        }\r\n    }\r\n\r\n\r\n    private createOperatorInternal(globalTypeIndex: number, caption: string, configurationData: KeyValueTuple[] | null): FlowchartOperator {\r\n        \r\n        if(!this.operatorRegistry.IsIndexKnown(globalTypeIndex))\r\n        {\r\n            throw new Error(`Unknown globalTypeIndex ${globalTypeIndex}`);\r\n        }\r\n        if (this.options.onOperatorCreate && !this.options.onOperatorCreate(caption, null, false)) {\r\n            throw new Error(`Creation of operator of globalTypeIndex ${globalTypeIndex} prevented by onOperatorCreate plugin`);\r\n        }\r\n        let op = this.operatorRegistry.CreateByIndex(globalTypeIndex, this, caption, configurationData)!;\r\n       \r\n        this.currentDebugInfo=null;\r\n        return op;\r\n    }\r\n\r\n    public setData(data: FlowchartData) {\r\n\r\n        this.links.forEach((e) => e.RemoveFromDOM());\r\n        this.links.clear();\r\n        this.operators.forEach((e) => e.RemoveFromDOM());\r\n        this.operators.clear();\r\n        let indexInData2operator = new Map<number, FlowchartOperator>();\r\n\r\n        for (const d of data.operators) {\r\n            let o = this.createOperatorInternal(d.globalTypeIndex, d.caption, d.configurationData);\r\n            o.MoveTo(d.posX, d.posY);\r\n            this.operators.set(o.GlobalOperatorIndex, o);\r\n            indexInData2operator.set(d.index, o);\r\n        }\r\n        for (const d of data.links) {\r\n            let fromOp = indexInData2operator.get(d.fromOperatorIndex);\r\n            let toOp = indexInData2operator.get(d.toOperatorIndex);\r\n            if (fromOp === undefined || toOp === undefined) continue;\r\n            let fromConn = fromOp.GetOutputConnectorByIndex(d.fromOutput);\r\n            let toConn = toOp.GetInputConnectorByIndex(d.toInput);\r\n            if (fromConn == null || toConn == null) continue;\r\n            this.createLink(d, fromConn, toConn);\r\n        }\r\n    }\r\n\r\n    public DeleteLink(globalLinkIndex: number) {\r\n        this.currentDebugInfo=null;\r\n        let l = this.links.get(globalLinkIndex);\r\n        if (l === undefined) {\r\n            throw Error(\"Link to delete is undefined\")\r\n        }\r\n        if (this.selectedLink == l) {\r\n            this.unselectLink();\r\n        }\r\n        l.RemoveFromDOM();\r\n        this.links.delete(globalLinkIndex);\r\n        l.To.RemoveLink(l);\r\n        l.From.RemoveLink(l);\r\n    }\r\n\r\n    public DeleteOperator(globalOperatorIndex: number) {\r\n        this.currentDebugInfo=null;\r\n        let o = this.operators.get(globalOperatorIndex);\r\n        if (o === undefined) {\r\n            throw Error(\"Operator to delete is undefined\")\r\n        }\r\n        if (this.selectedOperator == o) {\r\n            this.unselectOperator();\r\n        }\r\n        o.RemoveFromDOM();\r\n        this.operators.delete(o.GlobalOperatorIndex);\r\n        for (const outputKV of o.OutputsKVIt) {\r\n            for (const linkKV of outputKV[1].LinksKVIt) {\r\n                this.DeleteLink(linkKV[1].GlobalLinkIndex);\r\n            }\r\n        }\r\n        for (const inputKV of o.InputsKVIt) {\r\n            for (const linkKV of inputKV[1].LinksKVIt) {\r\n                this.DeleteLink(linkKV[1].GlobalLinkIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    public createLink(data: LinkData | null, from: FlowchartOutputConnector, to: FlowchartInputConnector): FlowchartLink | null {\r\n        if (this.options.onLinkCreate && !this.options.onLinkCreate(from.Caption, data)) return null;\r\n        if (!this.options.multipleLinksOnOutput && from.LinksLength > 0) return null;\r\n        if (!this.options.multipleLinksOnInput && to.LinksLength > 0) return null;\r\n        this.currentDebugInfo=null;\r\n        let l: FlowchartLink = new FlowchartLink(this, \"\", this.Options.defaultLinkColor, from, to);\r\n        from.AddLink(l);\r\n        to.AddLink(l);\r\n        this.links.set(l.GlobalLinkIndex, l);\r\n        return l;\r\n    }\r\n\r\n    private unsetTemporaryLink() {\r\n        this.lastOutputConnectorClicked = null;\r\n        this.tempLayer.style.visibility = \"hidden\";\r\n    }\r\n\r\n    private setTemporaryLink(c: FlowchartOutputConnector) {\r\n        this.lastOutputConnectorClicked = c;\r\n        let color = Flowchart.DATATYPE2COLOR.get(c.Type)\r\n        if (!color) color = \"BLACK\";\r\n        this.markerArrow.style.fill = color;\r\n        this.markerCircle.style.fill = color;\r\n        this.tempLayer.style.visibility = \"visible\";\r\n    }\r\n\r\n    private unselectOperator() {\r\n        if (this.options.onOperatorUnselect && !this.options.onOperatorUnselect()) return;\r\n        this.propertyGridHtmlDiv.innerText = \"\"; //clear\r\n        if (this.selectedOperator == null) return;\r\n        this.selectedOperator.ShowAsSelected(false);\r\n        this.selectedOperator = null;\r\n    }\r\n\r\n    public SelectOperator(operator: FlowchartOperator): void {\r\n        if (this.options.onOperatorSelect && !this.options.onOperatorSelect(operator.Caption)) return;\r\n        this.unselectLink();\r\n        if (this.selectedOperator != null) this.selectedOperator.ShowAsSelected(false);\r\n        operator.ShowAsSelected(true);\r\n        this.selectedOperator = operator;\r\n        this.propertyGridHtmlDiv.innerText = \"\"; //clear\r\n        $.Html(this.propertyGridHtmlDiv, \"p\", [], [\"develop-propertygrid-head\"], `Properties for ${this.selectedOperator.Caption}`);\r\n        let table = <HTMLTableElement>$.Html(this.propertyGridHtmlDiv, \"table\", [], [\"develop-propertygrid-table\"]);\r\n        let thead = <HTMLTableSectionElement>$.Html(table, \"thead\", [],[]);\r\n        let tr_head = $.Html(thead, \"tr\", [], [\"develop-propertygrid-tr\"]);\r\n        $.Html(tr_head, \"th\", [], [\"develop-propertygrid-th\"], \"Key\");\r\n        $.Html(tr_head, \"th\", [], [\"develop-propertygrid-th\"], \"Value\");\r\n        let tbody= <HTMLTableSectionElement>$.Html(table, \"tbody\", [],[]);\r\n        if (this.selectedOperator!.PopulateProperyGrid(tbody)) {\r\n            $.Html(this.propertyGridHtmlDiv, \"button\", [], [\"develop-propertygrid-button\"], `Save`).onclick=(e)=>{\r\n                this.currentDebugInfo=null;\r\n                operator.SavePropertyGrid(tbody);\r\n            };\r\n        }\r\n        else {\r\n            this.propertyGridHtmlDiv.innerText = \"\"; //clear\r\n            $.Html(this.propertyGridHtmlDiv, \"p\", [], [\"develop-propertygrid-head\"], `No Properties for ${this.selectedOperator.Caption}`);\r\n        }\r\n    }\r\n\r\n    // Found here : http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\r\n    public static _shadeColor(color: string, percent: number) {\r\n        var f = parseInt(color.slice(1), 16), t = percent < 0 ? 0 : 255, p = percent < 0 ? percent * -1 : percent, R = f >> 16, G = f >> 8 & 0x00FF, B = f & 0x0000FF;\r\n        return \"#\" + (0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B)).toString(16).slice(1);\r\n    }\r\n}\r\n","import {FlowchartOperator, PositionType } from \"./FlowchartOperator\";\r\nimport {ConnectorType } from \"./FlowchartConnector\";\r\nimport { NodeWrapper, TopologicalSortDFS } from \"./TopologicalSorfDFS\";\r\nimport { SerializeContext } from \"./SerializeContext\";\r\nimport { FlowchartLink } from \"./FlowchartLink\";\r\n\r\nexport interface SerializeContextAndAdressMap {\r\n    typeIndex2globalConnectorIndex2adressOffset: Map<number, Map<number, number>>;\r\n    ctx: SerializeContext;\r\n}\r\n\r\nexport interface HashAndBufAndMaps{\r\n    hash:number;\r\n    buf: ArrayBuffer;\r\n    typeIndex2globalConnectorIndex2adressOffset:Map<number, Map<number, number>>,\r\n    typeIndex2adressOffset2ListOfLinks:Map<number, Map<number, Array<FlowchartLink>>>,\r\n    typeIndex2maxOffset:Map<number, number>,\r\n}\r\n\r\nexport interface HashAndBuf{\r\n    hash:number;\r\n    buf: ArrayBuffer;\r\n}\r\n\r\nexport interface SortedOperatorsAndMaps{\r\n    sortedOperators:FlowchartOperator[];\r\n    typeIndex2globalConnectorIndex2adressOffset:Map<number, Map<number, number>>,\r\n    typeIndex2adressOffset2ListOfLinks:Map<number, Map<number, Array<FlowchartLink>>>,\r\n    typeIndex2maxOffset:Map<number, number>,\r\n}\r\n\r\nexport interface Maps{\r\n    typeIndex2globalConnectorIndex2adressOffset:Map<number, Map<number, number>>,\r\n    typeIndex2adressOffset2ListOfLinks:Map<number, Map<number, Array<FlowchartLink>>>,\r\n    typeIndex2maxOffset:Map<number, number>,\r\n}\r\n\r\nexport class FlowchartCompiler {\r\n    \r\n    public constructor(private index2operator:Map<number,FlowchartOperator>)\r\n    {\r\n       \r\n    }\r\n\r\n    private sortOperators():FlowchartOperator[]{\r\n        let index2wrappedOperator = new Map<number, NodeWrapper<FlowchartOperator>>();\r\n        this.index2operator.forEach((v, k, m) => {\r\n            index2wrappedOperator.set(v.GlobalOperatorIndex, new NodeWrapper<FlowchartOperator>(v));\r\n        });\r\n        let wrappedOutputOperators: NodeWrapper<FlowchartOperator>[] = [];\r\n        for (let i of index2wrappedOperator.values()) {\r\n            //Stelle für jede \"gewrapte Node\" fest, welche Operatoren von Ihr abhängig sind\r\n            let dependents = new Set<NodeWrapper<FlowchartOperator>>();\r\n            for (const inputkv of i.Payload.InputsKVIt) {\r\n                for (const linkkv of inputkv[1].LinksKVIt) {\r\n                    let dependentOperator = linkkv[1].From.Parent;\r\n                    let dependentWrappedNode = index2wrappedOperator.get(dependentOperator.GlobalOperatorIndex);\r\n                    if (!dependentWrappedNode)\r\n                        throw new Error(\"Implementation Error: dependentWrappedNode is undefined\");\r\n                    dependents.add(dependentWrappedNode);\r\n                }\r\n            }\r\n            dependents.forEach(e => i.DependendNodes.push(e));\r\n            //füge alle mit Typ \"Output\" einer Liste hinzu\r\n            if (i.Payload.TypeInfo.Position == PositionType.Output) wrappedOutputOperators.push(i);\r\n        }\r\n\r\n        let algorithm = new TopologicalSortDFS<FlowchartOperator>();\r\n        let sortedList = algorithm.sort(wrappedOutputOperators);\r\n        return sortedList.map((e) => e.Payload)\r\n    }\r\n\r\n    public CompileForSimulation():SortedOperatorsAndMaps{\r\n        let sortedOperators = this.sortOperators();\r\n        for (const key in sortedOperators) {\r\n            let value = sortedOperators[key];\r\n            value.SetDebugInfoText(\"Sequence \" + key);\r\n        }\r\n        let maps=this.createLookupMaps(sortedOperators);\r\n        return {\r\n            sortedOperators:sortedOperators,\r\n            typeIndex2globalConnectorIndex2adressOffset:maps.typeIndex2globalConnectorIndex2adressOffset,\r\n            typeIndex2adressOffset2ListOfLinks:maps.typeIndex2adressOffset2ListOfLinks,\r\n            typeIndex2maxOffset:maps.typeIndex2maxOffset,\r\n        };\r\n    }\r\n\r\n    public Compile(): HashAndBufAndMaps {\r\n        let sortedOperators = this.sortOperators();\r\n        for (const key in sortedOperators) {\r\n            let value = sortedOperators[key];\r\n            value.SetDebugInfoText(\"Sequence \" + key);\r\n        }\r\n        let maps=this.createLookupMaps(sortedOperators);\r\n        let hashAndBuf= this.serialize(sortedOperators, maps);\r\n\r\n        let dv = new DataView(hashAndBuf.buf);\r\n        let code: String = \"const uint8_t code[] = {\"\r\n        for (let i = 0; i < dv.byteLength; i++) {\r\n            code += \"0x\" + dv.getUint8(i).toString(16) + \", \";\r\n        }\r\n        code += \"};\";\r\n        console.log(code);\r\n\r\n        return {\r\n            hash:hashAndBuf.hash,\r\n            buf: hashAndBuf.buf,\r\n            typeIndex2globalConnectorIndex2adressOffset:maps.typeIndex2globalConnectorIndex2adressOffset,\r\n            typeIndex2adressOffset2ListOfLinks:maps.typeIndex2adressOffset2ListOfLinks,\r\n            typeIndex2maxOffset:maps.typeIndex2maxOffset,\r\n        };\r\n    }\r\n\r\n    private createLookupMaps(operators:FlowchartOperator[]):Maps{\r\n        //Speichert separat für jeden Datentyp (Bool, int, float, color,...), welcher GlobalConnectorIndex auf welchen bei 2 beginnend fortlaufenden Adress-Offset gemapped wird\r\n        //wir beginnen bei 2, weil unbeschaltete Outputs auf 0 schreiben und unbeschaltete Inputs von 1 lesen.\r\n        let typeIndex2globalConnectorIndex2adressOffset = new Map<number, Map<number, number>>(); //globalConnectorIndex_Outputs 2 variableAdress\r\n        let typeIndex2maxOffset = new Map<number, number>();\r\n        let typeIndex2adressOffset2ListOfLinks = new Map<number, Map<number, Array<FlowchartLink>>>();\r\n        for (let type in ConnectorType) {\r\n            if (!isNaN(Number(type))) {\r\n                typeIndex2globalConnectorIndex2adressOffset.set(Number(type), new Map<number, number>());\r\n                typeIndex2maxOffset.set(Number(type), 2);\r\n                typeIndex2adressOffset2ListOfLinks.set(Number(type), new Map<number,Array<FlowchartLink>>());\r\n            }\r\n        }\r\n        for (const operator of operators) {\r\n            for (const outputKV of operator.OutputsKVIt) {\r\n                if (outputKV[1].LinksLength == 0) {\r\n                    //unconnected output -->writes to memory adress zero of the respective data type\r\n                    typeIndex2globalConnectorIndex2adressOffset.get(outputKV[1].Type)!.set(outputKV[1].GlobalConnectorIndex, 0);\r\n                }\r\n                else {\r\n                    //connected output --> create new memory address and set it\r\n                    let index = typeIndex2maxOffset.get(outputKV[1].Type)!;\r\n                    typeIndex2globalConnectorIndex2adressOffset.get(outputKV[1].Type)!.set(outputKV[1].GlobalConnectorIndex, index);\r\n                    \r\n                    //add all outgoing links to typeIndex2adressOffset2ListOfLinks\r\n                    typeIndex2adressOffset2ListOfLinks.get(outputKV[1].Type)!.set(index, outputKV[1].GetLinksCopy());\r\n                    index++;\r\n                    typeIndex2maxOffset.set(outputKV[1].Type, index);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            typeIndex2globalConnectorIndex2adressOffset:typeIndex2globalConnectorIndex2adressOffset,\r\n            typeIndex2adressOffset2ListOfLinks:typeIndex2adressOffset2ListOfLinks,\r\n            typeIndex2maxOffset:typeIndex2maxOffset,\r\n        };\r\n    }\r\n\r\n\r\n    private serialize(operators: FlowchartOperator[], maps:Maps):HashAndBuf {\r\n\r\n\r\n        /*\r\n        Lege nun die Operatoren in der durch das Array vorgegebenen Struktur in ein Array ab\r\n        */\r\n        let buffer = new ArrayBuffer(Math.pow(2, 16));\r\n        let serctx = new SerializeContext(buffer, 0);\r\n        let ctx: SerializeContextAndAdressMap = { \r\n            typeIndex2globalConnectorIndex2adressOffset: maps.typeIndex2globalConnectorIndex2adressOffset, \r\n            ctx:serctx\r\n        };\r\n        //Version of Data Structure\r\n        serctx.writeU32(0xAFFECAFE);\r\n        //Placeholder for hash\r\n        serctx.writeU32(0);\r\n\r\n\r\n        for (let type in ConnectorType) {\r\n            if (!isNaN(Number(type))) {\r\n                serctx.writeU32(maps.typeIndex2maxOffset.get(Number(type))!);\r\n            }\r\n        }\r\n    \r\n        //operatorsCount\r\n        serctx.writeU32(operators.length);\r\n        for (const operator of operators) {\r\n            operator.SerializeToBinary(ctx);\r\n        }\r\n\r\n        let hash= serctx.funhash(8, (2^32)-1);\r\n        serctx.overwriteU32(hash, 4);\r\n\r\n        return {\r\n            hash:hash, \r\n            buf:ctx.ctx.getResult(), \r\n        };\r\n    }\r\n}","import { FlowchartOperator } from \"./FlowchartOperator\";\r\nimport { Flowchart } from \"./Flowchart\";\r\nimport { FlowchartLink } from \"./FlowchartLink\";\r\nimport {$, Location2D} from \"../utils\"\r\n\r\nconst TRANSLATEY = 20;\r\n\r\nexport enum ConnectorType{\r\n    BOOLEAN=0,\r\n    INTEGER=1,\r\n    FLOAT=2,\r\n    COLOR=3,\r\n}\r\n\r\nexport abstract class FlowchartConnector {\r\n    private static INDEX: number = 0;\r\n    private globalConnectorIndex: number;\r\n    get GlobalConnectorIndex() { return this.globalConnectorIndex; }\r\n    get LocalConnectorIndex(){return this.localIndex;}\r\n\r\n    protected element: SVGGElement;\r\n    get Element() { return this.element; }\r\n\r\n    protected snapper:SVGCircleElement;\r\n    protected connector:SVGElement;\r\n    protected connectorGroup:SVGGElement;\r\n\r\n    protected  links = new Map<number, FlowchartLink>();\r\n    public HasLink = (globalLinkIndex: number) => this.links.has(globalLinkIndex);\r\n    public AddLink = (link: FlowchartLink) => this.links.set(link.GlobalLinkIndex, link);\r\n    public RemoveLink = (link: FlowchartLink) => this.links.delete(link.GlobalLinkIndex);\r\n    get LinksLength() { return this.links.size};\r\n    public GetLinksCopy(): FlowchartLink[] {\r\n        return Array.from(this.links.values());\r\n    }\r\n\r\n    get LinksKVIt(){return this.links.entries()}\r\n    protected abstract GetLinkpointXOffset(width:number): number;\r\n    protected abstract getIOSpecifics():{inputOrOutput:string, parent:SVGGElement, translateY:number, dx:number};\r\n\r\n    public RefreshLinkPositions() {\r\n        this.links.forEach(l=>{\r\n            l.RefreshPosition();\r\n        });\r\n        \r\n    }\r\n\r\n    constructor(private parent: FlowchartOperator, private caption: string, private localIndex:number, private type:ConnectorType) {\r\n\r\n        this.globalConnectorIndex = FlowchartConnector.INDEX++;\r\n        let spec = this.getIOSpecifics();\r\n        let translateY = TRANSLATEY*spec.parent.childElementCount;\r\n        this.element = <SVGGElement>$.Svg(spec.parent, \"g\", [\"transform\", `translate(0 ${translateY})`], [`operator-${spec.inputOrOutput}`]);\r\n        this.element.setAttribute(\"data-connector-datatype\", ConnectorType[type]);\r\n\r\n        let text =  <SVGTextElement>$.Svg(this.element, \"text\", [\"dx\",\"\"+spec.dx, \"dy\", \"4\"], [`operator-${spec.inputOrOutput}-caption`]);\r\n        text.textContent=caption;\r\n        this.connectorGroup = <SVGGElement>$.Svg(this.element, \"g\", []);\r\n        this.connector = <SVGCircleElement>$.Svg(this.connectorGroup, \"circle\", [\"r\",\"4\"], [`operator-${spec.inputOrOutput}-connector`, ConnectorType[type]]);\r\n        this.snapper= <SVGCircleElement>$.Svg(this.connectorGroup, \"circle\", [\"r\",\"10\"], [`operator-${spec.inputOrOutput}-snapper`]);\r\n        \r\n        this.element.onmouseover = (e) => {\r\n            for (const link of this.links.values()) {\r\n                if (link && link != this.parent.Parent.SelectedLink) {\r\n                    link.SetColor(Flowchart._shadeColor(this.parent.Parent.Options.defaultLinkColor, -0.4));\r\n                }\r\n            }\r\n        }\r\n\r\n        this.element.onmouseout = (e) => {\r\n            for (const link of this.links.values()) {\r\n                if (link && link != this.parent.Parent.SelectedLink) {\r\n                    link.UnsetColor();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    get Parent() { return this.parent; }\r\n    get Caption() { return this.caption; }\r\n    get Type() { return this.type; }\r\n\r\n\r\n    public GetLinkpoint(): Location2D {\r\n        let flowchart = this.Parent.Parent;\r\n        let posrat = flowchart.PositionRatio;\r\n        let flowchartRect = flowchart.Element.getBoundingClientRect();\r\n        let connectorRect = this.connector.getBoundingClientRect();\r\n        var x = (connectorRect.left - flowchartRect.left) / posrat + connectorRect.width/2;\r\n        var y = (connectorRect.top - flowchartRect.top) / posrat + connectorRect.height/2;\r\n        return { x: x, y: y };\r\n    }\r\n}\r\n\r\nexport class FlowchartInputConnector extends FlowchartConnector {\r\n    constructor (parent: FlowchartOperator, caption: string, localIndex:number, type:ConnectorType) {\r\n        super(parent, caption, localIndex, type);\r\n        \r\n        this.connectorGroup.onmouseup = (e) => {\r\n           parent.Parent._notifyInputConnectorMouseup(this, e);\r\n        }\r\n        this.connectorGroup.onmouseenter=(e)=>\r\n        {\r\n            parent.Parent._notifyInputConnectorMouseenter(this, e);\r\n        }\r\n        this.connectorGroup.onmouseleave=(e)=>\r\n        {\r\n            parent.Parent._notifyInputConnectorMouseleave(this, e);\r\n        }\r\n    }\r\n    protected GetLinkpointXOffset(width:number): number{return 0;}  \r\n    protected  getIOSpecifics(){return {inputOrOutput:\"input\", parent:this.Parent.InputSvgG, translateY:0, dx:8};}\r\n    public GetGlobalConnectorIndexOfSignalSource():number {\r\n        for(let link of this.links.values()){\r\n            return link.From.GlobalConnectorIndex;\r\n        }\r\n        return -1;\r\n    }\r\n}\r\nexport class FlowchartOutputConnector extends FlowchartConnector {\r\n    constructor (parent: FlowchartOperator, caption: string, localIndex:number, type:ConnectorType) {\r\n        super(parent, caption, localIndex, type)\r\n        this.element.onmousedown = (e) => {\r\n            parent.Parent._notifyOutputConnectorMousedown(this, e);\r\n        }\r\n    }\r\n    protected GetLinkpointXOffset(width:number): number{return width;}\r\n    protected  getIOSpecifics(){return {inputOrOutput:\"output\", parent:this.Parent.OutputSvgG, translateY:140, dx:-8};}\r\n}\r\n","import { FlowchartInputConnector, FlowchartOutputConnector } from \"./FlowchartConnector\";\r\nimport { Flowchart } from \"./Flowchart\";\r\nimport {$} from \"../utils\"\r\nexport class FlowchartLink {\r\n    private static MAX_INDEX: number = 0;\r\n    private index: number;\r\n    private element: SVGPathElement;\r\n    private captionElement:SVGTextElement;\r\n    private captionPath: SVGTextPathElement;\r\n    constructor(private parent: Flowchart, private caption: string, private color: string, private from: FlowchartOutputConnector, private to: FlowchartInputConnector) {\r\n        this.index = FlowchartLink.MAX_INDEX++;\r\n        this.element = <SVGPathElement>$.Svg(parent.LinkLayer, \"path\", [\"stroke-width\", \"\" + this.parent.Options.linkWidth, \"fill\", \"none\", \"id\", \"LINK\" + this.index]);\r\n        this.RefreshPosition();\r\n        this.UnsetColor();\r\n        this.parent.LinkLayer.appendChild(this.element);\r\n        this.captionElement =<SVGTextElement>$.Svg(parent.LinkLayer, \"text\",[]);\r\n        this.captionPath = <SVGTextPathElement>$.Svg(this.captionElement, \"textPath\",[\"startOffset\", \"50%\",\"text-anchor\", \"middle\"]);\r\n        this.captionPath.setAttributeNS($.XLINKNS, \"href\", '#' + \"LINK\" + this.index);\r\n        this.captionPath.innerHTML = caption;\r\n        this.element.onclick = (e) => {\r\n            this.parent._notifyLinkClicked(this, e);\r\n        }\r\n    }\r\n    get GlobalLinkIndex() { return this.index; }\r\n    get From() { return this.from; }\r\n    get To() { return this.to; }\r\n    set Color(color: string) { this.color = color; }\r\n\r\n    public RemoveFromDOM() {\r\n        this.element.remove();\r\n        this.captionElement.remove();\r\n    }\r\n\r\n\r\n    public SetColor(color: string) {\r\n        this.element.setAttribute('stroke', color);\r\n        //this.element.setAttribute('fill', color);\r\n        //TODO: colorize the small triangle in the connector\r\n        //linkData.internal.els.fromSmallConnector.css('border-left-color', color);\r\n        //linkData.internal.els.toSmallConnector.css('border-left-color', color);\r\n    }\r\n\r\n    public SetCaption(caption:string){\r\n        this.captionPath.innerHTML=caption;\r\n    }\r\n\r\n    public UnsetColor() {\r\n        this.SetColor(this.parent.Options.defaultLinkColor);\r\n    }\r\n\r\n    public RefreshPosition() {\r\n        let fromPosition = this.from.GetLinkpoint();\r\n        let toPosition = this.to.GetLinkpoint();\r\n        let fromX = fromPosition.x;\r\n        let fromY = fromPosition.y + this.parent.Options.linkVerticalDecal;\r\n        let toX = toPosition.x;\r\n        let toY = toPosition.y + this.parent.Options.linkVerticalDecal;\r\n        let distanceFromArrow = this.parent.Options.distanceFromArrow;\r\n        let bezierFromX = (fromX + distanceFromArrow);\r\n        let bezierToX = toX + 1;\r\n        let bezierIntensity = Math.min(100, Math.max(Math.abs(bezierFromX - bezierToX) / 2, Math.abs(fromY - toY)));\r\n        this.element.setAttribute(\"d\", 'M' + bezierFromX + ',' + (fromY) + ' C' + (fromX + distanceFromArrow + bezierIntensity) + ',' + fromY + ' ' + (toX - bezierIntensity) + ',' + toY + ' ' + bezierToX + ',' + toY);\r\n    }\r\n}\r\n","import {FlowchartInputConnector, FlowchartOutputConnector } from \"./FlowchartConnector\";\r\nimport {Flowchart} from \"./Flowchart\";\r\nimport { SerializeContextAndAdressMap } from \"./FlowchartCompiler\";\r\nimport {$, KeyValueTuple} from \"../utils\"\r\nimport { SimulationContext } from \"./SimulationContext\";\r\n\r\nexport enum PositionType{\r\n    Default,\r\n    Input,\r\n    Output,\r\n};\r\nexport enum SingletonType{\r\n    Default,\r\n    Singleton,\r\n};\r\nexport class TypeInfo\r\n{\r\n    constructor(\r\n        public GlobalTypeIndex:number, \r\n        public GroupName:string, \r\n        public OperatorName:string, \r\n        public Position:PositionType, \r\n        public Singleton:SingletonType, \r\n        public Builder:(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null)=>FlowchartOperator)\r\n        {}\r\n}\r\n\r\nexport abstract class FlowchartOperator {\r\n\r\n    //der Index der Inputs ist rein lokal und beginnt bei 0 fortlaufend\r\n    private Inputs: FlowchartInputConnector[]=[];\r\n    //der Index der Outputs ist rein lokal und beginnt bei 0 fortlaufend\r\n    private Outputs: FlowchartOutputConnector[]= [];\r\n\r\n\r\n    private static MAX_INDEX: number = 0;\r\n    private index: number;\r\n    get GlobalOperatorIndex(){return this.index;}\r\n\r\n    private elementSvgG: SVGGElement;\r\n    get ElementSvgG() { return this.elementSvgG; }\r\n    private inputSvgG:SVGGElement;\r\n    get InputSvgG(): SVGGElement { return this.inputSvgG; }\r\n    private outputSvgG:SVGGElement;\r\n    get OutputSvgG(): SVGGElement { return this.outputSvgG;}\r\n    private debugInfoSvgText:SVGTextElement;\r\n\r\n    get TypeInfo(){return this.typeInfo;}\r\n\r\n    get Xpos(){return this.x;}\r\n    get Ypos(){return this.y;}\r\n    get Config_Copy(){\r\n        return this.configurationData?this.configurationData.slice(0):null;\r\n    }\r\n\r\n    private x=0;\r\n    private y=0;\r\n\r\n    protected box:SVGRectElement;\r\n\r\n    public ShowAsSelected(state:boolean)\r\n    {\r\n        if(state)\r\n        {\r\n            this.box.classList.add('selected');\r\n        }\r\n        else{\r\n            this.box.classList.remove('selected');\r\n        }\r\n    }\r\n\r\n    public SetDebugInfoText(text:string):void{\r\n        this.debugInfoSvgText.textContent=text;\r\n    }\r\n\r\n    protected cfg_setDefault(key:string, value:any)\r\n    {\r\n        if(this.configurationData==null) this.configurationData=[];\r\n        for (const e of this.configurationData) {\r\n            if(e.key==key){\r\n                return;\r\n            }\r\n        } \r\n        this.configurationData.push({key:key, value:value});\r\n    }\r\n\r\n    protected cfg_getValue(key:string, defaultValue:any):any\r\n    {\r\n        if(this.configurationData==null) this.configurationData=[];\r\n        for (const e of this.configurationData) {\r\n            if(e.key==key){\r\n                return e.value;\r\n            }\r\n        };\r\n        this.configurationData.push({key:key, value:defaultValue});\r\n        return defaultValue;\r\n    }\r\n\r\n    protected cfg_setValue(key:string, value:any)\r\n    {\r\n        if(this.configurationData==null) this.configurationData=[];\r\n        for (const e of this.configurationData) {\r\n            if(e.key==key){\r\n                e.value=value;\r\n                return;\r\n            }\r\n        } \r\n        this.configurationData.push({key:key, value:value});\r\n    }\r\n\r\n    constructor(private parent: Flowchart, private caption: string, private typeInfo: TypeInfo, protected configurationData:KeyValueTuple[]|null) {\r\n        this.index = FlowchartOperator.MAX_INDEX++;\r\n        this.elementSvgG = <SVGGElement>$.Svg(parent.OperatorsLayer, \"g\", [], [\"operator\"]);\r\n        this.elementSvgG.setAttribute('data-operator-index', \"\" + this.index);\r\n        let dragGroup = <SVGGElement>$.Svg(this.elementSvgG, \"g\", [], []);\r\n        this.box = <SVGRectElement>$.Svg(dragGroup, \"rect\", [\"width\",\"140\", \"height\", \"100\", \"rx\", \"10\", \"ry\", \"10\"], [\"operator-box\"]);\r\n        let title = <SVGTextElement>$.Svg(dragGroup,\"text\", [\"x\", \"5\", \"y\", \"21\"],[\"operator-title\"]);\r\n        title.textContent = caption;\r\n        this.debugInfoSvgText = <SVGTextElement>$.Svg(dragGroup, \"text\", [\"x\", \"0\", \"y\", \"100\"],[\"operator-debuginfo\"]);\r\n        this.debugInfoSvgText.textContent=\"No debug info\";\r\n\r\n        this.inputSvgG= <SVGGElement>$.Svg(this.elementSvgG,\"g\", [\"transform\", \"translate(0 50)\"], [\"operator-inputs\"]);\r\n        this.outputSvgG= <SVGGElement>$.Svg(this.elementSvgG,\"g\", [\"transform\", \"translate(140 50)\"], [\"operator-outputs\"]);\r\n\r\n\r\n        this.elementSvgG.onclick = (e) => {\r\n            console.log(\"FlowchartOperator this.elementSvgG.onclick\");\r\n            parent._notifyOperatorClicked(this, e);\r\n        };\r\n        \r\n        if (this.parent.Options.canUserMoveOperators) {\r\n            dragGroup.onmousedown = (e) => {\r\n                this.RegisterDragging(e);\r\n            }\r\n        }\r\n    }\r\n    public RegisterDragging(e:MouseEvent)\r\n    {\r\n        let offsetX= e.clientX-this.x;\r\n        let offsetY = e.clientY-this.y;\r\n\r\n        document.onmouseup = (e) => {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n        };\r\n        document.onmousemove = e => {\r\n            //TODO: neue Position nur setzen, wenn this.element.clientRect innerhalb von parent.clientRectangle ist\r\n            this.MoveTo(e.clientX - offsetX, e.clientY - offsetY);\r\n        };\r\n    }\r\n    get Parent() { return this.parent };\r\n    get Caption() { return this.caption; }\r\n\r\n    get InputsKVIt(){return this.Inputs.entries()}\r\n    get OutputsKVIt(){return this.Outputs.entries()}\r\n    public GetOutputConnectorByIndex=(i:number)=>this.Outputs[i];\r\n    public GetInputConnectorByIndex=(i:number)=>this.Inputs[i];\r\n\r\n    public RemoveFromDOM(): void {\r\n        this.elementSvgG.remove();\r\n    }\r\n\r\n    protected AppendConnectors(inputs: FlowchartInputConnector[], outputs: FlowchartOutputConnector[]) {\r\n        if(this.Inputs.length!=0 || this.Outputs.length !=0) throw new Error(\"AppendConnectors may only be called once!\");\r\n        for (const i of inputs) {\r\n            if (i.Parent != this) continue;\r\n            this.Inputs.push(i);\r\n        }\r\n        for (const o of outputs) {\r\n            if (o.Parent != this) continue;\r\n            this.Outputs.push(o);\r\n        }\r\n        let num = Math.max(this.Inputs.length, this.Outputs.length);\r\n        let height = 50+num*20+10;\r\n        this.box.setAttribute(\"height\", \"\"+height);\r\n        this.debugInfoSvgText.setAttribute(\"y\", \"\"+height);\r\n    }\r\n\r\n    public MoveTo(x: number, y: number) {\r\n        let g = this.parent.Options.grid;\r\n        this.x = Math.round(x / g) * g;\r\n        this.y = Math.round(y / g) * g;\r\n        this.elementSvgG.setAttribute(\"transform\", `translate(${this.x} ${this.y})`);\r\n        for (const c of this.Inputs) {\r\n            c.RefreshLinkPositions();\r\n        }\r\n        for (const c of this.Outputs) {\r\n            c.RefreshLinkPositions();\r\n        }\r\n    }\r\n\r\n    public PopulateProperyGrid(parent:HTMLTableSectionElement):boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStart(ctx:SimulationContext){\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStop(ctx:SimulationContext){\r\n        return;\r\n    }\r\n\r\n    \r\n    protected SerializeInputsAndOutputs(ctx:SerializeContextAndAdressMap)\r\n    {\r\n        for (const input of this.Inputs) {\r\n            let variableAdress = 0;\r\n            let links = input.GetLinksCopy();\r\n            if(links.length==0){\r\n                variableAdress=1; //because unconnected inputs read from adress 1 (which is \"false\", 0, 0.0, black...)\r\n            }\r\n            else{\r\n                let out = links[0].From;\r\n                variableAdress=ctx.typeIndex2globalConnectorIndex2adressOffset.get(out.Type)!.get(out.GlobalConnectorIndex)||1;\r\n            }\r\n            ctx.ctx.writeU32(variableAdress);\r\n        }\r\n        for(const output of this.Outputs)\r\n        {\r\n            let variableAdress = 0;\r\n            if(output.LinksLength==0){\r\n                variableAdress=0; //because unconnected outputs write to adress 0 (which is never read!)\r\n            }\r\n            else{\r\n                variableAdress=ctx.typeIndex2globalConnectorIndex2adressOffset.get(output.Type)!.get(output.GlobalConnectorIndex)||1;\r\n            }\r\n            ctx.ctx.writeU32(variableAdress);\r\n        }\r\n    }\r\n\r\n    public SerializeToBinary(ctx:SerializeContextAndAdressMap)\r\n    {\r\n        //serialize Type\r\n        ctx.ctx.writeU32(this.TypeInfo.GlobalTypeIndex);\r\n        //Index of instance\r\n        ctx.ctx.writeU32(this.GlobalOperatorIndex);\r\n        this.SerializeInputsAndOutputs(ctx);\r\n        this.SerializeFurtherProperties(ctx);\r\n    }\r\n    \r\n    protected SerializeFurtherProperties(mapper:SerializeContextAndAdressMap):void{\r\n        return;\r\n    }\r\n}\r\n","import {FlowchartOperator, TypeInfo, PositionType, SingletonType} from \"./FlowchartOperator\";\r\nimport {Flowchart} from \"./Flowchart\";\r\nimport {FlowchartInputConnector, FlowchartOutputConnector, ConnectorType} from \"./FlowchartConnector\";\r\nimport { SerializeContextAndAdressMap } from \"./FlowchartCompiler\";\r\nimport {$, KeyValueTuple} from \"../utils\";\r\nimport * as Song from \"./Songs\";\r\nimport { SimulationContext } from \"./SimulationContext\";\r\n\r\nconst Basic=\"Basic\";\r\nconst Arithmetic=\"Arithmetic\";\r\nconst Input=\"Input\";\r\nconst Sensor = \"Sensor\";\r\nconst Output=\"Output\";\r\nconst Converter=\"Converter\";\r\nconst Sound = \"Sound\";\r\nconst Control = \"Control\";\r\nconst Custom =\"Custom\";\r\n\r\nconst CONSTANT = \"Constant\";\r\nconst SONG_INDEX = \"Song Index\"\r\n\r\nexport class OperatorRegistry{\r\n    IsIndexKnown(globalTypeIndex: number) {\r\n        return this.index2Info.has(globalTypeIndex);\r\n    }\r\n    \r\n    private index2Info = new Map<number, TypeInfo>();\r\n    private groupName2operatorName2Info = new Map<string, Map<string, TypeInfo>>();\r\n    \r\n    private Register(globalTypeIndex:number, groupName:string, operatorName:string, position:PositionType, singleton:SingletonType, builder:(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null)=>FlowchartOperator)\r\n    {\r\n        let ti:TypeInfo=new TypeInfo(globalTypeIndex, groupName, operatorName, position, singleton, builder)\r\n        if(this.index2Info.has(globalTypeIndex)) throw new Error(`this.index2Info.has(globalTypeIndex) for ${groupName}::${operatorName}`);\r\n        this.index2Info.set(globalTypeIndex, ti);\r\n        if(!this.groupName2operatorName2Info.has(groupName)) this.groupName2operatorName2Info.set(groupName, new Map<string, TypeInfo>());\r\n        let operatorName2Info = this.groupName2operatorName2Info.get(groupName)!;\r\n        if(operatorName2Info.has(operatorName)) throw new Error(`operatorName2Info.has(operatorName) for ${groupName}::${operatorName}`);\r\n        operatorName2Info.set(operatorName, ti);\r\n    }\r\n\r\n    public CreateByIndex(index:number, parent: Flowchart, caption: string, configurationData:KeyValueTuple[]|null):FlowchartOperator|null\r\n    {\r\n        let ti=this.index2Info.get(index);\r\n        if(ti===undefined) return null;\r\n        return ti.Builder(parent, caption, ti, configurationData);\r\n    }\r\n\r\n    public GetTypeInfo(index:number):TypeInfo|null\r\n    {\r\n        let ti=this.index2Info.get(index);\r\n        if(ti===undefined) return null;\r\n        return ti;\r\n    }\r\n\r\n    public populateOperatorLib(parent: HTMLDivElement, onmousedownHandler: (e:MouseEvent, ti:TypeInfo)=>any) { \r\n        let y = 10;\r\n        let top = $.Html(parent, \"ul\", [], []);\r\n        for (const kv of this.groupName2operatorName2Info.entries()) {\r\n            let groupName = kv[0];\r\n            $.Html(top, \"li\", [], [], groupName);\r\n            let ul = $.Html(top, \"ul\", [], [\"nested\"]);\r\n            for (const info of kv[1].values()) {\r\n                let li = $.Html(ul, \"li\", [], [], info.OperatorName);\r\n                li.onmousedown = (e) => onmousedownHandler(e, info);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static Build():OperatorRegistry{\r\n        let r:OperatorRegistry = new OperatorRegistry();\r\n        r.Register(1, Basic, \"AND\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_ANDOperator(p, ca, ti, co));\r\n        r.Register(2, Basic, \"OR\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_OROperator(p, ca, ti, co));\r\n        r.Register(3, Basic, \"XOR\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_XOROperator(p, ca, ti, co));\r\n        r.Register(4, Basic, \"NOT\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_NotOperator(p, ca, ti, co));\r\n        r.Register(5, Basic, \"RS\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_RSOperator(p, ca, ti, co));\r\n        r.Register(6, Basic, \"SR\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_SROperator(p, ca, ti, co));\r\n        r.Register(7, Basic,\"ConstTRUE\", PositionType.Input, SingletonType.Default, (p, ca, ti, co)=>new Basic_ConstTRUEOperator(p, ca, ti, co));\r\n        r.Register(8, Basic,\"ConstFALSE\", PositionType.Input, SingletonType.Default, (p, ca, ti, co)=>new Basic_ConstFALSEOperator(p, ca, ti, co));\r\n        r.Register(9, Basic, \"CNT\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_CNTOperator(p, ca, ti, co));\r\n        r.Register(10, Basic, \"Timekeeper\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_TimekeeperOperator(p, ca, ti, co));\r\n        r.Register(11, Basic,\"TON\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_TONOperator(p, ca, ti, co));\r\n        r.Register(12, Basic,\"TOF\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Basic_TOFOperator(p, ca, ti, co));\r\n        \r\n        r.Register(13, Arithmetic, \"ADD\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_ADDOperator(p, ca, ti, co));\r\n        r.Register(14, Arithmetic, \"SUB\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_SUBOperator(p, ca, ti, co));\r\n        r.Register(15, Arithmetic, \"MULTIPLY\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_MULTIPLYOperator(p, ca, ti, co));\r\n        r.Register(16, Arithmetic, \"DIVIDE\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_DIVIDEOperator(p, ca, ti, co));\r\n        r.Register(17, Arithmetic, \"MAX\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_MAXOperator(p, ca, ti, co));\r\n        r.Register(18, Arithmetic, \"MIN\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_MINOperator(p, ca, ti, co));\r\n        r.Register(19, Arithmetic,\"GreaterThan\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_GreaterThanOperator(p, ca, ti, co));\r\n        r.Register(20, Arithmetic,\"LessThan\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_LessThanOperator(p, ca, ti, co));\r\n        r.Register(21, Arithmetic, \"ConstINT\", PositionType.Input, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_ConstINTOperator(p, ca, ti, co));\r\n        r.Register(22, Arithmetic, \"LIMIT\", PositionType.Input, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_LIMITOperator(p, ca, ti, co));\r\n        r.Register(23, Arithmetic, \"LIMITMONITOR\", PositionType.Input, SingletonType.Default, (p, ca, ti, co)=>new Arithmetic_LIMITMONITOROperator(p, ca, ti, co));\r\n\r\n        r.Register(24, Converter, \"Bool2Color\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Bool2ColorConvert(p, ca, ti, co));\r\n        r.Register(25, Converter, \"Bool2Int\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Bool2IntConvert(p, ca, ti, co));\r\n        r.Register(26, Converter, \"Int2Bool\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Int2BoolConvert(p, ca, ti, co));\r\n        r.Register(27, Converter, \"Int2Float\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Int2FloatConvert(p, ca, ti, co));\r\n        r.Register(28, Converter, \"Int2Color\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Int2ColorConvert(p, ca, ti, co));\r\n        r.Register(29, Converter, \"Float2Int\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Float2IntConvert(p, ca, ti, co));\r\n        \r\n        r.Register(30, Input, \"GreenButton\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Input_GreenButtonOperator(p, ca, ti, co));\r\n        r.Register(31, Input, \"EncoderButton\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Input_EncoderButtonOperator(p, ca, ti, co));\r\n        r.Register(32, Input, \"EncoderTicks\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Input_EncoderTicksOperator(p, ca, ti, co));\r\n        r.Register(33, Input, \"RedButton\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Input_RedButtonOperator(p, ca, ti, co));\r\n        \r\n        r.Register(34, Sensor, \"Movement\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_MovementOperator(p, ca, ti, co));\r\n        r.Register(35, Sensor, \"AirTemperatureDS18\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirTemperatureDS18Operator(p, ca, ti, co));\r\n        r.Register(36, Sensor, \"AirTemperatureBME\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirTemperatureBMEOperator(p, ca, ti, co));\r\n        r.Register(37, Sensor, \"AirHumidity\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirHumidityOperator(p, ca, ti, co));\r\n        r.Register(38, Sensor, \"AirPressure\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirPressureOperator(p, ca, ti, co));\r\n        r.Register(39, Sensor, \"AirCO2\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirCO2Operator(p, ca, ti, co));\r\n        r.Register(40, Sensor, \"AirQuality\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AirQualityOperator(p, ca, ti, co));\r\n        r.Register(41, Sensor, \"AmbientBrightness\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AmbientBrightnessOperator(p, ca, ti, co));\r\n        r.Register(42, Sensor, \"AmbientNoise\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_AmbientNoise(p, ca, ti, co));\r\n        r.Register(43, Sensor, \"ExternalPressure\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_ExternalPressure(p, ca, ti, co));\r\n        r.Register(44, Sensor, \"HeaterTemperature\", PositionType.Input, SingletonType.Singleton, (p, ca, ti, co)=>new Sensor_HeaterTemperatureOperator(p, ca, ti, co));\r\n        \r\n        r.Register(45, Output, \"Relay\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_RelayOperator(p, ca, ti, co));\r\n        r.Register(46, Output, \"RedLed\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_RedLedOperator(p, ca, ti, co));\r\n        r.Register(47, Output, \"YellowLed\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_YellowLedOperator(p, ca, ti, co));\r\n        r.Register(48, Output, \"GreenLed\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_GreenLedOperator(p, ca, ti, co));\r\n        r.Register(49, Output, \"LED3\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Led3Operator(p, ca, ti, co));\r\n        r.Register(50, Output, \"LED4\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Led4Operator(p, ca, ti, co));\r\n        r.Register(51, Output, \"LED5\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Led5Operator(p, ca, ti, co));\r\n        r.Register(52, Output, \"LED6\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Led6Operator(p, ca, ti, co));\r\n        r.Register(53, Output, \"LED7\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Led7Operator(p, ca, ti, co));\r\n        r.Register(54, Output, \"Fan1\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Fan1Operator(p, ca, ti, co));\r\n        r.Register(55, Output, \"Fan2\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_Fan2Operator(p, ca, ti, co));\r\n        r.Register(56, Output, \"PowerLed\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Output_PowerLedOperator(p, ca, ti, co));\r\n\r\n        r.Register(57, Sound, \"Melody\", PositionType.Output, SingletonType.Singleton, (p, ca, ti, co)=>new Sound_Melody(p, ca, ti, co));\r\n        \r\n        r.Register(58, Control, \"PID\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Control_PID(p, ca, ti, co));\r\n        \r\n        \r\n        r.Register(100, Custom, \"XYZXYZBlock\", PositionType.Default, SingletonType.Default, (p, ca, ti, co)=>new Custom_XYZBlock(p, ca, ti, co))\r\n        return r;\r\n    }\r\n}\r\n\r\nclass Sensor_CommonSensorOperator extends FlowchartOperator {\r\n    private sensorValue:number=0;\r\n    private O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null, nameOfOutput:string, readonly minOutput:number, readonly maxOutput:number) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, nameOfOutput, 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([], [this.O]);\r\n        this.ElementSvgG.onclick=(e)=>{\r\n            console.log(\"Input_CommonButtonOperator this.ElementSvgG.onclick\");\r\n            parent._notifyOperatorClicked(this, e);\r\n            this.sensorValue=this.sensorValue==this.minOutput?this.maxOutput:this.minOutput;\r\n        }\r\n    }\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this.sensorValue=this.minOutput;\r\n    }\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        ctx.SetInteger(this.O, this.sensorValue);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class Sensor_HeaterTemperatureOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"DegreesCelsius\", 25, 65);\r\n    }\r\n}\r\n\r\nexport class Sensor_AirTemperatureDS18Operator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Temperature*10\", 180, 250);\r\n    }\r\n}\r\n\r\nexport class Sensor_AirTemperatureBMEOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Temperature*10\", 180, 250);\r\n    }\r\n}\r\n\r\nexport class Sensor_AirHumidityOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"RelHumid%\", 40, 60);\r\n    }\r\n}\r\nexport class Sensor_AirPressureOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Pa\", 800, 1200);\r\n    }\r\n}\r\n\r\nexport class Sensor_AirCO2Operator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"CO2ppm\", 400, 1500);\r\n    }\r\n}\r\n\r\nexport class Sensor_AirQualityOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Quality%\", 20, 80);\r\n    }\r\n}\r\n\r\n\r\nexport class Sensor_AmbientBrightnessOperator extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Lux\", 200, 700);\r\n    }\r\n}\r\n\r\nexport class Sensor_AmbientNoise extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"NoisedBA\", 30, 80);\r\n    }\r\n}\r\n\r\nexport class Sensor_ExternalPressure extends Sensor_CommonSensorOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"Pa\", 1000, 2000);\r\n    }\r\n}\r\n\r\n\r\nexport class Sensor_MovementOperator extends FlowchartOperator {\r\n    public StorageId:string;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        let O = new FlowchartOutputConnector(this, \"Movement\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([], [O]);\r\n        this.StorageId=\"4711\";\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport class Basic_ANDOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.BOOLEAN);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.BOOLEAN);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetBoolean(this.A);\r\n        let B = ctx.GetBoolean(this.B);\r\n        ctx.SetBoolean(this.C, A && B);\r\n    }\r\n}\r\n\r\nexport class Basic_OROperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.BOOLEAN);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.BOOLEAN);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0,ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetBoolean(this.A);\r\n        let B = ctx.GetBoolean(this.B);\r\n        ctx.SetBoolean(this.C, A || B);\r\n    }\r\n}\r\n\r\nexport class Basic_XOROperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.BOOLEAN);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.BOOLEAN);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0,ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetBoolean(this.A);\r\n        let B = ctx.GetBoolean(this.B);\r\n        ctx.SetBoolean(this.C, A ? !B : B);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_ADDOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, A + B);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_SUBOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, A - B);\r\n    }\r\n}\r\n\r\n\r\nexport class Arithmetic_MULTIPLYOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, A * B);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_DIVIDEOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, A / B);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_MAXOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, Math.max(A,B));\r\n    }\r\n}\r\n\r\nexport class Arithmetic_MINOperator extends FlowchartOperator {\r\n    private A:FlowchartInputConnector;\r\n    private B:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        this.B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.A, this.B], [this.C]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let A = ctx.GetInteger(this.A);\r\n        let B = ctx.GetInteger(this.B);\r\n        ctx.SetInteger(this.C, Math.min(A,B));\r\n    }\r\n}\r\n\r\nexport class Basic_RSOperator extends FlowchartOperator {\r\n    private R:FlowchartInputConnector;\r\n    private S:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    private state:boolean=false;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.R = new FlowchartInputConnector(this, \"R\", 0, ConnectorType.BOOLEAN);\r\n        this.S = new FlowchartInputConnector(this, \"S\", 1, ConnectorType.BOOLEAN);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.R, this.S], [this.C]);\r\n    }\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this.state=false;\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        if(ctx.GetBoolean(this.R)) this.state=false;\r\n        else if(ctx.GetBoolean(this.S)) this.state = true;\r\n        ctx.SetBoolean(this.C, this.state);\r\n    }\r\n}\r\n\r\nexport class Basic_SROperator extends FlowchartOperator {\r\n    private R:FlowchartInputConnector;\r\n    private S:FlowchartInputConnector;\r\n    private C:FlowchartOutputConnector;\r\n    private state:boolean=false;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.R = new FlowchartInputConnector(this, \"R\", 0, ConnectorType.BOOLEAN);\r\n        this.S = new FlowchartInputConnector(this, \"S\", 1, ConnectorType.BOOLEAN);\r\n        this.C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.R, this.S], [this.C]);\r\n    }\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this.state=false;\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        if(ctx.GetBoolean(this.S)) this.state = true;\r\n        else if(ctx.GetBoolean(this.R)) this.state=false;\r\n        ctx.SetBoolean(this.C, this.state);\r\n    }\r\n}\r\n\r\nexport class Basic_CNTOperator extends FlowchartOperator {\r\n    private CountUp:FlowchartInputConnector;\r\n    private Reset:FlowchartInputConnector;\r\n    private PresetValue:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    private CurrentValue:FlowchartOutputConnector;\r\n    private _CurrentValue:number=0;\r\n    private lastInputValue:boolean=false;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.CountUp = new FlowchartInputConnector(this, \"CU\", 0, ConnectorType.BOOLEAN);\r\n        this.Reset = new FlowchartInputConnector(this, \"Reset\", 1, ConnectorType.BOOLEAN);\r\n        this.PresetValue = new FlowchartInputConnector(this, \"PV\", 2, ConnectorType.INTEGER);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.CurrentValue = new FlowchartOutputConnector(this, \"CV\", 1, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.CountUp, this.Reset, this.PresetValue], [this.OUT, this.CurrentValue]);\r\n    }\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this._CurrentValue=0;\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetBoolean(this.CountUp);\r\n        let PV=ctx.GetInteger(this.PresetValue);\r\n        if(ctx.GetBoolean(this.Reset)){\r\n            this._CurrentValue=0;\r\n        }else if(this.lastInputValue==false && currentInputValue==true && this._CurrentValue<PV){\r\n            this._CurrentValue++;\r\n            console.log(\"Logic_CNTOperator this._CurrentValue++; \"+this._CurrentValue);\r\n        }\r\n        ctx.SetBoolean(this.OUT, this._CurrentValue>=PV);//kann auch durch Veränderung des PV passieren, deshalb nicht im if\r\n        ctx.SetInteger(this.CurrentValue, this._CurrentValue);\r\n        this.lastInputValue=currentInputValue\r\n    }\r\n}\r\n\r\n\r\nexport class Basic_TimekeeperOperator extends FlowchartOperator {\r\n    private CountUp:FlowchartInputConnector;\r\n    private Reset:FlowchartInputConnector;\r\n    private PresetValue:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    private CurrentValue:FlowchartOutputConnector;\r\n    private _CurrentValueMs:number=0;\r\n    private lastInputValue:boolean=false;\r\n    private lastMillis:number=0;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.CountUp = new FlowchartInputConnector(this, \"CU\", 0, ConnectorType.BOOLEAN);\r\n        this.Reset = new FlowchartInputConnector(this, \"Reset\", 1, ConnectorType.BOOLEAN);\r\n        this.PresetValue = new FlowchartInputConnector(this, \"PV_ms\", 2, ConnectorType.INTEGER);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.CurrentValue = new FlowchartOutputConnector(this, \"CV_ms\", 1, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.CountUp, this.Reset, this.PresetValue], [this.OUT, this.CurrentValue]);\r\n    }\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this._CurrentValueMs=0;\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetBoolean(this.CountUp);\r\n        let PV=ctx.GetInteger(this.PresetValue);\r\n        if(ctx.GetBoolean(this.Reset)){\r\n            this._CurrentValueMs=0;\r\n            this.lastMillis=ctx.GetMillis();\r\n        }else if(this.lastInputValue==false && currentInputValue==true && this._CurrentValueMs<PV){\r\n            let now = ctx.GetMillis();\r\n            this._CurrentValueMs+=now-this.lastMillis;\r\n            this.lastMillis=now;\r\n            console.log(\"Logic_CNTOperator this._CurrentValue++; \"+this._CurrentValueMs);\r\n        }\r\n        ctx.SetBoolean(this.OUT, this._CurrentValueMs>=PV);//kann auch durch Veränderung des PV passieren, deshalb nicht im if\r\n        ctx.SetInteger(this.CurrentValue, this._CurrentValueMs);\r\n        this.lastInputValue=currentInputValue\r\n    }\r\n}\r\n\r\nexport class Basic_NotOperator extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.BOOLEAN);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        ctx.SetBoolean(this.OUT, !ctx.GetBoolean(this.IN));\r\n    }\r\n\r\n}\r\nclass Input_CommonButtonOperator extends FlowchartOperator {\r\n    private state:boolean=false;\r\n    private O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, \"IsPressed\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([], [this.O]);\r\n        this.ElementSvgG.onclick=(e)=>{\r\n            console.log(\"Input_CommonButtonOperator this.ElementSvgG.onclick\");\r\n            parent._notifyOperatorClicked(this, e);\r\n            this.state=!this.state;\r\n        }\r\n    }\r\n\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        this.state=false;\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        this.box.classList.remove(this.state?\"False\":\"True\");\r\n        this.box.classList.add(this.state?\"True\":\"False\");\r\n        ctx.SetBoolean(this.O, this.state);\r\n    }\r\n\r\n    OnSimulationStop(ctx:SimulationContext){\r\n        this.box.classList.remove(\"False\", \"True\");\r\n    }\r\n}\r\n\r\n\r\nexport class Input_GreenButtonOperator extends Input_CommonButtonOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Input_EncoderButtonOperator extends Input_CommonButtonOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Input_RedButtonOperator extends Input_CommonButtonOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Input_EncoderTicksOperator extends FlowchartOperator {\r\n    public StorageId:string;\r\n    protected O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, \"Ticks\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([], [this.O]);\r\n        this.StorageId=\"4711\";\r\n    }\r\n\r\n    public OnSimulationStart(ctx: SimulationContext): void {\r\n        ctx.SetInteger(this.O, 1000);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class Output_RelayOperator extends FlowchartOperator {\r\n    private I:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.I=new FlowchartInputConnector(this, \"Relay\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.I], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let state = ctx.GetBoolean(this.I);\r\n        this.box.classList.remove(state?\"False\":\"True\");\r\n        this.box.classList.add(state?\"True\":\"False\");\r\n    }\r\n}\r\n\r\nexport class Output_Fan1Operator extends FlowchartOperator {\r\n    private I:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.I=new FlowchartInputConnector(this, \"Power%\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.I], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let state = ctx.GetInteger(this.I);\r\n        this.box.innerHTML=state+\"%\";\r\n    }\r\n}\r\n\r\nexport class Output_Fan2Operator extends FlowchartOperator {\r\n    private I:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.I=new FlowchartInputConnector(this, \"Power%\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.I], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let state = ctx.GetInteger(this.I);\r\n        this.box.innerHTML=state+\"%\";\r\n    }\r\n}\r\n\r\nexport class Output_PowerLedOperator extends FlowchartOperator {\r\n    private I:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.I=new FlowchartInputConnector(this, \"Power%\", 0, ConnectorType.FLOAT);\r\n        this.AppendConnectors([this.I], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let state = ctx.GetFloat(this.I);\r\n        this.box.innerHTML=state+\"%\";\r\n    }\r\n}\r\n\r\n\r\nclass Output_CommonLedOperator extends FlowchartOperator {\r\n    protected  I:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null, protected colorOnTRUE:string, protected colorOnFALSE:string) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.I = new FlowchartInputConnector(this, \"LED\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.I], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        let state = ctx.GetBoolean(this.I);\r\n        this.box.style.fill=state?this.colorOnTRUE:this.colorOnFALSE;\r\n    }\r\n\r\n    OnSimulationStop(ctx:SimulationContext){\r\n        this.box.style.removeProperty(\"fill\");\r\n    }\r\n}\r\n\r\n\r\nexport class Output_RedLedOperator extends Output_CommonLedOperator {\r\n\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"red\", \"grey\");\r\n    }\r\n}\r\n\r\nexport class Output_YellowLedOperator extends Output_CommonLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"yellow\", \"grey\");\r\n    }\r\n}\r\n\r\nexport class Output_GreenLedOperator extends Output_CommonLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData, \"green\", \"grey\");\r\n    }\r\n}\r\n\r\nexport class Output_CommonRGBLedOperator extends FlowchartOperator {\r\n    protected LED:FlowchartInputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.LED = new FlowchartInputConnector(this, \"LED\", 0, ConnectorType.COLOR);\r\n        this.AppendConnectors([this.LED], []);\r\n    }\r\n\r\n    OnSimulationStep(ctx:SimulationContext){\r\n        this.box.style.fill=ctx.GetColor(this.LED);\r\n    }\r\n\r\n    OnSimulationStop(ctx:SimulationContext){\r\n        this.box.style.removeProperty(\"fill\");\r\n    }\r\n}\r\n\r\nexport class Output_Led3Operator extends Output_CommonRGBLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Output_Led4Operator extends Output_CommonRGBLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Output_Led5Operator extends Output_CommonRGBLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Output_Led6Operator extends Output_CommonRGBLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Output_Led7Operator extends Output_CommonRGBLedOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n    }\r\n}\r\n\r\nexport class Basic_ConstTRUEOperator extends FlowchartOperator {\r\n    protected O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, \"TRUE\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([], [this.O]);\r\n    }\r\n\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        ctx.SetBoolean(this.O, false);\r\n    }\r\n}\r\n\r\nexport class Basic_ConstFALSEOperator extends FlowchartOperator {\r\n\r\n    protected O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, \"TRUE\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([], [this.O]);\r\n    }\r\n\r\n    OnSimulationStart(ctx:SimulationContext){\r\n        ctx.SetBoolean(this.O, true);\r\n    }\r\n}\r\n\r\nexport class Sound_Melody extends FlowchartOperator {\r\n  \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        let A = new FlowchartInputConnector(this, \"Trigger\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([A], []);\r\n        this.cfg_setDefault(SONG_INDEX, 0);\r\n    }\r\n\r\n    private songIndexHTMLSelect:HTMLSelectElement|null=null;\r\n    public PopulateProperyGrid(tbody:HTMLTableSectionElement):boolean\r\n    {\r\n        this.songIndexHTMLSelect=$.InputSelect(tbody, Song.default(), SONG_INDEX, this.configurationData);\r\n        return true;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        if(this.songIndexHTMLSelect==null) return;\r\n        this.cfg_setValue(SONG_INDEX, parseInt(this.songIndexHTMLSelect.value));\r\n    }\r\n\r\n    protected SerializeFurtherProperties(ctx:SerializeContextAndAdressMap):void{\r\n        ctx.ctx.writeS32(this.cfg_getValue(SONG_INDEX, 0));\r\n        return;\r\n    }\r\n}\r\n\r\nexport class Arithmetic_ConstINTOperator extends FlowchartOperator {\r\n    private O:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.O = new FlowchartOutputConnector(this, \"Out\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([], [this.O]);\r\n        this.cfg_setDefault(CONSTANT, 0);\r\n    }\r\n\r\n    private constantHTMLInput:HTMLInputElement|null=null;\r\n    public PopulateProperyGrid(tbody:HTMLTableSectionElement):boolean\r\n    {\r\n        this.constantHTMLInput=$.InputNumber(tbody, -32768, 32767, CONSTANT, this.configurationData);\r\n        return true;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        if(this.constantHTMLInput==null) return;\r\n        this.cfg_setValue(CONSTANT, this.constantHTMLInput.valueAsNumber);\r\n    }\r\n\r\n    protected SerializeFurtherProperties(ctx:SerializeContextAndAdressMap):void{\r\n        ctx.ctx.writeS32(this.cfg_getValue(CONSTANT, 0));\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStart(ctx:SimulationContext){\r\n        ctx.SetInteger(this.O, this.cfg_getValue(CONSTANT, 0));\r\n    }\r\n\r\n}\r\n\r\n\r\nconst COLOR_TRUE=\"Color for TRUE\";\r\nconst COLOR_FALSE=\"Color for FALSE\";\r\n\r\nexport class Bool2ColorConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.BOOLEAN);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.COLOR);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    private colorTRUEHTMLInput:HTMLInputElement|null=null;\r\n    private colorFALSEHTMLInput:HTMLInputElement|null=null;\r\n    \r\n    public PopulateProperyGrid(tbody:HTMLTableSectionElement):boolean\r\n    {\r\n        this.colorTRUEHTMLInput=$.InputColor(tbody, COLOR_TRUE, this.configurationData);\r\n        this.colorFALSEHTMLInput=$.InputColor(tbody, COLOR_FALSE, this.configurationData);\r\n        return true;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        if(this.colorTRUEHTMLInput==null || this.colorFALSEHTMLInput==null) return;\r\n        this.cfg_setValue(COLOR_TRUE, this.colorTRUEHTMLInput.value);\r\n        this.cfg_setValue(COLOR_FALSE, this.colorFALSEHTMLInput.value);\r\n    }\r\n\r\n    protected SerializeFurtherProperties(ctx:SerializeContextAndAdressMap):void{\r\n        let colorString = this.cfg_getValue(COLOR_TRUE, \"#ff0000\");\r\n        let colorNum=$.ColorDomString2ColorNum(colorString);\r\n        ctx.ctx.writeU32(colorNum);\r\n        colorString = this.cfg_getValue(COLOR_FALSE, \"#000000\");\r\n        colorNum=$.ColorDomString2ColorNum(colorString);\r\n        ctx.ctx.writeU32(colorNum);\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetBoolean(this.IN);\r\n        let color =currentInputValue?this.cfg_getValue(COLOR_TRUE, \"RED\"):this.cfg_getValue(COLOR_FALSE, \"GREY\");\r\n        ctx.SetColor(this.OUT, color);\r\n    }\r\n}\r\n\r\nconst NUMBER_TRUE=\"Number for TRUE\";\r\nconst NUMBER_FALSE=\"Number for FALSE\";\r\n\r\nexport class Bool2IntConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    private numberTRUEHTMLInput:HTMLInputElement|null=null;\r\n    private numberFALSEHTMLInput:HTMLInputElement|null=null;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.BOOLEAN);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    public PopulateProperyGrid(tbody:HTMLTableSectionElement):boolean\r\n    {\r\n        this.numberTRUEHTMLInput=$.InputNumber(tbody, Number.MIN_VALUE, Number.MAX_VALUE, NUMBER_TRUE, this.configurationData);\r\n        this.numberFALSEHTMLInput=$.InputNumber(tbody, Number.MIN_VALUE, Number.MAX_VALUE, NUMBER_FALSE, this.configurationData);\r\n        return true;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        if(this.numberFALSEHTMLInput==null || this.numberTRUEHTMLInput==null) return;\r\n        this.cfg_setValue(NUMBER_TRUE, this.numberTRUEHTMLInput.valueAsNumber);\r\n        this.cfg_setValue(NUMBER_FALSE, this.numberFALSEHTMLInput.valueAsNumber);\r\n    }\r\n\r\n    protected SerializeFurtherProperties(ctx:SerializeContextAndAdressMap):void{\r\n        ctx.ctx.writeS32(this.cfg_getValue(NUMBER_TRUE, 1));\r\n        ctx.ctx.writeS32(this.cfg_getValue(NUMBER_FALSE, 0));\r\n        return;\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let i = ctx.GetBoolean(this.IN);\r\n        ctx.SetInteger(this.OUT, i?this.cfg_getValue(NUMBER_TRUE, 1):this.cfg_getValue(NUMBER_FALSE, 0));\r\n    }\r\n}\r\n\r\nexport class Int2BoolConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.INTEGER);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let i = ctx.GetInteger(this.IN);\r\n        ctx.SetBoolean(this.OUT, i!=0);\r\n    }\r\n}\r\n\r\nexport class Int2FloatConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.INTEGER);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.FLOAT);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let i = ctx.GetInteger(this.IN);\r\n        ctx.SetFloat(this.OUT, i);\r\n    }\r\n}\r\n\r\n\r\nexport class Int2ColorConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.INTEGER);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.COLOR);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetInteger(this.IN);\r\n        ctx.SetColor(this.OUT, currentInputValue?\"RED\": \"GREY\");//TODO: Has to be improved\r\n    }\r\n}\r\n\r\nexport class Float2IntConvert extends FlowchartOperator {\r\n    private IN:FlowchartInputConnector;\r\n    private OUT:FlowchartOutputConnector;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.IN = new FlowchartInputConnector(this, \"IN\", 0, ConnectorType.FLOAT);\r\n        this.OUT = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.IN], [this.OUT]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let i = ctx.GetFloat(this.IN);\r\n        ctx.SetInteger(this.OUT, i);\r\n    }\r\n}\r\n\r\nexport class Basic_TONOperator extends FlowchartOperator {\r\n    private inputTRIGGER:FlowchartInputConnector;\r\n    private inputPresetTime_msecs:FlowchartInputConnector;\r\n    private output:FlowchartOutputConnector;\r\n    private outputElapsedTime_msecs:FlowchartOutputConnector;\r\n    private lastInputValue:boolean=false;\r\n    private inputPositiveEdge:number = Number.MAX_VALUE;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.inputTRIGGER = new FlowchartInputConnector(this, \"TRIGGER\", 0, ConnectorType.BOOLEAN);\r\n        this.inputPresetTime_msecs = new FlowchartInputConnector(this, \"PT_MS\", 1, ConnectorType.INTEGER);\r\n        this.output = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.outputElapsedTime_msecs = new FlowchartOutputConnector(this, \"ET_MS\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.inputTRIGGER, this.inputPresetTime_msecs], [this.output,this.outputElapsedTime_msecs]);\r\n    }\r\n\r\n    public OnSimulationStart(ctx:SimulationContext){\r\n        this.inputPositiveEdge = Number.MAX_VALUE;\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetBoolean(this.inputTRIGGER);\r\n        let presetTime_msecs = ctx.GetInteger(this.inputPresetTime_msecs);\r\n        let now = ctx.GetMillis();\r\n        if(this.lastInputValue==false && currentInputValue==true){\r\n            this.inputPositiveEdge=now;\r\n        }\r\n        else if(currentInputValue==false){\r\n            this.inputPositiveEdge=Number.MAX_VALUE;\r\n        }\r\n        this.lastInputValue=currentInputValue;\r\n        let elapsed = (now-this.inputPositiveEdge);\r\n        ctx.SetBoolean(this.output, elapsed>=presetTime_msecs);\r\n        ctx.SetInteger(this.outputElapsedTime_msecs, elapsed);\r\n    }\r\n}\r\n\r\nexport class Basic_TOFOperator extends FlowchartOperator {\r\n  \r\n    private inputTRIGGER:FlowchartInputConnector;\r\n    private inputPresetTime_msecs:FlowchartInputConnector;\r\n    private output:FlowchartOutputConnector;\r\n    private outputElapsedTime_msecs:FlowchartOutputConnector;\r\n    private lastInputValue:boolean=false;\r\n    private inputNegativeEdge:number = 0;\r\n    \r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.inputTRIGGER = new FlowchartInputConnector(this, \"TRIGGER\", 0, ConnectorType.BOOLEAN);\r\n        this.inputPresetTime_msecs = new FlowchartInputConnector(this, \"PT_MS\", 1, ConnectorType.INTEGER);\r\n        this.output = new FlowchartOutputConnector(this, \"OUT\", 0, ConnectorType.BOOLEAN);\r\n        this.outputElapsedTime_msecs = new FlowchartOutputConnector(this, \"ET_MS\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.inputTRIGGER, this.inputPresetTime_msecs], [this.output,this.outputElapsedTime_msecs]);\r\n    }\r\n\r\n    public OnSimulationStart(ctx:SimulationContext){\r\n        this.inputNegativeEdge = 0;\r\n    }\r\n\r\n    public OnSimulationStep(ctx:SimulationContext){\r\n        let currentInputValue = ctx.GetBoolean(this.inputTRIGGER);\r\n        let presetTime_msecs = ctx.GetInteger(this.inputPresetTime_msecs);\r\n        let now = ctx.GetMillis();\r\n        if(this.lastInputValue==true && currentInputValue==false){\r\n            this.inputNegativeEdge=now;\r\n        }\r\n        else if(currentInputValue==true){\r\n            this.inputNegativeEdge=0;\r\n        }\r\n        this.lastInputValue=currentInputValue;\r\n        let elapsed = (now-this.inputNegativeEdge);\r\n        elapsed=Math.min(elapsed, presetTime_msecs)\r\n        ctx.SetBoolean(this.output, currentInputValue || (elapsed<presetTime_msecs));\r\n        ctx.SetInteger(this.outputElapsedTime_msecs, elapsed);\r\n    }\r\n}\r\n\r\n\r\nexport class Arithmetic_LIMITOperator extends FlowchartOperator {\r\n    protected Minimum:FlowchartInputConnector;\r\n    protected Input:FlowchartInputConnector;\r\n    protected Maximum:FlowchartInputConnector;\r\n    protected Output:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.Minimum = new FlowchartInputConnector(this, \"Minimum\", 0, ConnectorType.INTEGER);\r\n        this.Input = new FlowchartInputConnector(this, \"Input\", 1, ConnectorType.INTEGER);\r\n        this.Maximum = new FlowchartInputConnector(this, \"Maximum\", 2, ConnectorType.INTEGER);\r\n        this.Output = new FlowchartOutputConnector(this, \"Output\", 0, ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.Minimum, this.Input, this.Maximum], [this.Output]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx: SimulationContext): void {\r\n        let i = ctx.GetInteger(this.Input);\r\n        let min = ctx.GetInteger(this.Minimum);\r\n        let max = ctx.GetInteger(this.Minimum);\r\n        ctx.SetInteger(this.Output, i>max?max:i<min?min:i);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_LIMITMONITOROperator extends FlowchartOperator {\r\n    protected Minimum:FlowchartInputConnector;\r\n    protected Input:FlowchartInputConnector;\r\n    protected Maximum:FlowchartInputConnector;\r\n    protected Hysterese:FlowchartInputConnector;\r\n    protected LLE:FlowchartOutputConnector;\r\n    protected ULE:FlowchartOutputConnector;\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.Minimum = new FlowchartInputConnector(this, \"Minimum\", 0, ConnectorType.INTEGER);\r\n        this.Input = new FlowchartInputConnector(this, \"Input\", 1, ConnectorType.INTEGER);\r\n        this.Maximum = new FlowchartInputConnector(this, \"Maximum\", 2, ConnectorType.INTEGER);\r\n        this.Hysterese = new FlowchartInputConnector(this, \"Hysterese\", 3, ConnectorType.INTEGER);\r\n        this.LLE = new FlowchartOutputConnector(this, \"LLE\", 0, ConnectorType.BOOLEAN);\r\n        this.ULE = new FlowchartOutputConnector(this, \"ULE\", 1, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([this.Minimum, this.Input, this.Maximum], [this.LLE, this.ULE]);\r\n    }\r\n\r\n    public OnSimulationStep(ctx: SimulationContext): void {\r\n        let i = ctx.GetInteger(this.Input);\r\n        let min = ctx.GetInteger(this.Minimum);\r\n        let max = ctx.GetInteger(this.Minimum);\r\n        let h = ctx.GetInteger(this.Hysterese);\r\n        if(i>max){\r\n            ctx.SetBoolean(this.ULE, true);\r\n        }else if(i<=max-h){\r\n            ctx.SetBoolean(this.ULE, false);\r\n        }\r\n        if(i<min){\r\n            ctx.SetBoolean(this.LLE, true);\r\n        } else if(i>=min+h){\r\n            ctx.SetBoolean(this.LLE, false);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Arithmetic_GreaterThanOperator extends FlowchartOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        let A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        let B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        let C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([A, B], [C]);\r\n    }\r\n}\r\n\r\nexport class Arithmetic_LessThanOperator extends FlowchartOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        let A = new FlowchartInputConnector(this, \"A\", 0, ConnectorType.INTEGER);\r\n        let B = new FlowchartInputConnector(this, \"B\", 1, ConnectorType.INTEGER);\r\n        let C = new FlowchartOutputConnector(this, \"C\", 0, ConnectorType.BOOLEAN);\r\n        this.AppendConnectors([A, B], [C]);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class Custom_XYZBlock extends FlowchartOperator {\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        let A = new FlowchartInputConnector(this, \"TempVL\", 0, ConnectorType.INTEGER);\r\n        let B = new FlowchartInputConnector(this, \"TempRL\", 1, ConnectorType.INTEGER);\r\n        let B1 = new FlowchartInputConnector(this, \"Switch\", 2, ConnectorType.BOOLEAN);\r\n        let C = new FlowchartOutputConnector(this, \"Motor\", 0,ConnectorType.BOOLEAN);\r\n        let C1 = new FlowchartOutputConnector(this, \"Valve\", 1,ConnectorType.INTEGER);\r\n        this.AppendConnectors([A, B, B1], [C, C1]);\r\n    }\r\n\r\n    private value1HTMLInput:HTMLInputElement|null=null;\r\n    private value2HTMLInput:HTMLInputElement|null=null;\r\n    private value3HTMLInput:HTMLInputElement|null=null;\r\n    private color1HTMLInput:HTMLInputElement|null=null;\r\n    public PopulateProperyGrid(tbody:HTMLTableSectionElement):boolean\r\n    {\r\n        this.value1HTMLInput=$.InputNumber(tbody, -32768, 32767, \"Value1\", this.configurationData);\r\n        this.value1HTMLInput=$.InputNumber(tbody, -32768, 32767, \"Value2\", this.configurationData);\r\n        this.value1HTMLInput=$.InputNumber(tbody, -32768, 32767, \"Value3\", this.configurationData);\r\n        this.color1HTMLInput=$.InputColor(tbody, \"Color1\", this.configurationData);\r\n        return true;\r\n    }\r\n\r\n    public SavePropertyGrid(tbody:HTMLTableSectionElement){\r\n        this.cfg_setValue(\"Value1\", this.value1HTMLInput!.valueAsNumber);\r\n        this.cfg_setValue(\"Value2\", this.value2HTMLInput!.valueAsNumber);\r\n        this.cfg_setValue(\"Value3\", this.value3HTMLInput!.valueAsNumber);\r\n        this.cfg_setValue(\"Color1\", this.color1HTMLInput!.valueAsNumber);\r\n    }\r\n\r\n    protected SerializeFurtherProperties(ctx:SerializeContextAndAdressMap):void{\r\n        ctx.ctx.writeS32(this.cfg_getValue(\"Value1\", 0));\r\n        ctx.ctx.writeS32(this.cfg_getValue(\"Value2\", 0));\r\n        ctx.ctx.writeS32(this.cfg_getValue(\"Value3\", 0));\r\n        let colorString = this.cfg_getValue(\"Color1\", \"#000000\");\r\n        let colorNum=$.ColorDomString2ColorNum(colorString);\r\n        ctx.ctx.writeU32(colorNum);\r\n        return;\r\n    }\r\n}\r\n\r\nexport class Control_PID extends FlowchartOperator {\r\n    private inputActualValue:FlowchartInputConnector;\r\n    private inputSetpoint:FlowchartInputConnector;\r\n    private inputKP:FlowchartInputConnector;\r\n    private inputKI:FlowchartInputConnector;\r\n    private inputKD:FlowchartInputConnector;\r\n    private output:FlowchartOutputConnector;\r\n\r\n\r\n    constructor(parent: Flowchart, caption: string, ti:TypeInfo, configurationData:KeyValueTuple[]|null) {\r\n        super(parent, caption, ti, configurationData);\r\n        this.inputActualValue = new FlowchartInputConnector(this, \"Actual\", 0, ConnectorType.FLOAT);\r\n        this.inputSetpoint = new FlowchartInputConnector(this, \"Setpoint\", 1, ConnectorType.FLOAT);\r\n        this.inputKP= new FlowchartInputConnector(this, \"KP\", 2, ConnectorType.FLOAT);\r\n        this.inputKI= new FlowchartInputConnector(this, \"KI\", 3, ConnectorType.FLOAT);\r\n        this.inputKD= new FlowchartInputConnector(this, \"KD\", 4, ConnectorType.FLOAT);\r\n        this.output = new FlowchartOutputConnector(this, \"Out\", 1,ConnectorType.INTEGER);\r\n        this.AppendConnectors([this.inputActualValue, this.inputSetpoint, this.inputKP, this.inputKI, this.inputKD], [this.output]);\r\n    }\r\n}","\r\nexport class SerializeContext {\r\n    public writeGUID(guid: Uint8Array) {\r\n        for (let i = 0; i < 16; i++) {\r\n            this.bufferDV.setUint8(this.bufferOffset + i, guid[i]);\r\n        }\r\n        this.bufferOffset += 16;\r\n    }\r\n\r\n    public consumeGUIDandCompare(compare:Uint8Array): boolean {\r\n        let val=true;\r\n        for (let i = 0; i < 16; i++) {\r\n            if(compare[i]!=this.bufferDV.getUint8(this.bufferOffset + i)){\r\n                val=false;\r\n                break;\r\n            }\r\n        }\r\n        this.bufferOffset += 16;\r\n        return val;\r\n    }\r\n    private bufferDV: DataView;\r\n    constructor(private buffer: ArrayBuffer, private bufferOffset: number = 0) {\r\n        this.bufferDV = new DataView(buffer);\r\n    }\r\n\r\n    public funhash(start:number, end:number):number{\r\n        end=Math.min(end, this.bufferDV.byteLength);\r\n        for(var i = start, h = 0xdeadbeef; i < end; i++)\r\n            h = Math.imul(h ^ this.bufferDV.getUint8(i), 2654435761);\r\n        return (h ^ h >>> 16) >>> 0;\r\n    }\r\n\r\n    public overwriteU32(theNumber: number, offset:number): void {\r\n        if(offset>this.bufferOffset-4) throw new Error(\"offset>this.bufferOffset-4\");\r\n        this.bufferDV.setUint32(offset, theNumber, true);\r\n    }\r\n    public writeS32(theNumber: number): void {\r\n        this.bufferDV.setInt32(this.bufferOffset, theNumber, true);\r\n        this.bufferOffset += 4;\r\n    }\r\n\r\n    public writeU32(theNumber: number): void {\r\n        this.bufferDV.setUint32(this.bufferOffset, theNumber, true);\r\n        this.bufferOffset += 4;\r\n    }\r\n\r\n    public writeF32(theNumber: number): void {\r\n        this.bufferDV.setFloat32(this.bufferOffset, theNumber, true);\r\n        this.bufferOffset += 4;\r\n    }\r\n\r\n    public readF32(): number {\r\n        let val = this.bufferDV.getFloat32(this.bufferOffset, true);\r\n        this.bufferOffset += 4;\r\n        return val;\r\n    }\r\n\r\n    public readU32(): number {\r\n        let val = this.bufferDV.getUint32(this.bufferOffset, true);\r\n        this.bufferOffset += 4;\r\n        return val;\r\n    }\r\n\r\n    public readS32(): number {\r\n        let val = this.bufferDV.getInt32(this.bufferOffset, true);\r\n        this.bufferOffset += 4;\r\n        return val;\r\n    }\r\n\r\n    public getResult(): ArrayBuffer {\r\n        return this.buffer.slice(0, this.bufferOffset);\r\n    }\r\n}\r\n","import { HashAndBufAndMaps, SortedOperatorsAndMaps } from \"./FlowchartCompiler\";\r\nimport { FlowchartInputConnector, FlowchartOutputConnector } from \"./FlowchartConnector\";\r\nimport { FlowchartOperator } from \"./FlowchartOperator\";\r\nimport { SimulationContext } from \"./SimulationContext\";\r\n\r\nexport class SimulationManager implements SimulationContext{\r\n    private booleans!: boolean[];\r\n    private integers!:number[];\r\n    private floats!:number[];\r\n    private colors!:string[];\r\n    private millisSince1970!:number;\r\n    private running:boolean=false;\r\n\r\n    constructor(private sortedOperatorsAndMaps: SortedOperatorsAndMaps){\r\n        this.resetDatastructures()!;\r\n    }\r\n\r\n    private resetDatastructures(){\r\n        this.booleans =new Array(this.sortedOperatorsAndMaps.typeIndex2maxOffset.get(0));\r\n        this.integers  = new Array(this.sortedOperatorsAndMaps.typeIndex2maxOffset.get(1));\r\n        this.floats  = new Array(this.sortedOperatorsAndMaps.typeIndex2maxOffset.get(2));\r\n        this.colors  = new Array(this.sortedOperatorsAndMaps.typeIndex2maxOffset.get(3));\r\n        this.millisSince1970=Date.now();\r\n    }\r\n\r\n\r\n    SetBoolean(outConn: FlowchartOutputConnector, value: boolean): void {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(0)!.get(outConn.GlobalConnectorIndex)!;\r\n        this.booleans[i]=value;\r\n    }\r\n    SetInteger(outConn: FlowchartOutputConnector, value: number): void {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(1)!.get(outConn.GlobalConnectorIndex)!;\r\n        this.integers[i]=value;\r\n    }\r\n    SetFloat(outConn: FlowchartOutputConnector, value: number): void {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(2)!.get(outConn.GlobalConnectorIndex)!;\r\n        this.floats[i]=value;\r\n    }\r\n    SetColor(outConn: FlowchartOutputConnector, value: string): void {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(3)!.get(outConn.GlobalConnectorIndex)!;\r\n        this.colors[i]=value;\r\n    }\r\n    GetBoolean(inConn: FlowchartInputConnector): boolean {\r\n        \r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(0)!.get(inConn.GetGlobalConnectorIndexOfSignalSource())!;\r\n        return this.booleans[i];\r\n    }\r\n    GetInteger(inConn: FlowchartInputConnector): number {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(1)!.get(inConn.GetGlobalConnectorIndexOfSignalSource())!;\r\n        return this.integers[i];\r\n    }\r\n    GetFloat(inConn: FlowchartInputConnector): number {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(2)!.get(inConn.GetGlobalConnectorIndexOfSignalSource())!;\r\n        return this.floats[i];\r\n    }\r\n    GetColor(inConn: FlowchartInputConnector): string {\r\n        let i = this.sortedOperatorsAndMaps.typeIndex2globalConnectorIndex2adressOffset.get(3)!.get(inConn.GetGlobalConnectorIndexOfSignalSource())!;\r\n        return this.colors[i];\r\n    }\r\n\r\n    public Start(warmstart:boolean=false){\r\n        if(!warmstart) this.resetDatastructures();\r\n        this.running=true;\r\n        for(let o of this.sortedOperatorsAndMaps.sortedOperators){\r\n            o.OnSimulationStart(this);\r\n        }\r\n        window.requestAnimationFrame(()=>this.Step());\r\n\r\n    }\r\n\r\n    public Stop(){\r\n        this.running=false;\r\n    }\r\n\r\n\r\n    Step():void{\r\n        this.millisSince1970= Date.now();\r\n        for(let o of this.sortedOperatorsAndMaps.sortedOperators){\r\n            o.OnSimulationStep(this);\r\n        }\r\n        //colorize booleans links\r\n        for(let kv of this.sortedOperatorsAndMaps.typeIndex2adressOffset2ListOfLinks.get(0)!.entries())\r\n        {\r\n            let adressOffset=kv[0];\r\n            if(adressOffset<2) continue;\r\n            let value = this.booleans[adressOffset]\r\n            let linksToChange=kv[1];\r\n            linksToChange.forEach((e)=>{\r\n                e.SetColor(value?\"red\":\"grey\");\r\n                e.SetCaption(\"\"+value);\r\n            });\r\n        }\r\n\r\n        //colorize integers links\r\n        for(let kv of this.sortedOperatorsAndMaps.typeIndex2adressOffset2ListOfLinks.get(1)!.entries())\r\n        {\r\n            let adressOffset=kv[0];\r\n            if(adressOffset<2) continue;\r\n            let value = this.integers[adressOffset]\r\n            let linksToChange=kv[1];\r\n            linksToChange.forEach((e)=>{\r\n                e.SetCaption(\"\"+value);\r\n            });\r\n        }\r\n        //colorize floats links\r\n        for(let kv of this.sortedOperatorsAndMaps.typeIndex2adressOffset2ListOfLinks.get(2)!.entries())\r\n        {\r\n            let adressOffset=kv[0];\r\n            if(adressOffset<2) continue;\r\n            let value = this.floats[adressOffset]\r\n            let linksToChange=kv[1];\r\n            linksToChange.forEach((e)=>{\r\n                e.SetCaption(\"\"+value);\r\n            });\r\n        }\r\n        //colorize colors links\r\n        for(let kv of this.sortedOperatorsAndMaps.typeIndex2adressOffset2ListOfLinks.get(3)!.entries())\r\n        {\r\n            let adressOffset=kv[0];\r\n            if(adressOffset<2) continue;\r\n            let value = this.colors[adressOffset]\r\n            let linksToChange=kv[1];\r\n            linksToChange.forEach((e)=>{\r\n                e.SetCaption(value);\r\n                e.SetColor(value);\r\n            });\r\n        }\r\n        if(this.running){\r\n            window.requestAnimationFrame(()=>this.Step());\r\n        }\r\n        else{\r\n            for(let o of this.sortedOperatorsAndMaps.sortedOperators){\r\n                o.OnSimulationStop(this);\r\n            }\r\n            for(let types of this.sortedOperatorsAndMaps.typeIndex2adressOffset2ListOfLinks.values())\r\n            {\r\n                for(let kv of types.entries()){\r\n                    let adressOffset=kv[0];\r\n                    if(adressOffset<2) continue;\r\n                    let value = this.booleans[adressOffset]\r\n                    let linksToChange=kv[1];\r\n                    linksToChange.forEach((e)=>{\r\n                        e.SetColor(\"blue\");\r\n                        e.SetCaption(\"\");\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    GetMillis(): number {\r\n        return this.millisSince1970;\r\n    }\r\n\r\n}","import { StringNumberTuple } from \"../utils\";\r\nexport default function(){ return [\r\n\tnew StringNumberTuple(\"No Song\", 0),\r\n\tnew StringNumberTuple(\"positive\", 1),\r\n\tnew StringNumberTuple(\"negative\", 2),\r\n\tnew StringNumberTuple(\"Barbie_girl\", 3),\r\n\tnew StringNumberTuple(\"HauntedHouse\", 4),\r\n\tnew StringNumberTuple(\"axelf\", 5),\r\n\tnew StringNumberTuple(\"Bond_007\", 6),\r\n];\r\n};\r\n","//https://en.wikipedia.org/wiki/Topological_sorting\r\n\r\n\r\nenum MarkerState\r\n{\r\n    NONE,\r\n    TEMPORARY,\r\n    PERMANENT,\r\n}\r\n\r\nexport class  NodeWrapper<N> {\r\n    constructor(private payload:N) {\r\n        this.Mark=MarkerState.NONE;\r\n        this.DependendNodes=[];\r\n    }\r\n    public Mark:MarkerState\r\n    public DependendNodes:NodeWrapper<N>[];\r\n    get Payload() {return this.payload;}\r\n};\r\n\r\nexport class TopologicalSortDFS<N>{\r\n    private L:Array<NodeWrapper<N>>;\r\n    constructor()\r\n    {\r\n        this.L=new Array<NodeWrapper<N>>();\r\n    }\r\n\r\n    public sort(headNode:Array<NodeWrapper<N>>)\r\n    {\r\n        this.L=new Array<NodeWrapper<N>>();\r\n        headNode.forEach((n)=>this.visit(n));\r\n        return this.L;\r\n    }\r\n\r\n    private visit(n:NodeWrapper<N>){\r\n        if(n.Mark==MarkerState.PERMANENT) return;\r\n        if(n.Mark==MarkerState.TEMPORARY) throw new Error(\"not a DAG\");\r\n        n.Mark=MarkerState.TEMPORARY;\r\n        for (const d of n.DependendNodes) {\r\n            this.visit(d);\r\n        }\r\n        n.Mark=MarkerState.PERMANENT;\r\n        this.L.push(n);\r\n    }\r\n}","export class Utils\r\n{\r\n    public static EventCoordinatesInSVG(evt:MouseEvent, element:Element, positionRatio:number=1):Location2D {\r\n        let rect = element.getBoundingClientRect();\r\n        return {x: (evt.clientX - rect.left)/positionRatio, y:(evt.clientY - rect.top)/positionRatio}\r\n    }\r\n}\r\n\r\nexport interface Location2D {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport interface KeyValueTuple {\r\n    key: string;\r\n    value: any;\r\n}\r\n\r\nexport class StringNumberTuple{\r\n    public constructor(public s:string, public n:number){}\r\n}\r\n\r\n\r\nexport class $\r\n{\r\n    public static readonly SVGNS = \"http://www.w3.org/2000/svg\";\r\n    public static readonly XLINKNS = \"http://www.w3.org/1999/xlink\";\r\n    public static readonly HTMLNS = \"http://www.w3.org/1999/xhtml\";\r\n\r\n    public static Svg(parent: Element, type:string,  attributes:string[], classes?: string[]):SVGElement {\r\n        return  parent.appendChild(<SVGElement>$.Elem($.SVGNS, type, attributes, classes));\r\n    }\r\n\r\n    //<svg class=\"icon icon-wastebasket\"><use xlink:href=\"#icon-wastebasket\"></use></svg>\r\n    public static SvgIcon(parent: Element, iconname:string):SVGSVGElement\r\n    {\r\n        let svg = <SVGSVGElement>$.Svg(parent, \"svg\", [], [\"icon\", \"icon-\"+iconname]);\r\n        let use =$.Svg(svg, \"use\", [], []);\r\n        use.setAttributeNS(this.XLINKNS, \"href\", \"#icon-\"+iconname);\r\n        parent.appendChild(svg);\r\n        return svg;\r\n    }\r\n\r\n    public static ColorNumColor2ColorDomString(num:number):string {\r\n        let str = num.toString(16);\r\n        while (str.length < 6) str = \"0\" + num;\r\n        return \"#\"+str;\r\n    }\r\n\r\n    public static ColorDomString2ColorNum(colorString: string):number {\r\n        return parseInt(colorString.substring(1), 16);\r\n    }\r\n\r\n    public static Html(parent: Element, type:string,  attributes:string[], classes?: string[], textContent?:string):HTMLElement {\r\n        return parent.appendChild(<HTMLElement>$.Elem($.HTMLNS, type, attributes, classes, textContent));\r\n    }\r\n\r\n    public static HtmlAsFirstChild(parent: Element, type:string,  attributes:string[], classes?: string[], textContent?:string):HTMLElement {\r\n        if(parent.firstChild)\r\n            return parent.insertBefore(<HTMLElement>$.Elem($.HTMLNS, type, attributes, classes, textContent), parent.firstChild);\r\n        else\r\n            return parent.appendChild(<HTMLElement>$.Elem($.HTMLNS, type, attributes, classes, textContent));\r\n    }\r\n\r\n    private static Elem(ns:string, type:string, attributes:string[], classes?: string[], textContent?:string):Element\r\n    {\r\n        let element = document.createElementNS(ns, type);\r\n        if(classes)\r\n        {\r\n            for (const clazz of classes) {\r\n                element.classList.add(clazz);\r\n            }\r\n        }\r\n        let i:number;\r\n        for(i=0;i<attributes.length;i+=2)\r\n        {\r\n            element.setAttribute(attributes[i], attributes[i+1]);\r\n        }\r\n        if(textContent)\r\n        {\r\n            element.textContent=textContent;\r\n        }\r\n        return element;\r\n    }\r\n\r\n    public static InputNumber(table:HTMLTableSectionElement, min:number, max:number, key:string, cfg:KeyValueTuple[]|null):HTMLInputElement\r\n    {\r\n        let value:number=0;\r\n        if(cfg!=null)\r\n        {\r\n            for (const e of cfg) {\r\n                if(e.key==key && !isNaN(e.value)){\r\n                    value=e.value;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let tr=$.Html(table, \"tr\", [],[\"develop-propertygrid-tr\"]);\r\n        $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"], key);\r\n        let inputContainer = $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"]);\r\n        return <HTMLInputElement>$.Html(inputContainer, \"input\", [\"type\", \"number\", \"min\", \"\"+Math.round(min), \"max\", \"\"+Math.round(max), \"value\", \"\"+Math.round(value),]);\r\n    }\r\n\r\n    public static InputSelect(table:HTMLTableSectionElement, displayValueAndKeyvalues:StringNumberTuple[], key:string, cfg:KeyValueTuple[]|null):HTMLSelectElement\r\n    {\r\n        let value:number=0;\r\n        if(cfg!=null)\r\n        {\r\n            for (const e of cfg) {\r\n                if(e.key==key && !isNaN(e.value)){\r\n                    value=e.value;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let tr=$.Html(table, \"tr\", [],[\"develop-propertygrid-tr\"]);\r\n        $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"], key);\r\n        let inputContainer = $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"]);\r\n        let select = <HTMLSelectElement>$.Html(inputContainer, \"select\", [], []);\r\n        for(let i=0;i<displayValueAndKeyvalues.length;i++)\r\n        {\r\n            let option = $.Html(select, \"option\", [\"value\", \"\"+displayValueAndKeyvalues[i].n], [], displayValueAndKeyvalues[i].s);\r\n            if(i==value){\r\n                option.setAttribute(\"selected\", \"\");\r\n            }\r\n        }\r\n        return select;\r\n    }\r\n\r\n   \r\n\r\n    public static InputColor(table:HTMLTableSectionElement, key:string, cfg:KeyValueTuple[]|null):HTMLInputElement\r\n    {\r\n        let value:string=\"#ff0000\";\r\n        if(cfg!=null)\r\n        {\r\n            for (const e of cfg) {\r\n                if(e.key==key){\r\n                    value=e.value;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let tr=$.Html(table, \"tr\", [],[\"develop-propertygrid-tr\"]);\r\n        $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"], key);\r\n        let inputContainer = $.Html(tr, \"td\", [],[\"develop-propertygrid-td\"]);\r\n        return <HTMLInputElement>$.Html(inputContainer, \"input\", [\"type\", \"color\",  \"value\", value]);\r\n    }\r\n}"],"file":"bundle-min.js"}